{"version":3,"sources":["reducers/dataReducer.js","reducers/index.js","actions/types.js","store.js","actions/dataActions.js","components/EnterID.js","components/HomePage.js","items/Slider.js","items/TradeOff.jsx","items/TradeoffTwo.jsx","items/TradeoffThree.jsx","items/StaticText.js","items/NormalCurveSurvey.jsx","items/Histogram.js","components/Experiment.js","components/Success.js","components/PreviewEnterID.js","components/PreviewExpt.js","components/PreviewSuccess.js","App.js","serviceWorker.js","index.js"],"names":["initialState","dbInfo","exptToDisplay","participantID","questionKeys","numQ","Number","isFinalQ","answer","fileContent","combineReducers","expt","state","action","type","payload","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","storeDBInfo","which_database","which_collection","dispatch","db","col","getExpt","which_db","study_name","expt_name","API_URL","axios","get","then","res","experiments","data","thisExpt","forEach","element","exptName","storePartID","part_id","sendExpt","which_col","dataToPOST","post","storeQKeys","keys","setNumQ","num","is","storeAnswer","question","que","ans","EnterID","props","ParticipantID","onChange","bind","showExpt","this","getData","username","match","params","studyExpt","studyName","split","e","setState","target","name","value","allKeys","Object","console","log","filter","str","charAt","length","history","push","className","onClick","Component","connect","HomePage","Slider","resetState","onSubmit","showSlider","childRef","setWhichItem","undefined","min","lowRange","max","highRange","sliderCSVKey","submitted","style","color","TradeOff","sliderRef","React","createRef","slider2Ref","threeGraphRef","rectRef","svgRef","graphColRef","refLine1Ref","refLine2Ref","refLine4Ref","refLine3Ref","refLine6Ref","refLine5Ref","refLine7Ref","refLine8Ref","stroke1Ref","areaRef","onChange2","rectReturn1","rectReturn2","rectReturn3","rectReturn4","rectReturn5","rectReturn6","textReturn1","changeGraphColNumber","line1","changeGraphNumber","changeStroke1","onChange1","noAnswer","reply","sliderPositionTO","sliderPos","questionTO","questionTOKey","newColor","current","fourGraphOne","threeGraphOne","line1Height","line2Height","line3Height","line4Height","line5Height","line6Height","line7Height","line8Height","stroke1","stroke2","threeGraphs","xPos","yPos","x","y","stroke","fill","height","rect1Arr","width","rectWidth","fillOpacity","strokeOpacity","rect2Arr","rect3Arr","rect4Arr","rect5Arr","rect6Arr","rect7Arr","rect8Arr","xPos1","xPos2","yPos1","yPos2","x1","x2","y1","y2","tedxt","margin","textAlign","class","rectReturn9","rectReturn10","rectReturn7","rectReturn8","size","ref","list","left","top","showTradeOff","TradeoffTwo","TradeoffThree","StaticText","showItem","text","imageURLs","Images","sth","src","map","imag","padding","parsedLink","display","flexDirection","justifyContent","alignItems","flexWrap","NormalCurveSurvey","lengthRef","startPos1Ref","startPos2Ref","tagRef1","tagRef2","dotReturn","curveArea","triMouseDown","triDrag","triUp","svgColReturn","updateTag1","updateTag2","displayTag1","displayTag2","hideTag1","hideTag2","returnTri1","returnTri2","questionNCKey","key1","graph1legend","key2","graph2legend","col11","col21","innerHTML","xPosOrig","CX","distancing1","distancing","circRad","maxLength","CY","ceilDist","onMouseEnter","onMouseLeave","onMouseMove","color1","cx","cy","r","distancing2","color2","fixCurve1","points","triCent1","onMouseDown","fixCurve2","triCent2","dragger","distFromCent","variance","triCentCol1","variance1","triCentCol2","variance2","svg","pt","createSVGPoint","clientX","svgP","matrixTransform","getScreenCTM","inverse","preventDefault","mousePointerRange","Math","round","axisStart","colRelative","edgeLim","axisStartCol","col22","len2","axisEndCol","endCol","col12","len1","svgPre","ptPre","svgPPre","prevState","triDown","cols","svgColPlacement","overlapVals","abs","clientY","elem","onMouseUp","questionNC","svgWidth","svgHeight","Array","colValHeiS","row","colValHeiS2","dotReturn2","axisEnd","tickNum","tick","tickDist","textAnchor","lowVal","rangeVal","text-anchor","colNum","backgroundColor","graph1","graph2","unitHeight","ceil","colNumInit","internalLength","edgeCol","edgeLength","axisWidth","startPos1","colNumVal","startPos2","axisLength","parseInt","isDown","rectX","down","svgX","colLim1","colLim2","showCoors","Histogram","graphRef","qRef","minRef","maxRef","drawChart","questionHistKey","histData","d3","append","attr","selectAll","enter","d","i","vertAlign","questionHist","position","histLowRange","histHighRange","step","checked","minVal","maxVal","Experiment","whichItem","onNextQuestion","onFinalSubmit","whichSubmit","alert","nextQ","toString","childSlider","nextQuestion","childNormalCurve","childTradeOff","childTradeoffTwo","childTradeoffThree","childStaticText","itemName","key","qKey","sliderPosThree","questionTOTwo","sliderPostwo","includes","dataFileName","dataFileContent","fileName","histFileContent","childHistogram","participant","displayExpt","Success","finalObj","entry","condition","link","href","PreviewEnterID","PreviewExpt","PreviewSuccess","require","App","basename","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"0OAaMA,G,MAAe,CACnBC,OAAQ,GACRC,cAAe,GACfC,cAAe,GACfC,aAAc,GACdC,KAAMC,OACNC,UAAU,EACVC,OAAQ,GACRC,YAAa,KClBAC,cAAgB,CAC7BC,KDoBa,WAAwC,IAA/BC,EAA8B,uDAAtBZ,EAAca,EAAQ,uCACpD,OAAQA,EAAOC,MACb,IE1BmB,UF2BjB,OAAO,2BACFF,GADL,IAEEX,OAAQY,EAAOE,UAEnB,IE9BoB,WF+BlB,OAAO,2BACFH,GADL,IAEEV,cAAeW,EAAOE,UAE1B,IElCmB,UFmCjB,OAAO,2BACFH,GADL,IAEET,cAAeU,EAAOE,UAE1B,IErCkB,SFsChB,OAAO,2BACFH,GADL,IAEER,aAAcS,EAAOE,UAEzB,IEzCiB,QF0Cf,OAAO,2BACFH,GADL,IAEEP,KAAMQ,EAAOE,UAEjB,IE7CmB,UF8CjB,OAAO,2BACFH,GADL,IAEEL,SAAUM,EAAOE,UAErB,IEjDkB,SFkDhB,OAAO,2BACFH,GADL,IAEEJ,OAAO,GAAD,mBAAMI,EAAMJ,QAAZ,CAAoBK,EAAOE,YAErC,IErDqB,YFsDnB,OAAO,2BACFH,GADL,IAEEH,YAAaI,EAAOE,UAExB,QACE,OAAOH,MG9DPI,EAAa,CAACC,KAWLC,EATDC,YACZC,EAJmB,GAMnBC,YACEC,IAAe,WAAf,EAAmBN,K,2DCMVO,EAAc,SAACC,EAAgBC,GAAjB,OAAsC,SAAAC,GAC/DA,EAAS,CACPZ,KFnBmB,UEoBnBC,QAAS,CACPY,GAAIH,EACJI,IAAKH,OASEI,EAAU,SAACC,EAAUC,EAAYC,GAAvB,OAAqC,SAAAN,GAC1D,IAAMO,EAAU,mDACdH,EADc,mBACuBC,EACvCG,IACGC,IAAIF,GACJG,MAAK,SAAAC,GACJ,IAAMC,EAAcD,EAAIE,KAAKD,YACzBE,EAAW,GACfF,EAAYG,SAAQ,SAAAC,GACdA,EAAQC,UAAYX,IACtBQ,EAAWE,MAGfhB,EAAS,CACPZ,KF5CgB,WE6ChBC,QAASyB,SASJI,EAAc,SAACC,GAAD,OAAa,SAAAnB,GACtCA,EAAS,CACPZ,KFvDmB,UEwDnBC,QAAS8B,MASAC,EAAW,SAAChB,EAAUiB,EAAWC,GAAtB,OAAqC,SAAAtB,GAC3D,IAAMO,EAAU,mDACdH,EAAW,IAAMiB,EACnBb,IACGe,KAAKhB,EAASe,GACdZ,MAAK,SAAAC,SASGa,EAAa,SAACC,GAAD,OAAU,SAAAzB,GAClCA,EAAS,CACPZ,KF/EkB,SEgFlBC,QAASoC,MASAC,EAAU,SAACC,GAAD,OAAS,SAAA3B,GAC9BA,EAAS,CACPZ,KF1FiB,QE2FjBC,QAASsC,MASA9C,EAAW,SAAC+C,GAAD,OAAQ,SAAA5B,GAC9BA,EAAS,CACPZ,KFrGmB,UEsGnBC,QAASuC,MAQAC,EAAc,SAACC,EAAUhD,GAAX,OAAsB,SAAAkB,GAC/CA,EAAS,CACPZ,KF/GkB,SEgHlBC,QAAS,CACP0C,IAAKD,EACLE,IAAKlD,OCtGLmD,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDhD,MAAQ,CACXiD,cAAe,IAGjB,EAAKC,SAAW,EAAKA,SAASC,KAAd,gBAChB,EAAKC,SAAW,EAAKA,SAASD,KAAd,gBAPC,E,gEAWjBE,KAAKC,UAEL,IAAMC,EAAWF,KAAKL,MAAMQ,MAAMC,OAAOF,SACnCG,EAAYL,KAAKL,MAAMQ,MAAMC,OAAO1D,KAG1CsD,KAAKL,MAAMrC,YAAY4C,EAAUG,K,gCAOjC,IAAMH,EAAWF,KAAKL,MAAMQ,MAAMC,OAAOF,SACnCI,EAAYN,KAAKL,MAAMQ,MAAMC,OAAO1D,KAAK6D,MAAM,KAAK,GACpD7B,EAAWsB,KAAKL,MAAMQ,MAAMC,OAAO1D,KAAK6D,MAAM,KAAK,GACzDP,KAAKL,MAAM/B,QAAQsC,EAAUI,EAAW5B,K,+BAGjC8B,GACPR,KAAKS,SAAL,eAAiBD,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,U,iCAO1CZ,KAAKL,MAAMhB,YAAYqB,KAAKrD,MAAMiD,eAClC,IAAMM,EAAWF,KAAKL,MAAMQ,MAAMC,OAAOF,SACnCG,EAAYL,KAAKL,MAAMQ,MAAMC,OAAO1D,KACtCP,EAAe,GACnB,GAAI6D,KAAKL,MAAMjD,KAAKT,cAAe,CACjC,IAAM4E,EAAUC,OAAO5B,KAAKc,KAAKL,MAAMjD,KAAKT,eAC5C8E,QAAQC,IAAIH,GAEZ1E,EAAe0E,EAAQI,QAAO,SAAAC,GAAG,MAAqB,KAAjBA,EAAIC,OAAO,MAChDnB,KAAKL,MAAMV,WAAW9C,GAGG,GAAvBA,EAAaiF,QACfpB,KAAKL,MAAMrD,UAAS,GAEtB0D,KAAKL,MAAMR,QAAQ,GAEnBa,KAAKL,MAAM0B,QAAQC,KAAK,SAAWpB,EAAW,IAAMG,EAClD,IAAMlE,EAAa,M,+BAIrB,IAAMuC,EAAWsB,KAAKL,MAAMQ,MAAMC,OAAO1D,KACvC,OACE,yBAAK6E,UAAU,aAAf,oBACiB,6BACjB,2BAAI7C,GACJ,6BAAK,6BAHL,yBAIsB,4BACtB,2BAAO7B,KAAK,OAAO8D,KAAK,gBACtBC,MAAOZ,KAAKrD,MAAMiD,cAAeC,SAAUG,KAAKH,WAClD,6BACA,2BAAOhD,KAAK,SAAS0E,UAAU,MAAMX,MAAM,mBACzCY,QAASxB,KAAKD,WAChB,6BAAK,6BAVL,6F,GA/Dc0B,aAiGPC,eALS,SAAA/E,GAAK,MAAK,CAChCD,KAAMC,EAAMD,KACZR,cAAeS,EAAMT,iBAKrB,CAAEoB,cAAaqB,cAAaf,UAASqB,aAAYE,UAAS7C,YAF7CoF,CAGbhC,GC1GaiC,E,uKATX,OACE,yBAAKJ,UAAU,aACb,qDACA,6G,GALeE,aCWjBG,E,kDACJ,aAAe,IAAD,8BAEZ,gBACKjF,MAAQ,EAAKZ,aAElB,EAAK8F,WAAa,EAAKA,WAAW/B,KAAhB,gBAClB,EAAKD,SAAW,EAAKA,SAASC,KAAd,gBAChB,EAAKgC,SAAW,EAAKA,SAAShC,KAAd,gBAChB,EAAKiC,WAAa,EAAKA,WAAWjC,KAAhB,gBARN,E,yDAmBZE,KAAKS,SAAST,KAAKjE,gB,2CAKnBiG,EADqBhC,KAAKL,MAAlBqC,UACChC,MACTA,KAAKC,UACLD,KAAKL,MAAMsC,aAAa,Y,8CAKxBD,EADqBhC,KAAKL,MAAlBqC,eACCE,K,gCAIT,IAAMxE,EAAKsC,KAAKL,MAAMjD,KAAKV,OAAO0B,GAE5B4C,EAAYN,KAAKL,MAAMjD,KAAKV,OAAO2B,IAAI4C,MAAM,KAAK,GAClD7B,EAAWsB,KAAKL,MAAMjD,KAAKV,OAAO2B,IAAI4C,MAAM,KAAK,GACvDP,KAAKL,MAAM/B,QAAQF,EAAI4C,EAAW5B,K,+BAG3B8B,GACPR,KAAKS,SAAL,eAAiBD,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,U,mCAI1C,OACE,yBAAKW,UAAU,aACZvB,KAAKL,MAAMJ,SADd,IACwB,6BACtB,2BACE1C,KAAK,QACLsF,IAAKnC,KAAKL,MAAMyC,SAChBC,IAAKrC,KAAKL,MAAM2C,UAChB3B,KAAK,QACLC,MAAOZ,KAAKrD,MAAMiE,MAClBf,SAAUG,KAAKH,WAEhBG,KAAKrD,MAAMiE,MAVd,IAUqB,gC,iCAMNZ,KAAKL,MAAMJ,SAA5B,IACMgD,EAAevC,KAAKL,MAAM4C,aAEhCvC,KAAKL,MAAML,YAAYiD,EAAcvC,KAAKrD,MAAMiE,OAChDZ,KAAKS,SAAS,CAAE+B,WAAW,M,+BAI3B,OACE,6BACGxC,KAAK+B,aADR,IACsB,8BAEjB/B,KAAKrD,MAAM6F,WACZ,6BACE,2BAAO3F,KAAK,SAAS0E,UAAU,MAAMX,MAAM,KACzCY,QAASxB,KAAK8B,WAFlB,IAE8B,6BAC5B,uBAAGW,MAAO,CAAEC,MAAO,SAAnB,qI,mCApER,MAAO,CACLF,WAAW,EACX5B,MAAO,O,GAfQa,aAsGNC,eAJS,SAAA/E,GAAK,MAAK,CAChCD,KAAMC,EAAMD,QAKZ,CAAEkB,UAAS0B,eAFEoC,CAGbE,GC1GIe,G,wDACJ,aAAe,IAAD,8BAEZ,gBACKC,UAAYC,IAAMC,YACvB,EAAKC,WAAaF,IAAMC,YACxB,EAAKE,cAAgBH,IAAMC,YAC3B,EAAKG,QAAUJ,IAAMC,YACrB,EAAKI,OAASL,IAAMC,YACpB,EAAKK,YAAYN,IAAMC,YACvB,EAAKM,YAAcP,IAAMC,YACzB,EAAKO,YAAcR,IAAMC,YAEzB,EAAKQ,YAAcT,IAAMC,YACzB,EAAKS,YAAcV,IAAMC,YACzB,EAAKU,YAAcX,IAAMC,YACzB,EAAKW,YAAcZ,IAAMC,YACzB,EAAKY,YAAcb,IAAMC,YACzB,EAAKa,YAAcd,IAAMC,YAEzB,EAAKc,WAAaf,IAAMC,YACxB,EAAKe,QAAUhB,IAAMC,YACrB,EAAKgB,UAAY,EAAKA,UAAUhE,KAAf,gBAIjB,EAAKiE,YAAc,EAAKA,YAAYjE,KAAjB,gBACnB,EAAKkE,YAAc,EAAKA,YAAYlE,KAAjB,gBACnB,EAAKmE,YAAc,EAAKA,YAAYnE,KAAjB,gBACnB,EAAKoE,YAAc,EAAKA,YAAYpE,KAAjB,gBACnB,EAAKqE,YAAc,EAAKA,YAAYrE,KAAjB,gBACnB,EAAKsE,YAAc,EAAKA,YAAYtE,KAAjB,gBACnB,EAAKuE,YAAc,EAAKA,YAAYvE,KAAjB,gBACnB,EAAKwE,qBAAuB,EAAKA,qBAAqBxE,KAA1B,gBAC5B,EAAKyE,MAAQ,EAAKA,MAAMzE,KAAX,gBACb,EAAK0E,kBAAoB,EAAKA,kBAAkB1E,KAAvB,gBACzB,EAAK2E,cAAc,EAAKA,cAAc3E,KAAnB,gBAInB,EAAK4E,UAAY,EAAKA,UAAU5E,KAAf,gBAGjB,EAAK+B,WAAa,EAAKA,WAAW/B,KAAhB,gBAElB,EAAKgC,SAAW,EAAKA,SAAShC,KAAd,gBAChB,EAAK6E,SAAW,EAAKA,SAAS7E,KAAd,gBAGhB,EAAKnD,MAAQ,EAAKZ,aAhDN,E,yDAwNRiE,KAAKS,SAAST,KAAKjE,gB,2CAMrBiG,EADqBhC,KAAKL,MAAlBqC,UACChC,MACTA,KAAKC,UACLD,KAAKL,MAAMsC,aAAa,e,8CAKxBD,EADqBhC,KAAKL,MAAlBqC,eACCE,K,gCAIP,IAAMxE,EAAKsC,KAAKL,MAAMjD,KAAKV,OAAO0B,GAC5B4C,EAAYN,KAAKL,MAAMjD,KAAKV,OAAO2B,IAAI4C,MAAM,KAAK,GAClD7B,EAAWsB,KAAKL,MAAMjD,KAAKV,OAAO2B,IAAI4C,MAAM,KAAK,GACvDP,KAAKL,MAAM/B,QAAQF,EAAI4C,EAAW5B,K,iCAIlC,IACMkG,EAAM,CACVC,iBAAkB7E,KAAKrD,MAAMmI,WAI/B9E,KAAKL,MAAML,YANQ,WAMgBsF,GAEnC5E,KAAKS,SAAS,CAAE+B,WAAW,M,iCAG3B,IAAMuC,EAAa/E,KAAKL,MAAMqF,cAE9BhF,KAAKL,MAAML,YAAYyF,EADL,wBAElB/E,KAAKS,SAAS,CAAE+B,WAAW,M,6CAG3B,IAAMyC,EAAWjF,KAAKmD,YAAY+B,QAAQtE,MACzB,YAAbqE,IACAjF,KAAKS,SAAS,CAAC0E,cAAc,IAC7BnF,KAAKS,SAAS,CAAC2E,eAAe,KAEjB,YAAbH,IACAjF,KAAKS,SAAS,CAAC0E,cAAc,IAC7BnF,KAAKS,SAAS,CAAC2E,eAAe,KAEjB,YAAbH,IACAjF,KAAKS,SAAS,CAAC0E,cAAc,IAC7BnF,KAAKS,SAAS,CAAC2E,eAAe,KAEjB,YAAbH,IACAjF,KAAKS,SAAS,CAAC0E,cAAc,IAC7BnF,KAAKS,SAAS,CAAC2E,eAAe,O,gCAG1B5E,GACRR,KAAKS,SAAL,eAAiBD,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,U,iCAEjCJ,GACTR,KAAKS,SAAS,CAAC4E,YAAY7E,M,gCAEnBA,GACRR,KAAKS,SAAS,CAAC6E,YAAY9E,M,gCAEnBA,GACRR,KAAKS,SAAS,CAAC8E,YAAY/E,M,gCAEnBA,GACRR,KAAKS,SAAS,CAAC+E,YAAYhF,M,gCAEnBA,GACRR,KAAKS,SAAS,CAACgF,YAAYjF,M,gCAEnBA,GACRR,KAAKS,SAAS,CAACiF,YAAYlF,M,gCAEnBA,GACRR,KAAKS,SAAS,CAACkF,YAAYnF,M,gCAEnBA,GACRR,KAAKS,SAAS,CAACmF,YAAYpF,M,sCAI3B,IAAMyE,EAAWjF,KAAK4D,WAAWsB,QAAQtE,MACxB,YAAbqE,IACFjF,KAAKS,SAAS,CAACoF,QAAQ,YACvB7F,KAAKS,SAAS,CAACqF,QAAQb,KAER,YAAbA,IACFjF,KAAKS,SAAS,CAACoF,QAAS,YACxB7F,KAAKS,SAAS,CAACqF,QAAQb,KAET,oBAAbA,IACDjF,KAAKS,SAAS,CAACoF,QAAQ,YACvB7F,KAAKS,SAAS,CAACqF,QAAS,aAEV,oBAAbb,IACDjF,KAAKS,SAAS,CAACoF,QAAQ,YACvB7F,KAAKS,SAAS,CAACqF,QAAS,aAEV,oBAAbb,IACDjF,KAAKS,SAAS,CAACoF,QAAQ,YACvB7F,KAAKS,SAAS,CAACqF,QAAS,aAEV,oBAAbb,IACDjF,KAAKS,SAAS,CAACoF,QAAQ,YACvB7F,KAAKS,SAAS,CAACqF,QAAS,e,0CAOT,SADA9F,KAAKgD,cAAckC,QAAQtE,MAE1CZ,KAAKS,SAAS,CAACsF,aAAa,IAG5B/F,KAAKS,SAAS,CAACsF,aAAa,M,kCAItBC,EAAMC,GAIhB,OAFA,0BACAC,EAAKF,EAAMG,EAAKF,EAAMG,OAAUpG,KAAKrD,MAAMkJ,QAASQ,KAAQrG,KAAKrD,MAAMkJ,QAASS,OAAU,IAAItG,KAAKrD,MAAM4J,SAASvG,KAAKrD,MAAMmI,WAAY0B,MAASxG,KAAKrD,MAAM8J,UAAWC,YAAc,MAAMC,cAAgB,U,kCAGlMX,EAAMC,GAIhB,OAFA,0BACAC,EAAKF,EAAMG,EAAKF,EAAMG,OAAUpG,KAAKrD,MAAMmJ,QAASO,KAAQrG,KAAKrD,MAAMmJ,QAASQ,OAAU,IAAItG,KAAKrD,MAAMiK,SAAS5G,KAAKrD,MAAMmI,WAAY0B,MAASxG,KAAKrD,MAAM8J,UAAWC,YAAc,MAAMC,cAAgB,U,kCAGlMX,EAAMC,GAIhB,OAFA,0BACAC,EAAKF,EAAMG,EAAKF,EAAMG,OAAU,UAAWC,KAAQrG,KAAKrD,MAAMkJ,QAASS,OAAU,IAAItG,KAAKrD,MAAMkK,SAAS7G,KAAKrD,MAAMmI,WAAY0B,MAASxG,KAAKrD,MAAM8J,UAAWC,YAAc,MAAMC,cAAgB,U,kCAGzLX,EAAMC,GAIhB,OAFA,0BACAC,EAAKF,EAAMG,EAAKF,EAAMG,OAAU,UAAWC,KAAQrG,KAAKrD,MAAMmJ,QAASQ,OAAU,IAAItG,KAAKrD,MAAMmK,SAAS9G,KAAKrD,MAAMmI,WAAY0B,MAASxG,KAAKrD,MAAM8J,UAAWC,YAAc,MAAMC,cAAgB,U,kCAGzLX,EAAMC,GAIhB,OAFA,0BACAC,EAAKF,EAAMG,EAAKF,EAAMG,OAAU,UAAWC,KAAQrG,KAAKrD,MAAMkJ,QAASS,OAAU,IAAItG,KAAKrD,MAAMoK,SAAS/G,KAAKrD,MAAMmI,WAAY0B,MAASxG,KAAKrD,MAAM8J,UAAWC,YAAc,MAAMC,cAAgB,U,kCAGzLX,EAAMC,GAIhB,OAFA,0BACAC,EAAKF,EAAMG,EAAKF,EAAMG,OAAU,UAAWC,KAAQrG,KAAKrD,MAAMmJ,QAASQ,OAAU,IAAItG,KAAKrD,MAAMqK,SAAShH,KAAKrD,MAAMmI,WAAY0B,MAASxG,KAAKrD,MAAM8J,UAAWC,YAAc,MAAMC,cAAgB,U,kCAGzLX,EAAMC,GAIhB,OAFA,0BACAC,EAAKF,EAAMG,EAAKF,EAAMG,OAAU,UAAWC,KAAQrG,KAAKrD,MAAMkJ,QAASS,OAAU,IAAItG,KAAKrD,MAAMsK,SAASjH,KAAKrD,MAAMmI,WAAY0B,MAASxG,KAAKrD,MAAM8J,UAAWC,YAAc,MAAMC,cAAgB,U,kCAGzLX,EAAMC,GAIhB,OAFA,0BACAC,EAAKF,EAAMG,EAAKF,EAAMG,OAAU,UAAWC,KAAQrG,KAAKrD,MAAMmJ,QAASQ,OAAU,IAAItG,KAAKrD,MAAMuK,SAASlH,KAAKrD,MAAMmI,WAAY0B,MAASxG,KAAKrD,MAAM8J,UAAWC,YAAc,MAAMC,cAAgB,U,kCAGzLX,EAAMC,GAIhB,OAFA,0BACAC,EAAKF,EAAMG,EAAKF,EAAMG,OAAU,UAAWC,KAAQ,UAAWC,OAAU,IAAItG,KAAKrD,MAAMoK,SAAS/G,KAAKrD,MAAMmI,WAAY0B,MAASxG,KAAKrD,MAAM8J,UAAWC,YAAc,MAAMC,cAAgB,U,mCAG/KX,EAAMC,GAIjB,OAFA,0BACAC,EAAKF,EAAMG,EAAKF,EAAMG,OAAU,UAAWC,KAAQ,UAAWC,OAAU,IAAItG,KAAKrD,MAAMoK,SAAS/G,KAAKrD,MAAMmI,WAAY0B,MAASxG,KAAKrD,MAAM8J,UAAWC,YAAc,MAAMC,cAAgB,U,4BAGlLQ,EAAMC,EAAMC,EAAMC,GAGtB,OADA,0BAAMC,GAAMJ,EAAQ,IAAKK,GAAM,IAAMJ,EAAOK,GAAMJ,EAAOK,GAAMJ,EAAOlB,OAAS,c,4BAG3Ee,EAAMC,EAAMC,EAAMC,GAGtB,OADA,0BAAMC,GAAMJ,EAAQ,IAAKK,GAAM,IAAMJ,EAAOK,GAAMJ,EAAOK,GAAMJ,EAAOlB,OAAS,c,kCAGrEJ,EAAMC,EAAM0B,GAEtB,OADW,0BAAMzB,EAAKF,EAAMG,EAAKF,GAAO0B,K,qCAK1C,IAAM5B,EAAc/F,KAAKrD,MAAMoJ,YAC/B,OAEI,6BACJ,yBAAKxE,UAAU,aACb,0CACA,yBAAKkB,MAAO,CAAE+D,MAAO,MAAOoB,OAAQ,SAClC,uBAAGnF,MAAO,CAAEoF,UAAW,SACpB7H,KAAKL,MAAMoF,cAId,yBAAKyB,MAAS,KAAMF,OAAU,IAAM7D,MAAO,GAAIqF,MAAQ,KAClD9H,KAAK+D,YAAY,IAAI,KACrB/D,KAAKgE,YAAY,IAAI,KACrBhE,KAAKiE,YAAY,IAAI,KACrBjE,KAAKkE,YAAY,IAAI,KACrBlE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KACvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KACvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KACvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KACvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAEvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KACvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KACvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KACvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KACvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KACvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KACvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KACvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KACvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAEvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KACvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KACvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KACvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KACvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGxBwB,EACE/F,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGzBwB,EACE/F,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGzBwB,EACE/F,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGzBwB,EACE/F,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAIzBwB,EACE/F,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAIzBwB,EACE/F,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAIzBwB,EACE/F,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAOzBwB,EACE/F,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGzBwB,EACE/F,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGzBwB,EACE/F,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGzBwB,EACE/F,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAIzBwB,EACE/F,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAKzBwB,EACE/F,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGzBwB,EACE/F,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGzBwB,EACE/F,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGzBwB,EACE/F,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAIzBwB,EACE/F,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAczBwB,EACE/F,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGzBwB,EACE/F,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGzBwB,EACE/F,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAKzBwB,EACE/F,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGzBwB,EACE/F,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAIzBwB,EACE/F,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGxBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KACvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KACvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KACvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KACvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAEvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KACvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KACvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KACvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KACvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAItBvE,KAAKrD,MAAMoJ,YACT/F,KAAKmE,YAAY,IAAI,KACrB,CACGnE,KAAKrD,MAAMyI,cACVpF,KAAK+H,YAAY,IAAI,KACrB/H,KAAKmE,YAAY,IAAI,MAK3BnE,KAAKrD,MAAMoJ,YACT/F,KAAKoE,YAAY,IAAI,KACrB,CACCpE,KAAKrD,MAAMyI,cACV,+BACApF,KAAKoE,YAAY,IAAI,MAKzBpE,KAAKrD,MAAMoJ,YACT,mCACA,CACG/F,KAAKrD,MAAMwI,aACVnF,KAAKgI,aAAa,IAAI,KACtBhI,KAAKiI,YAAY,IAAI,MAK3BjI,KAAKrD,MAAMoJ,YACT,mCACA,CACG/F,KAAKrD,MAAMwI,aACV,+BACAnF,KAAKkI,YAAY,IAAI,MAI5BlI,KAAKuE,MAAM,IAAI,IAAI,IAAI,KACvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KACvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KACvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAExBwB,EACE/F,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAKzBwB,EACE/F,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAEvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGzBwB,EACE/F,KAAKuE,MAAM,EAAE,EAAE,EAAE,GAGjBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAIzBwB,EACE/F,KAAKuE,MAAM,EAAE,EAAE,EAAE,GAEjBvE,KAAKuE,MAAM,IAAK,IAAI,IAAI,MAG5B,yBAAKuD,MAAQ,IAAItB,MAAS,KAAMF,OAAU,KAC1C,0BAAMJ,EAAK,IAAKC,EAAK,KAArB,kDACA,0BAAMD,EAAK,IAAKC,EAAK,KAArB,WACA,0BAAMD,EAAK,IAAKC,EAAK,KAArB,iBACA,0BAAMD,EAAK,IAAKC,EAAK,IAAKG,OAAU,GAAIE,MAAS,GAAIJ,OAAUpG,KAAKrD,MAAMkJ,QAASQ,KAAQrG,KAAKrD,MAAMkJ,UACtG,0BAAMK,EAAK,IAAKC,EAAK,KAArB,iBACA,0BAAMD,EAAK,IAAKC,EAAK,IAAKG,OAAU,GAAIE,MAAS,GAAIJ,OAAU,UAAWC,KAAQ,YAClF,0BAAMH,EAAK,IAAKC,EAAK,KAArB,eACA,0BAAMD,EAAK,IAAKC,EAAK,IAAKG,OAAU,GAAIE,MAAS,GAAIJ,OAAUpG,KAAKrD,MAAMmJ,QAASO,KAAQrG,KAAKrD,MAAMmJ,UAEtG,0BAAMI,EAAK,IAAKC,EAAK,KAArB,aACA,0BAAMD,EAAK,IAAKC,EAAK,KAArB,kBACA,0BAAMD,EAAK,GAAIC,EAAK,KAApB,KACA,0BAAMD,EAAK,GAAIC,EAAK,KAApB,MACA,0BAAMD,EAAK,GAAIC,EAAK,KAApB,MACA,0BAAMD,EAAK,GAAIC,EAAK,KAApB,MACA,0BAAMD,EAAK,GAAIC,EAAK,KAApB,MACA,0BAAMD,EAAK,GAAIC,EAAK,KAApB,OACA,0BAAMD,EAAK,IAAKC,EAAK,KAArB,KACA,0BAAMD,EAAK,IAAKC,EAAK,KAArB,MACA,0BAAMD,EAAK,IAAKC,EAAK,KAArB,MACA,0BAAMD,EAAK,IAAKC,EAAK,KAArB,MACA,0BAAMD,EAAK,IAAKC,EAAK,KAArB,MACA,0BAAM1D,MAAS,CAAC0F,KAAK,GAAIjC,EAAK,IAAKC,EAAK,KAAxC,OAEEJ,EACE,0BAAMG,EAAK,IAAKC,EAAK,KAArB,OAEA,0BAAMD,EAAK,GAAIC,EAAK,KAApB,OAGFJ,EACE,0BAAMG,EAAK,IAAKC,EAAK,KAArB,MAEA,0BAAMD,EAAK,GAAIC,EAAK,KAApB,MAGFJ,EACE,0BAAMG,EAAK,IAAKC,EAAK,KAArB,MAEA,0BAAMD,EAAK,GAAIC,EAAK,KAApB,MAGFJ,EACE,0BAAMG,EAAK,IAAKC,EAAK,KAArB,MAEA,0BAAMD,EAAK,GAAIC,EAAK,KAApB,MAGFJ,EACE,0BAAMG,EAAK,IAAKC,EAAK,KAArB,MAEA,0BAAMD,EAAK,GAAIC,EAAK,KAApB,MAGFJ,EACE,0BAAMG,EAAK,IAAKC,EAAK,KAArB,KACA,0BAAMD,EAAK,GAAIC,EAAK,KAApB,KAGFJ,EACE,0BAAMG,EAAK,IAAKC,EAAK,KAArB,KACA,0BAAMD,EAAK,IAAKC,EAAK,KAArB,OAGFJ,EACE,0BAAMG,EAAK,IAAKC,EAAK,MAErB,0BAAMD,EAAK,IAAKC,EAAK,KAArB,MAGFJ,EACE,0BAAMG,EAAK,IAAKC,EAAK,MAErB,0BAAMD,EAAK,IAAKC,EAAK,KAArB,MAGFJ,EACE,0BAAMG,EAAK,IAAKC,EAAK,MAErB,0BAAMD,EAAK,IAAKC,EAAK,KAArB,MAGFJ,EACE,0BAAMG,EAAK,IAAKC,EAAK,MAErB,0BAAMD,EAAK,IAAKC,EAAK,KAArB,MAGFJ,EACE,0BAAMG,EAAK,IAAKC,EAAK,KAArB,KACA,0BAAMD,EAAK,IAAKC,EAAK,KAArB,KAEJ,0BAAMD,EAAK,IAAKC,EAAK,KAArB,iBACA,0BAAMD,EAAK,IAAKC,EAAK,KAArB,uBAEEJ,EACE,0BAAMG,EAAK,IAAKC,EAAK,KAArB,WACA,0BAAMD,EAAK,IAAKC,EAAK,MAGvBJ,EACE,mCACA,0BAAMG,EAAK,IAAKC,EAAK,MAEzB,0BAAMD,EAAK,IAAKC,EAAK,MACrB,0BAAMD,EAAK,IAAKC,EAAK,MAEnBJ,EACE,0BAAMG,EAAK,IAAKC,EAAK,KAArB,WACA,0BAAMD,EAAK,IAAKC,EAAK,KAArB,uBAGFJ,EACE,mCACA,0BAAMG,EAAK,IAAKC,EAAK,KAArB,8BAKN,2BAAOtJ,KAAK,QAAQsF,IAAK,EAAGE,IAAMrC,KAAKrD,MAAM4J,SAASnF,OAAQ,EAChEG,UAAU,kBAAkB1B,SAAUG,KAAK0E,UAC3C/D,KAAK,YAAYC,MAAOZ,KAAKrD,MAAMmI,UAAWsD,IAAKpI,KAAK4C,UAAWyF,KAAO,YAC1E5F,MAAO,CAAE+D,MAAM,IAAK8B,KAAK,IAAKC,IAAI,U,+BAQpC,OAEA,6BACEvI,KAAKwI,eADP,IACuB,6BACvB,0BAAM/F,MAAO,CAAEC,MAAO,SAAW0F,IAAKpI,KAAK4C,aAExC5C,KAAKrD,MAAM6F,WACZ,6BACE,2BAAO3F,KAAK,SAAS0E,UAAU,eAAeX,MAAM,sBAClDY,QAASxB,KAAK8B,WAFlB,IAE8B,6BAC5B,uBAAGW,MAAO,CAAEC,MAAO,OAAQ8D,MAAO,MAAOoB,OAAQ,SAAjD,kJAHF,IAMO,6BACL,2BAAO/K,KAAK,SAAS0E,UAAU,MAAMX,MAAM,yBACzCY,QAASxB,KAAK2E,e,mCAnzBpB,MAAM,CACFnC,WAAW,EACXqD,QAAU,UACVC,QAAU,UACVW,UAAY,GACZ3B,UAAU,EACVyB,SAAU,CAAC,IAAK,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,KAAO,KAAO,KAAO,IACnKK,SAAU,CAAC,iBACX,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,eACA,iBACA,iBACA,iBACA,iBACA,iBACA,gBACA,gBACA,eACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,IACAC,SAAU,CAAC,IACX,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,gBACA,iBACA,gBACA,iBACA,eACA,iBACA,iBACA,iBACA,gBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,kBACAC,SAAU,CAAC,IACX,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,gBACA,iBACA,gBACA,iBACA,eACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,kBACAC,SAAU,CAAC,iBACX,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,gBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,gBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,IACAC,SAAU,CAAC,IAAK,iBAChB,iBACA,iBACA,iBACA,iBACA,gBACA,iBACA,iBACA,gBACA,iBACA,iBACA,gBACA,iBACA,iBACA,iBACA,iBACA,gBACA,iBACA,iBACA,iBACA,gBACA,iBACA,gBACA,iBACA,kBAEAC,SAAU,CAAC,GAAI,IACfC,SAAU,CAAC,GAAI,IACf7B,YAAY,GACZC,YAAY,GACZC,YAAY,GACZC,YAAY,GACZC,YAAY,GACZC,YAAY,GACZC,YAAY,GACZC,YAAY,GACZG,aAAa,EACbX,eAAe,EACfD,cAAc,O,GAhNH1D,cA04BRC,eAJS,SAAA/E,GAAK,MAAK,CAC/BD,KAAMC,EAAMD,QAKZ,CAAEkB,UAAS0B,eAFCoC,CAGZiB,GC74BG8F,E,kDACF,aAAe,IAAD,8BAEV,gBACK7F,UAAYC,IAAMC,YACvB,EAAKC,WAAaF,IAAMC,YACxB,EAAKE,cAAgBH,IAAMC,YAC3B,EAAKG,QAAUJ,IAAMC,YACrB,EAAKI,OAASL,IAAMC,YACpB,EAAKK,YAAYN,IAAMC,YACvB,EAAKM,YAAcP,IAAMC,YACzB,EAAKO,YAAcR,IAAMC,YAEzB,EAAKQ,YAAcT,IAAMC,YACzB,EAAKS,YAAcV,IAAMC,YACzB,EAAKU,YAAcX,IAAMC,YACzB,EAAKW,YAAcZ,IAAMC,YACzB,EAAKY,YAAcb,IAAMC,YACzB,EAAKa,YAAcd,IAAMC,YAEzB,EAAKc,WAAaf,IAAMC,YACxB,EAAKe,QAAUhB,IAAMC,YACrB,EAAKgB,UAAY,EAAKA,UAAUhE,KAAf,gBACjB,EAAKiE,YAAc,EAAKA,YAAYjE,KAAjB,gBACnB,EAAKkE,YAAc,EAAKA,YAAYlE,KAAjB,gBACnB,EAAKmE,YAAc,EAAKA,YAAYnE,KAAjB,gBACnB,EAAKoE,YAAc,EAAKA,YAAYpE,KAAjB,gBACnB,EAAKqE,YAAc,EAAKA,YAAYrE,KAAjB,gBACnB,EAAKsE,YAAc,EAAKA,YAAYtE,KAAjB,gBACnB,EAAKuE,YAAc,EAAKA,YAAYvE,KAAjB,gBACnB,EAAKwE,qBAAuB,EAAKA,qBAAqBxE,KAA1B,gBAC5B,EAAKyE,MAAQ,EAAKA,MAAMzE,KAAX,gBACb,EAAK0E,kBAAoB,EAAKA,kBAAkB1E,KAAvB,gBACzB,EAAK2E,cAAc,EAAKA,cAAc3E,KAAnB,gBAInB,EAAK4E,UAAY,EAAKA,UAAU5E,KAAf,gBAGjB,EAAK+B,WAAa,EAAKA,WAAW/B,KAAhB,gBAElB,EAAKgC,SAAW,EAAKA,SAAShC,KAAd,gBAChB,EAAK6E,SAAW,EAAKA,SAAS7E,KAAd,gBAGhB,EAAKnD,MAAQ,EAAKZ,aA7CR,E,yDAsNViE,KAAKS,SAAST,KAAKjE,gB,2CAMrBiG,EADqBhC,KAAKL,MAAlBqC,UACChC,MACTA,KAAKC,UACLD,KAAKL,MAAMsC,aAAa,qB,8CAKxBD,EADqBhC,KAAKL,MAAlBqC,eACCE,K,gCAIP,IAAMxE,EAAKsC,KAAKL,MAAMjD,KAAKV,OAAO0B,GAC5B4C,EAAYN,KAAKL,MAAMjD,KAAKV,OAAO2B,IAAI4C,MAAM,KAAK,GAClD7B,EAAWsB,KAAKL,MAAMjD,KAAKV,OAAO2B,IAAI4C,MAAM,KAAK,GACvDP,KAAKL,MAAM/B,QAAQF,EAAI4C,EAAW5B,K,iCAIlC,IACMkG,EAAM,CACVC,iBAAkB7E,KAAKrD,MAAMmI,WAI/B9E,KAAKL,MAAML,YANQ,cAMgBsF,GAEnC5E,KAAKS,SAAS,CAAE+B,WAAW,M,iCAG3B,IAAMuC,EAAa/E,KAAKL,MAAMqF,cAE9BhF,KAAKL,MAAML,YAAYyF,EADL,wBAElB/E,KAAKS,SAAS,CAAE+B,WAAW,M,6CAG3B,IAAMyC,EAAWjF,KAAKmD,YAAY+B,QAAQtE,MACzB,YAAbqE,IACAjF,KAAKS,SAAS,CAAC0E,cAAc,IAC7BnF,KAAKS,SAAS,CAAC2E,eAAe,KAEjB,YAAbH,IACAjF,KAAKS,SAAS,CAAC0E,cAAc,IAC7BnF,KAAKS,SAAS,CAAC2E,eAAe,KAEjB,YAAbH,IACAjF,KAAKS,SAAS,CAAC0E,cAAc,IAC7BnF,KAAKS,SAAS,CAAC2E,eAAe,KAEjB,YAAbH,IACAjF,KAAKS,SAAS,CAAC0E,cAAc,IAC7BnF,KAAKS,SAAS,CAAC2E,eAAe,O,gCAG1B5E,GACNR,KAAKS,SAAL,eAAiBD,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,U,iCAGnCJ,GACTR,KAAKS,SAAS,CAAC4E,YAAY7E,M,gCAEnBA,GACRR,KAAKS,SAAS,CAAC6E,YAAY9E,M,gCAEnBA,GACRR,KAAKS,SAAS,CAAC8E,YAAY/E,M,gCAEnBA,GACRR,KAAKS,SAAS,CAAC+E,YAAYhF,M,gCAEnBA,GACRR,KAAKS,SAAS,CAACgF,YAAYjF,M,gCAEnBA,GACRR,KAAKS,SAAS,CAACiF,YAAYlF,M,gCAEnBA,GACRR,KAAKS,SAAS,CAACkF,YAAYnF,M,gCAEnBA,GACRR,KAAKS,SAAS,CAACmF,YAAYpF,M,sCAI3B,IAAMyE,EAAWjF,KAAK4D,WAAWsB,QAAQtE,MACxB,YAAbqE,IACFjF,KAAKS,SAAS,CAACoF,QAAQ,YACvB7F,KAAKS,SAAS,CAACqF,QAAQb,KAER,YAAbA,IACFjF,KAAKS,SAAS,CAACoF,QAAS,YACxB7F,KAAKS,SAAS,CAACqF,QAAQb,KAET,oBAAbA,IACDjF,KAAKS,SAAS,CAACoF,QAAQ,YACvB7F,KAAKS,SAAS,CAACqF,QAAS,aAEV,oBAAbb,IACDjF,KAAKS,SAAS,CAACoF,QAAQ,YACvB7F,KAAKS,SAAS,CAACqF,QAAS,aAEV,oBAAbb,IACDjF,KAAKS,SAAS,CAACoF,QAAQ,YACvB7F,KAAKS,SAAS,CAACqF,QAAS,aAEV,oBAAbb,IACDjF,KAAKS,SAAS,CAACoF,QAAQ,YACvB7F,KAAKS,SAAS,CAACqF,QAAS,e,0CAOT,SADA9F,KAAKgD,cAAckC,QAAQtE,MAE1CZ,KAAKS,SAAS,CAACsF,aAAa,IAG5B/F,KAAKS,SAAS,CAACsF,aAAa,M,kCAItBC,EAAMC,GAId,OAFA,0BACAC,EAAKF,EAAMG,EAAKF,EAAMG,OAAU,UAAWC,KAAQrG,KAAKrD,MAAMkJ,QAASS,OAAU,IAAItG,KAAKrD,MAAM4J,SAASvG,KAAKrD,MAAMmI,WAAY0B,MAASxG,KAAKrD,MAAM8J,UAAWC,YAAc,MAAMC,cAAgB,U,kCAGzLX,EAAMC,GAIhB,OAFA,0BACAC,EAAKF,EAAMG,EAAKF,EAAMG,OAAU,UAAWC,KAAQrG,KAAKrD,MAAMmJ,QAASQ,OAAU,IAAItG,KAAKrD,MAAMiK,SAAS5G,KAAKrD,MAAMmI,WAAY0B,MAASxG,KAAKrD,MAAM8J,UAAWC,YAAc,MAAMC,cAAgB,U,kCAGzLX,EAAMC,GAIhB,OAFA,0BACAC,EAAKF,EAAMG,EAAKF,EAAMG,OAAU,UAAWC,KAAQrG,KAAKrD,MAAMkJ,QAASS,OAAU,IAAItG,KAAKrD,MAAMkK,SAAS7G,KAAKrD,MAAMmI,WAAY0B,MAASxG,KAAKrD,MAAM8J,UAAWC,YAAc,MAAMC,cAAgB,U,kCAGzLX,EAAMC,GAIhB,OAFA,0BACAC,EAAKF,EAAMG,EAAKF,EAAMG,OAAU,UAAWC,KAAQrG,KAAKrD,MAAMmJ,QAASQ,OAAU,IAAItG,KAAKrD,MAAMmK,SAAS9G,KAAKrD,MAAMmI,WAAY0B,MAASxG,KAAKrD,MAAM8J,UAAWC,YAAc,MAAMC,cAAgB,U,kCAGzLX,EAAMC,GAIhB,OAFA,0BACAC,EAAKF,EAAMG,EAAKF,EAAMG,OAAU,UAAWC,KAAQrG,KAAKrD,MAAMkJ,QAASS,OAAU,IAAItG,KAAKrD,MAAMoK,SAAS/G,KAAKrD,MAAMmI,WAAY0B,MAASxG,KAAKrD,MAAM8J,UAAWC,YAAc,MAAMC,cAAgB,U,kCAGzLX,EAAMC,GAIhB,OAFA,0BACAC,EAAKF,EAAMG,EAAKF,EAAMG,OAAU,UAAWC,KAAQrG,KAAKrD,MAAMmJ,QAASQ,OAAU,IAAItG,KAAKrD,MAAMqK,SAAShH,KAAKrD,MAAMmI,WAAY0B,MAASxG,KAAKrD,MAAM8J,UAAWC,YAAc,MAAMC,cAAgB,U,kCAGzLX,EAAMC,GAIhB,OAFA,0BACAC,EAAKF,EAAMG,EAAKF,EAAMG,OAAU,UAAWC,KAAQrG,KAAKrD,MAAMkJ,QAASS,OAAU,IAAItG,KAAKrD,MAAMsK,SAASjH,KAAKrD,MAAMmI,WAAY0B,MAASxG,KAAKrD,MAAM8J,UAAWC,YAAc,MAAMC,cAAgB,U,kCAGzLX,EAAMC,GAIhB,OAFA,0BACAC,EAAKF,EAAMG,EAAKF,EAAMG,OAAU,UAAWC,KAAQrG,KAAKrD,MAAMmJ,QAASQ,OAAU,IAAItG,KAAKrD,MAAMuK,SAASlH,KAAKrD,MAAMmI,WAAY0B,MAASxG,KAAKrD,MAAM8J,UAAWC,YAAc,MAAMC,cAAgB,U,kCAGzLX,EAAMC,GAIhB,OAFA,0BACAC,EAAKF,EAAMG,EAAKF,EAAMG,OAAU,UAAWC,KAAQ,UAAWC,OAAU,IAAItG,KAAKrD,MAAMoK,SAAS/G,KAAKrD,MAAMmI,WAAY0B,MAASxG,KAAKrD,MAAM8J,UAAWC,YAAc,MAAMC,cAAgB,U,mCAG/KX,EAAMC,GAIjB,OAFA,0BACAC,EAAKF,EAAMG,EAAKF,EAAMG,OAAU,UAAWC,KAAQ,UAAWC,OAAU,IAAItG,KAAKrD,MAAMoK,SAAS/G,KAAKrD,MAAMmI,WAAY0B,MAASxG,KAAKrD,MAAM8J,UAAWC,YAAc,MAAMC,cAAgB,U,4BAGpLQ,EAAMC,EAAMC,EAAMC,GAGtB,OADA,0BAAMC,GAAMJ,EAAQ,IAAKK,GAAM,IAAMJ,EAAOK,GAAMJ,EAAOK,GAAMJ,EAAOlB,OAAS,c,4BAG3Ee,EAAMC,EAAMC,EAAMC,GAGtB,OADA,0BAAMC,GAAMJ,EAAQ,IAAKK,GAAM,IAAMJ,EAAOK,GAAMJ,EAAOK,GAAMJ,EAAOlB,OAAS,c,kCAGrEJ,EAAMC,EAAM0B,GAEtB,OADW,0BAAMzB,EAAKF,EAAMG,EAAKF,GAAO0B,K,qCAK1C,IAAM5B,EAAc/F,KAAKrD,MAAMoJ,YAC/B,OAEI,6BACJ,yBAAKxE,UAAU,aACb,0CACA,yBAAKkB,MAAO,CAAE+D,MAAO,MAAOoB,OAAQ,SAClC,uBAAGnF,MAAO,CAAEoF,UAAW,SACpB7H,KAAKL,MAAMoF,cAId,yBAAKyB,MAAS,KAAMF,OAAU,IAAM7D,MAAO,GAAIqF,MAAQ,KAClD9H,KAAK+D,YAAY,IAAI,KACrB/D,KAAKgE,YAAY,IAAI,KACrBhE,KAAKiE,YAAY,IAAI,KACrBjE,KAAKkE,YAAY,IAAI,KACrBlE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KACvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KACvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KACvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KACvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAEvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KACvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KACvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KACvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KACvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KACvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KACvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KACvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KACvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAEvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KACvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KACvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KACvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KACvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGxBwB,EACE/F,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGzBwB,EACE/F,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGzBwB,EACE/F,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGzBwB,EACE/F,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAIzBwB,EACE/F,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAIzBwB,EACE/F,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAIzBwB,EACE/F,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAOzBwB,EACE/F,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGzBwB,EACE/F,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGzBwB,EACE/F,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGzBwB,EACE/F,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAIzBwB,EACE/F,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAKzBwB,EACE/F,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGzBwB,EACE/F,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGzBwB,EACE/F,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGzBwB,EACE/F,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAIzBwB,EACE/F,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAczBwB,EACE/F,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGzBwB,EACE/F,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGzBwB,EACE/F,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAKzBwB,EACE/F,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGzBwB,EACE/F,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAIzBwB,EACE/F,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGxBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KACvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KACvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KACvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KACvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAEvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KACvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KACvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KACvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KACvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAItBvE,KAAKrD,MAAMoJ,YACT/F,KAAKmE,YAAY,IAAI,KACrB,CACGnE,KAAKrD,MAAMyI,cACVpF,KAAK+H,YAAY,IAAI,KACrB/H,KAAKmE,YAAY,IAAI,MAK3BnE,KAAKrD,MAAMoJ,YACT/F,KAAKoE,YAAY,IAAI,KACrB,CACCpE,KAAKrD,MAAMyI,cACV,+BACApF,KAAKoE,YAAY,IAAI,MAKzBpE,KAAKrD,MAAMoJ,YACT,mCACA,CACG/F,KAAKrD,MAAMwI,aACVnF,KAAKgI,aAAa,IAAI,KACtBhI,KAAKiI,YAAY,IAAI,MAK3BjI,KAAKrD,MAAMoJ,YACT,mCACA,CACG/F,KAAKrD,MAAMwI,aACV,+BACAnF,KAAKkI,YAAY,IAAI,MAI5BlI,KAAKuE,MAAM,IAAI,IAAI,IAAI,KACvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KACvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KACvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAExBwB,EACE/F,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAKzBwB,EACE/F,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAEvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGzBwB,EACE/F,KAAKuE,MAAM,EAAE,EAAE,EAAE,GAGjBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAIzBwB,EACE/F,KAAKuE,MAAM,EAAE,EAAE,EAAE,GAEjBvE,KAAKuE,MAAM,IAAK,IAAI,IAAI,MAG5B,yBAAKuD,MAAQ,IAAItB,MAAS,KAAMF,OAAU,KAC1C,0BAAMJ,EAAK,IAAKC,EAAK,KAArB,kDACA,0BAAMD,EAAK,IAAKC,EAAK,KAArB,WACA,0BAAMD,EAAK,IAAKC,EAAK,KAArB,iBACA,0BAAMD,EAAK,IAAKC,EAAK,IAAKG,OAAU,GAAIE,MAAS,GAAIJ,OAAUpG,KAAKrD,MAAMkJ,QAASQ,KAAQrG,KAAKrD,MAAMkJ,UACtG,0BAAMK,EAAK,IAAKC,EAAK,KAArB,iBACA,0BAAMD,EAAK,IAAKC,EAAK,IAAKG,OAAU,GAAIE,MAAS,GAAIJ,OAAU,UAAWC,KAAQ,YAClF,0BAAMH,EAAK,IAAKC,EAAK,KAArB,eACA,0BAAMD,EAAK,IAAKC,EAAK,IAAKG,OAAU,GAAIE,MAAS,GAAIJ,OAAUpG,KAAKrD,MAAMmJ,QAASO,KAAQrG,KAAKrD,MAAMmJ,UAEtG,0BAAMI,EAAK,IAAKC,EAAK,KAArB,aACA,0BAAMD,EAAK,IAAKC,EAAK,KAArB,kBACA,0BAAMD,EAAK,GAAIC,EAAK,KAApB,KACA,0BAAMD,EAAK,GAAIC,EAAK,KAApB,MACA,0BAAMD,EAAK,GAAIC,EAAK,KAApB,MACA,0BAAMD,EAAK,GAAIC,EAAK,KAApB,MACA,0BAAMD,EAAK,GAAIC,EAAK,KAApB,MACA,0BAAMD,EAAK,GAAIC,EAAK,KAApB,OACA,0BAAMD,EAAK,IAAKC,EAAK,KAArB,KACA,0BAAMD,EAAK,IAAKC,EAAK,KAArB,MACA,0BAAMD,EAAK,IAAKC,EAAK,KAArB,MACA,0BAAMD,EAAK,IAAKC,EAAK,KAArB,MACA,0BAAMD,EAAK,IAAKC,EAAK,KAArB,MACA,0BAAM1D,MAAS,CAAC0F,KAAK,GAAIjC,EAAK,IAAKC,EAAK,KAAxC,OAEEJ,EACE,0BAAMG,EAAK,IAAKC,EAAK,KAArB,OAEA,0BAAMD,EAAK,GAAIC,EAAK,KAApB,OAGFJ,EACE,0BAAMG,EAAK,IAAKC,EAAK,KAArB,MAEA,0BAAMD,EAAK,GAAIC,EAAK,KAApB,MAGFJ,EACE,0BAAMG,EAAK,IAAKC,EAAK,KAArB,MAEA,0BAAMD,EAAK,GAAIC,EAAK,KAApB,MAGFJ,EACE,0BAAMG,EAAK,IAAKC,EAAK,KAArB,MAEA,0BAAMD,EAAK,GAAIC,EAAK,KAApB,MAGFJ,EACE,0BAAMG,EAAK,IAAKC,EAAK,KAArB,MAEA,0BAAMD,EAAK,GAAIC,EAAK,KAApB,MAGFJ,EACE,0BAAMG,EAAK,IAAKC,EAAK,KAArB,KACA,0BAAMD,EAAK,GAAIC,EAAK,KAApB,KAGFJ,EACE,0BAAMG,EAAK,IAAKC,EAAK,KAArB,KACA,0BAAMD,EAAK,IAAKC,EAAK,KAArB,OAGFJ,EACE,0BAAMG,EAAK,IAAKC,EAAK,MAErB,0BAAMD,EAAK,IAAKC,EAAK,KAArB,MAGFJ,EACE,0BAAMG,EAAK,IAAKC,EAAK,MAErB,0BAAMD,EAAK,IAAKC,EAAK,KAArB,MAGFJ,EACE,0BAAMG,EAAK,IAAKC,EAAK,MAErB,0BAAMD,EAAK,IAAKC,EAAK,KAArB,MAGFJ,EACE,0BAAMG,EAAK,IAAKC,EAAK,MAErB,0BAAMD,EAAK,IAAKC,EAAK,KAArB,MAGFJ,EACE,0BAAMG,EAAK,IAAKC,EAAK,KAArB,KACA,0BAAMD,EAAK,IAAKC,EAAK,KAArB,KAEJ,0BAAMD,EAAK,IAAKC,EAAK,KAArB,iBACA,0BAAMD,EAAK,IAAKC,EAAK,KAArB,uBAEEJ,EACE,0BAAMG,EAAK,IAAKC,EAAK,KAArB,WACA,0BAAMD,EAAK,IAAKC,EAAK,MAGvBJ,EACE,mCACA,0BAAMG,EAAK,IAAKC,EAAK,MAEzB,0BAAMD,EAAK,IAAKC,EAAK,MACrB,0BAAMD,EAAK,IAAKC,EAAK,MAEnBJ,EACE,0BAAMG,EAAK,IAAKC,EAAK,KAArB,WACA,0BAAMD,EAAK,IAAKC,EAAK,KAArB,uBAGFJ,EACE,mCACA,0BAAMG,EAAK,IAAKC,EAAK,KAArB,8BAKN,2BAAOtJ,KAAK,QAAQsF,IAAK,EAAGE,IAAMrC,KAAKrD,MAAM4J,SAASnF,OAAQ,EAChEG,UAAU,kBAAkB1B,SAAUG,KAAK0E,UAC3C/D,KAAK,YAAYC,MAAOZ,KAAKrD,MAAMmI,UAAWsD,IAAKpI,KAAK4C,UAAWyF,KAAO,YAC1E5F,MAAO,CAAE+D,MAAM,IAAK8B,KAAK,IAAKC,IAAI,U,+BAQpC,OAEA,6BACEvI,KAAKwI,eADP,IACuB,6BACvB,0BAAM/F,MAAO,CAAEC,MAAO,SAAW0F,IAAKpI,KAAK4C,aAExC5C,KAAKrD,MAAM6F,WACZ,6BACE,2BAAO3F,KAAK,SAAS0E,UAAU,eAAeX,MAAM,sBAClDY,QAASxB,KAAK8B,WAFlB,IAE8B,6BAC5B,uBAAGW,MAAO,CAAEC,MAAO,OAAQ8D,MAAO,MAAOoB,OAAQ,SAAjD,kJAHF,IAMO,6BACL,2BAAO/K,KAAK,SAAS0E,UAAU,MAAMX,MAAM,yBACzCY,QAASxB,KAAK2E,e,mCArzBpB,MAAM,CACFnC,WAAW,EACXqD,QAAU,UACVC,QAAU,UACVW,UAAY,GACZ3B,UAAU,EACVyB,SAAU,CAAC,IAAK,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,KAAO,KAAO,KAAO,IACnKK,SAAU,CAAC,iBACX,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,eACA,iBACA,iBACA,iBACA,iBACA,iBACA,gBACA,gBACA,eACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,IACAC,SAAU,CAAC,IACX,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,gBACA,iBACA,gBACA,iBACA,eACA,iBACA,iBACA,iBACA,gBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,kBACAC,SAAU,CAAC,IACX,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,gBACA,iBACA,gBACA,iBACA,eACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,kBACAC,SAAU,CAAC,iBACX,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,gBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,gBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,IACAC,SAAU,CAAC,IAAK,iBAChB,iBACA,iBACA,iBACA,iBACA,gBACA,iBACA,iBACA,gBACA,iBACA,iBACA,gBACA,iBACA,iBACA,iBACA,iBACA,gBACA,iBACA,iBACA,iBACA,gBACA,iBACA,gBACA,iBACA,kBAEAC,SAAU,CAAC,GAAI,IACfC,SAAU,CAAC,GAAI,IACf7B,YAAY,GACZC,YAAY,GACZC,YAAY,GACZC,YAAY,GACZC,YAAY,GACZC,YAAY,GACZC,YAAY,GACZC,YAAY,GACZG,aAAa,EACbX,eAAe,EACfD,cAAc,O,GA7MA1D,aAy4BXC,eAJS,SAAA/E,GAAK,MAAK,CAC/BD,KAAMC,EAAMD,QAKZ,CAAEkB,UAAS0B,eAFCoC,CAGZ+G,GC54BGC,E,kDACF,aAAe,IAAD,8BAEV,gBACK9F,UAAYC,IAAMC,YACvB,EAAKC,WAAaF,IAAMC,YACxB,EAAKE,cAAgBH,IAAMC,YAC3B,EAAKG,QAAUJ,IAAMC,YACrB,EAAKI,OAASL,IAAMC,YACpB,EAAKK,YAAYN,IAAMC,YACvB,EAAKM,YAAcP,IAAMC,YACzB,EAAKO,YAAcR,IAAMC,YAEzB,EAAKQ,YAAcT,IAAMC,YACzB,EAAKS,YAAcV,IAAMC,YACzB,EAAKU,YAAcX,IAAMC,YACzB,EAAKW,YAAcZ,IAAMC,YACzB,EAAKY,YAAcb,IAAMC,YACzB,EAAKa,YAAcd,IAAMC,YAEzB,EAAKc,WAAaf,IAAMC,YACxB,EAAKe,QAAUhB,IAAMC,YACrB,EAAKgB,UAAY,EAAKA,UAAUhE,KAAf,gBACjB,EAAKiE,YAAc,EAAKA,YAAYjE,KAAjB,gBACnB,EAAKkE,YAAc,EAAKA,YAAYlE,KAAjB,gBACnB,EAAKmE,YAAc,EAAKA,YAAYnE,KAAjB,gBACnB,EAAKoE,YAAc,EAAKA,YAAYpE,KAAjB,gBACnB,EAAKqE,YAAc,EAAKA,YAAYrE,KAAjB,gBACnB,EAAKsE,YAAc,EAAKA,YAAYtE,KAAjB,gBACnB,EAAKuE,YAAc,EAAKA,YAAYvE,KAAjB,gBACnB,EAAKwE,qBAAuB,EAAKA,qBAAqBxE,KAA1B,gBAC5B,EAAKyE,MAAQ,EAAKA,MAAMzE,KAAX,gBACb,EAAK0E,kBAAoB,EAAKA,kBAAkB1E,KAAvB,gBACzB,EAAK2E,cAAc,EAAKA,cAAc3E,KAAnB,gBAInB,EAAK4E,UAAY,EAAKA,UAAU5E,KAAf,gBAGjB,EAAK+B,WAAa,EAAKA,WAAW/B,KAAhB,gBAElB,EAAKgC,SAAW,EAAKA,SAAShC,KAAd,gBAChB,EAAK6E,SAAW,EAAKA,SAAS7E,KAAd,gBAGhB,EAAKnD,MAAQ,EAAKZ,aA7CR,E,yDAsNViE,KAAKS,SAAST,KAAKjE,gB,2CAMrBiG,EADqBhC,KAAKL,MAAlBqC,UACChC,MACTA,KAAKC,UACLD,KAAKL,MAAMsC,aAAa,qB,8CAKxBD,EADqBhC,KAAKL,MAAlBqC,eACCE,K,gCAIP,IAAMxE,EAAKsC,KAAKL,MAAMjD,KAAKV,OAAO0B,GAC5B4C,EAAYN,KAAKL,MAAMjD,KAAKV,OAAO2B,IAAI4C,MAAM,KAAK,GAClD7B,EAAWsB,KAAKL,MAAMjD,KAAKV,OAAO2B,IAAI4C,MAAM,KAAK,GACvDP,KAAKL,MAAM/B,QAAQF,EAAI4C,EAAW5B,K,iCAIlC,IACMkG,EAAM,CACVC,iBAAkB7E,KAAKrD,MAAMmI,WAI/B9E,KAAKL,MAAML,YANQ,gBAMgBsF,GAEnC5E,KAAKS,SAAS,CAAE+B,WAAW,M,iCAG3B,IAAMuC,EAAa/E,KAAKL,MAAMqF,cAE9BhF,KAAKL,MAAML,YAAYyF,EADL,wBAElB/E,KAAKS,SAAS,CAAE+B,WAAW,M,6CAG3B,IAAMyC,EAAWjF,KAAKmD,YAAY+B,QAAQtE,MACzB,YAAbqE,IACAjF,KAAKS,SAAS,CAAC0E,cAAc,IAC7BnF,KAAKS,SAAS,CAAC2E,eAAe,KAEjB,YAAbH,IACAjF,KAAKS,SAAS,CAAC0E,cAAc,IAC7BnF,KAAKS,SAAS,CAAC2E,eAAe,KAEjB,YAAbH,IACAjF,KAAKS,SAAS,CAAC0E,cAAc,IAC7BnF,KAAKS,SAAS,CAAC2E,eAAe,KAEjB,YAAbH,IACAjF,KAAKS,SAAS,CAAC0E,cAAc,IAC7BnF,KAAKS,SAAS,CAAC2E,eAAe,O,gCAG1B5E,GACNR,KAAKS,SAAL,eAAiBD,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,U,iCAEnCJ,GACTR,KAAKS,SAAS,CAAC4E,YAAY7E,M,gCAEnBA,GACRR,KAAKS,SAAS,CAAC6E,YAAY9E,M,gCAEnBA,GACRR,KAAKS,SAAS,CAAC8E,YAAY/E,M,gCAEnBA,GACRR,KAAKS,SAAS,CAAC+E,YAAYhF,M,gCAEnBA,GACRR,KAAKS,SAAS,CAACgF,YAAYjF,M,gCAEnBA,GACRR,KAAKS,SAAS,CAACiF,YAAYlF,M,gCAEnBA,GACRR,KAAKS,SAAS,CAACkF,YAAYnF,M,gCAEnBA,GACRR,KAAKS,SAAS,CAACmF,YAAYpF,M,sCAI3B,IAAMyE,EAAWjF,KAAK4D,WAAWsB,QAAQtE,MACxB,YAAbqE,IACFjF,KAAKS,SAAS,CAACoF,QAAQ,YACvB7F,KAAKS,SAAS,CAACqF,QAAQb,KAER,YAAbA,IACFjF,KAAKS,SAAS,CAACoF,QAAS,YACxB7F,KAAKS,SAAS,CAACqF,QAAQb,KAET,oBAAbA,IACDjF,KAAKS,SAAS,CAACoF,QAAQ,YACvB7F,KAAKS,SAAS,CAACqF,QAAS,aAEV,oBAAbb,IACDjF,KAAKS,SAAS,CAACoF,QAAQ,YACvB7F,KAAKS,SAAS,CAACqF,QAAS,aAEV,oBAAbb,IACDjF,KAAKS,SAAS,CAACoF,QAAQ,YACvB7F,KAAKS,SAAS,CAACqF,QAAS,aAEV,oBAAbb,IACDjF,KAAKS,SAAS,CAACoF,QAAQ,YACvB7F,KAAKS,SAAS,CAACqF,QAAS,e,0CAOT,SADA9F,KAAKgD,cAAckC,QAAQtE,MAE1CZ,KAAKS,SAAS,CAACsF,aAAa,IAG5B/F,KAAKS,SAAS,CAACsF,aAAa,M,kCAItBC,EAAMC,GAId,OAFA,0BACAC,EAAKF,EAAMG,EAAKF,EAAMG,OAAU,UAAWC,KAAQrG,KAAKrD,MAAMkJ,QAASS,OAAU,IAAItG,KAAKrD,MAAM4J,SAASvG,KAAKrD,MAAMmI,WAAY0B,MAASxG,KAAKrD,MAAM8J,UAAWC,YAAc,MAAMC,cAAgB,U,kCAGzLX,EAAMC,GAIhB,OAFA,0BACAC,EAAKF,EAAMG,EAAKF,EAAMG,OAAU,UAAWC,KAAQrG,KAAKrD,MAAMmJ,QAASQ,OAAU,IAAItG,KAAKrD,MAAMiK,SAAS5G,KAAKrD,MAAMmI,WAAY0B,MAASxG,KAAKrD,MAAM8J,UAAWC,YAAc,MAAMC,cAAgB,U,kCAGzLX,EAAMC,GAIhB,OAFA,0BACAC,EAAKF,EAAMG,EAAKF,EAAMG,OAAU,UAAWC,KAAQrG,KAAKrD,MAAMkJ,QAASS,OAAU,IAAItG,KAAKrD,MAAMkK,SAAS7G,KAAKrD,MAAMmI,WAAY0B,MAASxG,KAAKrD,MAAM8J,UAAWC,YAAc,MAAMC,cAAgB,U,kCAGzLX,EAAMC,GAIhB,OAFA,0BACAC,EAAKF,EAAMG,EAAKF,EAAMG,OAAU,UAAWC,KAAQrG,KAAKrD,MAAMmJ,QAASQ,OAAU,IAAItG,KAAKrD,MAAMmK,SAAS9G,KAAKrD,MAAMmI,WAAY0B,MAASxG,KAAKrD,MAAM8J,UAAWC,YAAc,MAAMC,cAAgB,U,kCAGzLX,EAAMC,GAIhB,OAFA,0BACAC,EAAKF,EAAMG,EAAKF,EAAMG,OAAU,UAAWC,KAAQrG,KAAKrD,MAAMkJ,QAASS,OAAU,IAAItG,KAAKrD,MAAMoK,SAAS/G,KAAKrD,MAAMmI,WAAY0B,MAASxG,KAAKrD,MAAM8J,UAAWC,YAAc,MAAMC,cAAgB,U,kCAGzLX,EAAMC,GAIhB,OAFA,0BACAC,EAAKF,EAAMG,EAAKF,EAAMG,OAAU,UAAWC,KAAQrG,KAAKrD,MAAMmJ,QAASQ,OAAU,IAAItG,KAAKrD,MAAMqK,SAAShH,KAAKrD,MAAMmI,WAAY0B,MAASxG,KAAKrD,MAAM8J,UAAWC,YAAc,MAAMC,cAAgB,U,kCAGzLX,EAAMC,GAIhB,OAFA,0BACAC,EAAKF,EAAMG,EAAKF,EAAMG,OAAU,UAAWC,KAAQrG,KAAKrD,MAAMkJ,QAASS,OAAU,IAAItG,KAAKrD,MAAMsK,SAASjH,KAAKrD,MAAMmI,WAAY0B,MAASxG,KAAKrD,MAAM8J,UAAWC,YAAc,MAAMC,cAAgB,U,kCAGzLX,EAAMC,GAIhB,OAFA,0BACAC,EAAKF,EAAMG,EAAKF,EAAMG,OAAU,UAAWC,KAAQrG,KAAKrD,MAAMmJ,QAASQ,OAAU,IAAItG,KAAKrD,MAAMuK,SAASlH,KAAKrD,MAAMmI,WAAY0B,MAASxG,KAAKrD,MAAM8J,UAAWC,YAAc,MAAMC,cAAgB,U,kCAGzLX,EAAMC,GAIhB,OAFA,0BACAC,EAAKF,EAAMG,EAAKF,EAAMG,OAAU,UAAWC,KAAQ,UAAWC,OAAU,IAAItG,KAAKrD,MAAMoK,SAAS/G,KAAKrD,MAAMmI,WAAY0B,MAASxG,KAAKrD,MAAM8J,UAAWC,YAAc,MAAMC,cAAgB,U,mCAG/KX,EAAMC,GAIjB,OAFA,0BACAC,EAAKF,EAAMG,EAAKF,EAAMG,OAAU,UAAWC,KAAQ,UAAWC,OAAU,IAAItG,KAAKrD,MAAMoK,SAAS/G,KAAKrD,MAAMmI,WAAY0B,MAASxG,KAAKrD,MAAM8J,UAAWC,YAAc,MAAMC,cAAgB,U,4BAGpLQ,EAAMC,EAAMC,EAAMC,GAGtB,OADA,0BAAMC,GAAMJ,EAAQ,IAAKK,GAAM,IAAMJ,EAAOK,GAAMJ,EAAOK,GAAMJ,EAAOlB,OAAS,c,4BAG3Ee,EAAMC,EAAMC,EAAMC,GAGtB,OADA,0BAAMC,GAAMJ,EAAQ,IAAKK,GAAM,IAAMJ,EAAOK,GAAMJ,EAAOK,GAAMJ,EAAOlB,OAAS,c,kCAGrEJ,EAAMC,EAAM0B,GAEtB,OADW,0BAAMzB,EAAKF,EAAMG,EAAKF,GAAO0B,K,qCAK1C,IAAM5B,EAAc/F,KAAKrD,MAAMoJ,YAC/B,OAEI,6BACJ,yBAAKxE,UAAU,aACb,0CACA,yBAAKkB,MAAO,CAAE+D,MAAO,MAAOoB,OAAQ,SAClC,uBAAGnF,MAAO,CAAEoF,UAAW,SACpB7H,KAAKL,MAAMoF,cAId,yBAAKyB,MAAS,KAAMF,OAAU,IAAM7D,MAAO,GAAIqF,MAAQ,KAClD9H,KAAK+D,YAAY,IAAI,KACrB/D,KAAKgE,YAAY,IAAI,KACrBhE,KAAKiE,YAAY,IAAI,KACrBjE,KAAKkE,YAAY,IAAI,KACrBlE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KACvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KACvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KACvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KACvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAEvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KACvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KACvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KACvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KACvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KACvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KACvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KACvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KACvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAEvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KACvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KACvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KACvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KACvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGxBwB,EACE/F,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGzBwB,EACE/F,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGzBwB,EACE/F,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGzBwB,EACE/F,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAIzBwB,EACE/F,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAIzBwB,EACE/F,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAIzBwB,EACE/F,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAOzBwB,EACE/F,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGzBwB,EACE/F,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGzBwB,EACE/F,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGzBwB,EACE/F,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAIzBwB,EACE/F,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAKzBwB,EACE/F,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGzBwB,EACE/F,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGzBwB,EACE/F,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGzBwB,EACE/F,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAIzBwB,EACE/F,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAczBwB,EACE/F,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGzBwB,EACE/F,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGzBwB,EACE/F,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAKzBwB,EACE/F,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGzBwB,EACE/F,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAIzBwB,EACE/F,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGxBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KACvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KACvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KACvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KACvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAEvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KACvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KACvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KACvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KACvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAItBvE,KAAKrD,MAAMoJ,YACT/F,KAAKmE,YAAY,IAAI,KACrB,CACGnE,KAAKrD,MAAMyI,cACVpF,KAAK+H,YAAY,IAAI,KACrB/H,KAAKmE,YAAY,IAAI,MAK3BnE,KAAKrD,MAAMoJ,YACT/F,KAAKoE,YAAY,IAAI,KACrB,CACCpE,KAAKrD,MAAMyI,cACV,+BACApF,KAAKoE,YAAY,IAAI,MAKzBpE,KAAKrD,MAAMoJ,YACT,mCACA,CACG/F,KAAKrD,MAAMwI,aACVnF,KAAKgI,aAAa,IAAI,KACtBhI,KAAKiI,YAAY,IAAI,MAK3BjI,KAAKrD,MAAMoJ,YACT,mCACA,CACG/F,KAAKrD,MAAMwI,aACV,+BACAnF,KAAKkI,YAAY,IAAI,MAI5BlI,KAAKuE,MAAM,IAAI,IAAI,IAAI,KACvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KACvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KACvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAExBwB,EACE/F,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAKzBwB,EACE/F,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAEvBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAGzBwB,EACE/F,KAAKuE,MAAM,EAAE,EAAE,EAAE,GAGjBvE,KAAKuE,MAAM,IAAI,IAAI,IAAI,KAIzBwB,EACE/F,KAAKuE,MAAM,EAAE,EAAE,EAAE,GAEjBvE,KAAKuE,MAAM,IAAK,IAAI,IAAI,MAG5B,yBAAKuD,MAAQ,IAAItB,MAAS,KAAMF,OAAU,KAC1C,0BAAMJ,EAAK,IAAKC,EAAK,KAArB,kDACA,0BAAMD,EAAK,IAAKC,EAAK,KAArB,WACA,0BAAMD,EAAK,IAAKC,EAAK,KAArB,iBACA,0BAAMD,EAAK,IAAKC,EAAK,IAAKG,OAAU,GAAIE,MAAS,GAAIJ,OAAUpG,KAAKrD,MAAMkJ,QAASQ,KAAQrG,KAAKrD,MAAMkJ,UACtG,0BAAMK,EAAK,IAAKC,EAAK,KAArB,iBACA,0BAAMD,EAAK,IAAKC,EAAK,IAAKG,OAAU,GAAIE,MAAS,GAAIJ,OAAU,UAAWC,KAAQ,YAClF,0BAAMH,EAAK,IAAKC,EAAK,KAArB,eACA,0BAAMD,EAAK,IAAKC,EAAK,IAAKG,OAAU,GAAIE,MAAS,GAAIJ,OAAUpG,KAAKrD,MAAMmJ,QAASO,KAAQrG,KAAKrD,MAAMmJ,UAEtG,0BAAMI,EAAK,IAAKC,EAAK,KAArB,aACA,0BAAMD,EAAK,IAAKC,EAAK,KAArB,kBACA,0BAAMD,EAAK,GAAIC,EAAK,KAApB,KACA,0BAAMD,EAAK,GAAIC,EAAK,KAApB,MACA,0BAAMD,EAAK,GAAIC,EAAK,KAApB,MACA,0BAAMD,EAAK,GAAIC,EAAK,KAApB,MACA,0BAAMD,EAAK,GAAIC,EAAK,KAApB,MACA,0BAAMD,EAAK,GAAIC,EAAK,KAApB,OACA,0BAAMD,EAAK,IAAKC,EAAK,KAArB,KACA,0BAAMD,EAAK,IAAKC,EAAK,KAArB,MACA,0BAAMD,EAAK,IAAKC,EAAK,KAArB,MACA,0BAAMD,EAAK,IAAKC,EAAK,KAArB,MACA,0BAAMD,EAAK,IAAKC,EAAK,KAArB,MACA,0BAAM1D,MAAS,CAAC0F,KAAK,GAAIjC,EAAK,IAAKC,EAAK,KAAxC,OAEEJ,EACE,0BAAMG,EAAK,IAAKC,EAAK,KAArB,OAEA,0BAAMD,EAAK,GAAIC,EAAK,KAApB,OAGFJ,EACE,0BAAMG,EAAK,IAAKC,EAAK,KAArB,MAEA,0BAAMD,EAAK,GAAIC,EAAK,KAApB,MAGFJ,EACE,0BAAMG,EAAK,IAAKC,EAAK,KAArB,MAEA,0BAAMD,EAAK,GAAIC,EAAK,KAApB,MAGFJ,EACE,0BAAMG,EAAK,IAAKC,EAAK,KAArB,MAEA,0BAAMD,EAAK,GAAIC,EAAK,KAApB,MAGFJ,EACE,0BAAMG,EAAK,IAAKC,EAAK,KAArB,MAEA,0BAAMD,EAAK,GAAIC,EAAK,KAApB,MAGFJ,EACE,0BAAMG,EAAK,IAAKC,EAAK,KAArB,KACA,0BAAMD,EAAK,GAAIC,EAAK,KAApB,KAGFJ,EACE,0BAAMG,EAAK,IAAKC,EAAK,KAArB,KACA,0BAAMD,EAAK,IAAKC,EAAK,KAArB,OAGFJ,EACE,0BAAMG,EAAK,IAAKC,EAAK,MAErB,0BAAMD,EAAK,IAAKC,EAAK,KAArB,MAGFJ,EACE,0BAAMG,EAAK,IAAKC,EAAK,MAErB,0BAAMD,EAAK,IAAKC,EAAK,KAArB,MAGFJ,EACE,0BAAMG,EAAK,IAAKC,EAAK,MAErB,0BAAMD,EAAK,IAAKC,EAAK,KAArB,MAGFJ,EACE,0BAAMG,EAAK,IAAKC,EAAK,MAErB,0BAAMD,EAAK,IAAKC,EAAK,KAArB,MAGFJ,EACE,0BAAMG,EAAK,IAAKC,EAAK,KAArB,KACA,0BAAMD,EAAK,IAAKC,EAAK,KAArB,KAEJ,0BAAMD,EAAK,IAAKC,EAAK,KAArB,iBACA,0BAAMD,EAAK,IAAKC,EAAK,KAArB,uBAEEJ,EACE,0BAAMG,EAAK,IAAKC,EAAK,KAArB,WACA,0BAAMD,EAAK,IAAKC,EAAK,MAGvBJ,EACE,mCACA,0BAAMG,EAAK,IAAKC,EAAK,MAEzB,0BAAMD,EAAK,IAAKC,EAAK,MACrB,0BAAMD,EAAK,IAAKC,EAAK,MAEnBJ,EACE,0BAAMG,EAAK,IAAKC,EAAK,KAArB,WACA,0BAAMD,EAAK,IAAKC,EAAK,KAArB,uBAGFJ,EACE,mCACA,0BAAMG,EAAK,IAAKC,EAAK,KAArB,8BAKN,2BAAOtJ,KAAK,QAAQsF,IAAK,EAAGE,IAAMrC,KAAKrD,MAAM4J,SAASnF,OAAQ,EAChEG,UAAU,kBAAkB1B,SAAUG,KAAK0E,UAC3C/D,KAAK,YAAYC,MAAOZ,KAAKrD,MAAMmI,UAAWsD,IAAKpI,KAAK4C,UAAWyF,KAAO,YAC1E5F,MAAO,CAAE+D,MAAM,IAAK8B,KAAK,IAAKC,IAAI,U,+BAQpC,OAEA,6BACEvI,KAAKwI,eADP,IACuB,6BACvB,0BAAM/F,MAAO,CAAEC,MAAO,SAAW0F,IAAKpI,KAAK4C,aAExC5C,KAAKrD,MAAM6F,WACZ,6BACE,2BAAO3F,KAAK,SAAS0E,UAAU,eAAeX,MAAM,sBAClDY,QAASxB,KAAK8B,WAFlB,IAE8B,6BAC5B,uBAAGW,MAAO,CAAEC,MAAO,OAAQ8D,MAAO,MAAOoB,OAAQ,SAAjD,kJAHF,IAMO,6BACL,2BAAO/K,KAAK,SAAS0E,UAAU,MAAMX,MAAM,yBACzCY,QAASxB,KAAK2E,e,mCApzBpB,MAAM,CACFnC,WAAW,EACXqD,QAAU,UACVC,QAAU,UACVW,UAAY,GACZ3B,UAAU,EACVyB,SAAU,CAAC,IAAK,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,KAAO,KAAO,KAAO,IACnKK,SAAU,CAAC,iBACX,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,eACA,iBACA,iBACA,iBACA,iBACA,iBACA,gBACA,gBACA,eACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,IACAC,SAAU,CAAC,IACX,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,gBACA,iBACA,gBACA,iBACA,eACA,iBACA,iBACA,iBACA,gBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,kBACAC,SAAU,CAAC,IACX,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,gBACA,iBACA,gBACA,iBACA,eACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,kBACAC,SAAU,CAAC,iBACX,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,gBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,gBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,IACAC,SAAU,CAAC,IAAK,iBAChB,iBACA,iBACA,iBACA,iBACA,gBACA,iBACA,iBACA,gBACA,iBACA,iBACA,gBACA,iBACA,iBACA,iBACA,iBACA,gBACA,iBACA,iBACA,iBACA,gBACA,iBACA,gBACA,iBACA,kBAEAC,SAAU,CAAC,GAAI,IACfC,SAAU,CAAC,GAAI,IACf7B,YAAY,GACZC,YAAY,GACZC,YAAY,GACZC,YAAY,GACZC,YAAY,GACZC,YAAY,GACZC,YAAY,GACZC,YAAY,GACZG,aAAa,EACbX,eAAe,EACfD,cAAc,O,GA7ME1D,aCJtBkH,GD44BSjH,aAJS,SAAA/E,GAAK,MAAK,CAC/BD,KAAMC,EAAMD,QAKZ,CAAEkB,UAAS0B,eAFCoC,CAGZgH,G,kDC94BD,WAAY/I,GAAQ,IAAD,8BACjB,cAAMA,IACDhD,MAAQ,EAAKZ,aAIlB,EAAK6M,SAAW,EAAKA,SAAS9I,KAAd,gBAEhB,EAAKgC,SAAW,EAAKA,SAAShC,KAAd,gBARC,E,iEAoBjBkC,EADqBhC,KAAKL,MAAlBqC,UACChC,MACTA,KAAKC,UACLD,KAAKL,MAAMsC,aAAa,iB,8CAMxBD,EADqBhC,KAAKL,MAAlBqC,eACCE,K,gCAKT,IAAMxE,EAAKsC,KAAKL,MAAMjD,KAAKV,OAAO0B,GAC5B4C,EAAYN,KAAKL,MAAMjD,KAAKV,OAAO2B,IAAI4C,MAAM,KAAK,GAClD7B,EAAWsB,KAAKL,MAAMjD,KAAKV,OAAO2B,IAAI4C,MAAM,KAAK,GACvDP,KAAKL,MAAM/B,QAAQF,EAAI4C,EAAW5B,K,iCAKlC,OACE,yBAAK6C,UAAU,aACb,yBAAKkB,MAAO,CAAE+D,MAAO,MAAOoB,OAAQ,SAClC,uBAAGnF,MAAO,CAAEoF,UAAW,SACpB7H,KAAKL,MAAMkJ,U,iCAQpB7I,KAAKS,SAAS,CAAE+B,WAAW,M,+BAK3B,IAAMsG,EAAY9I,KAAKL,MAAMmJ,UACzBC,EAAS,cAAEC,IAAF,OAAW,yBAAKC,IAAK,MAclC,OAbwB,GAApBH,EAAU1H,SACZL,QAAQC,IAAI8H,GACZC,EAAS,cAAEC,IAAF,OACPF,EAAUI,KAAI,SAAAC,GAAI,OAChB,yBAAK1G,MAAO,CACV+D,MAAO,MACP4C,QAAS,SAET,yBAAKH,IAAKE,EAAKE,WAAY5G,MAAO,CAAE+D,MAAO,gBAMjD,yBAAKjF,UAAU,aACZvB,KAAK4I,WADR,IACoB,6BAClB,yBAAKnG,MAAO,CACV6G,QAAS,OACTC,cAAe,MACfC,eAAgB,SAChBC,WAAY,SACZC,SAAU,SAEV,kBAACX,EAAD,CAAQzK,KAAM,S,mCAvEpB,MAAO,CACLkE,WAAW,O,GAdQf,cAiHVC,eANS,SAAA/E,GAAK,MAAK,CAChCD,KAAMC,EAAMD,QAOZ,CAAEkB,WAFW8D,CAGbiH,G,gBCjHIgB,E,kDACJ,WAAYhK,GAAQ,IAAD,8BACjB,cAAMA,IAEDiD,UAAYC,IAAMC,YACvB,EAAKG,QAAUJ,IAAMC,YACrB,EAAKI,OAASL,IAAMC,YACpB,EAAKe,QAAUhB,IAAMC,YACrB,EAAK8G,UAAY/G,IAAMC,YACvB,EAAK+G,aAAehH,IAAMC,YAC1B,EAAKgH,aAAejH,IAAMC,YAC1B,EAAKiH,QAAUlH,IAAMC,YACrB,EAAKkH,QAAUnH,IAAMC,YAErB,EAAKmH,UAAY,EAAKA,UAAUnK,KAAf,gBACjB,EAAKoK,UAAY,EAAKA,UAAUpK,KAAf,gBACjB,EAAKqK,aAAe,EAAKA,aAAarK,KAAlB,gBACpB,EAAKsK,QAAU,EAAKA,QAAQtK,KAAb,gBACf,EAAKuK,MAAQ,EAAKA,MAAMvK,KAAX,gBACb,EAAKoK,UAAY,EAAKA,UAAUpK,KAAf,gBACjB,EAAKwK,aAAe,EAAKA,aAAaxK,KAAlB,gBACpB,EAAKwK,aAAe,EAAKA,aAAaxK,KAAlB,gBACpB,EAAKyK,WAAa,EAAKA,WAAWzK,KAAhB,gBAClB,EAAK0K,WAAa,EAAKA,WAAW1K,KAAhB,gBAClB,EAAK2K,YAAc,EAAKA,YAAY3K,KAAjB,gBACnB,EAAK4K,YAAc,EAAKA,YAAY5K,KAAjB,gBACnB,EAAK6K,SAAW,EAAKA,SAAS7K,KAAd,gBAChB,EAAK8K,SAAW,EAAKA,SAAS9K,KAAd,gBAChB,EAAK+K,WAAa,EAAKA,WAAW/K,KAAhB,gBAClB,EAAKgL,WAAa,EAAKA,WAAWhL,KAAhB,gBAElB,EAAK+B,WAAa,EAAKA,WAAW/B,KAAhB,gBAClB,EAAKgC,SAAW,EAAKA,SAAShC,KAAd,gBAChB,EAAK6E,SAAW,EAAKA,SAAS7E,KAAd,gBAEhB,EAAKnD,MAAQ,EAAKZ,aAlCD,E,yDAiSjBiE,KAAKS,SAAST,KAAKjE,gB,2CAKnBiG,EADqBhC,KAAKL,MAAlBqC,UACChC,MACTA,KAAKC,UACLD,KAAKL,MAAMsC,aAAa,kB,8CAKxBD,EADqBhC,KAAKL,MAAlBqC,eACCE,K,gCAIT,IAAMxE,EAAKsC,KAAKL,MAAMjD,KAAKV,OAAO0B,GAC5B4C,EAAYN,KAAKL,MAAMjD,KAAKV,OAAO2B,IAAI4C,MAAM,KAAK,GAClD7B,EAAWsB,KAAKL,MAAMjD,KAAKV,OAAO2B,IAAI4C,MAAM,KAAK,GACvDP,KAAKL,MAAM/B,QAAQF,EAAI4C,EAAW5B,K,iCAGxB,IAAD,EACHa,EAAWS,KAAKL,MAAMoL,cACtBC,EAAOhL,KAAKL,MAAMsL,aAClBC,EAAOlL,KAAKL,MAAMwL,aAClB5O,GAAM,mBACTyO,EAAOhL,KAAKrD,MAAMyO,OADT,cAETF,EAAOlL,KAAKrD,MAAM0O,OAFT,qBAGJrL,KAAK6D,QAAQqB,QAAQoG,WAHjB,GAKZtL,KAAKL,MAAML,YAAYC,EAAUhD,GACjCyD,KAAKS,SAAS,CAAE+B,WAAW,M,iCAI3B,IAAMjD,EAAWS,KAAKL,MAAMoL,cAE5B/K,KAAKL,MAAML,YAAYC,EADR,wBAEfS,KAAKS,SAAS,CAAE+B,WAAW,M,gCAGnBwD,EAAMC,GAAO,IAAD,OACdsF,EAAWvF,EAEXwF,EAAKxL,KAAKrD,MAAM8O,YAAczL,KAAKrD,MAAM+O,YAAcH,EAAW,GAAKvL,KAAKrD,MAAMgP,QAAU3L,KAAKrD,MAAMiP,UAAY,GACnHC,EAAK7L,KAAKrD,MAAMmP,SAAW9L,KAAKrD,MAAM+O,WAAazF,EAAO,GAwBhE,MArBA,CAAC,4BACD8F,aAAc,SAAAvL,GAAC,OAAI,EAAKiK,YAAYjK,IACpCwL,aAAc,SAAAxL,GAAC,OAAI,EAAKmK,SAASnK,IACjCyL,YAAa,SAAAzL,GAAC,OAAI,EAAK+J,WAAW/J,IAClCe,UAAU,eACV6E,OAAQpG,KAAKrD,MAAMuP,OACnB7F,KAAMrG,KAAKrD,MAAMuP,OACjBxF,YAAY,MACZC,cAAc,MAAMwF,GAAIX,EAAIY,GAAIP,EAAIQ,EAAGrM,KAAKrD,MAAMgP,UAElD,4BACAI,aAAc,SAAAvL,GAAC,OAAI,EAAKiK,YAAYjK,IACpCwL,aAAc,SAAAxL,GAAC,OAAI,EAAKmK,SAASnK,IACjCyL,YAAa,SAAAzL,GAAC,OAAI,EAAK+J,WAAW/J,IAClCe,UAAU,eACV6E,OAAQpG,KAAKrD,MAAMuP,OACnB7F,KAAMrG,KAAKrD,MAAMuP,OACjBxF,YAAY,IACZC,cAAc,IAAIwF,GAAIX,EAAIY,GAAIP,EAAIQ,EAAGrM,KAAKrD,MAAM+O,gB,iCAMvC1F,EAAMC,GAAO,IAAD,OACfsF,EAAWvF,EAEXwF,EAAKxL,KAAKrD,MAAM2P,YAActM,KAAKrD,MAAM+O,YAAcH,EAAW,GAAKvL,KAAKrD,MAAMgP,QAAU3L,KAAKrD,MAAMiP,UAAY,GACnHC,EAAK7L,KAAKrD,MAAMmP,SAAW9L,KAAKrD,MAAM+O,WAAazF,EAAO,GAwBhE,MArBA,CAAC,4BACD8F,aAAc,SAAAvL,GAAC,OAAI,EAAKkK,YAAYlK,IACpCwL,aAAc,SAAAxL,GAAC,OAAI,EAAKoK,SAASpK,IACjCyL,YAAa,SAAAzL,GAAC,OAAI,EAAKgK,WAAWhK,IAClCe,UAAU,eACV6E,OAAQpG,KAAKrD,MAAM4P,OACnBlG,KAAMrG,KAAKrD,MAAM4P,OACjB7F,YAAY,MACZC,cAAc,MAAMwF,GAAIX,EAAIY,GAAIP,EAAIQ,EAAGrM,KAAKrD,MAAMgP,UAElD,4BACAI,aAAc,SAAAvL,GAAC,OAAI,EAAKkK,YAAYlK,IACpCwL,aAAc,SAAAxL,GAAC,OAAI,EAAKoK,SAASpK,IACjCyL,YAAa,SAAAzL,GAAC,OAAI,EAAKgK,WAAWhK,IAClCe,UAAU,eACV6E,OAAQpG,KAAKrD,MAAM4P,OACnBlG,KAAMrG,KAAKrD,MAAM4P,OACjB7F,YAAY,IACZC,cAAc,IAAIwF,GAAIX,EAAIY,GAAIP,EAAIQ,EAAGrM,KAAKrD,MAAM+O,gB,mCAMpC,IAAD,OACX,OAAI1L,KAAKrD,MAAM6P,UACL,KAIN,6BACIC,OACE,CACE,CAACzM,KAAKrD,MAAM+P,SAAW1M,KAAKrD,MAAM8O,YAAc,GAAIzL,KAAKrD,MAAMmP,SAAW,IAC1E,CAAC9L,KAAKrD,MAAM+P,SAAW1M,KAAKrD,MAAM8O,YAAc,GAAIzL,KAAKrD,MAAMmP,SAAW,IAC1E,CAAC9L,KAAKrD,MAAM+P,SAAW1M,KAAKrD,MAAM8O,YAAazL,KAAKrD,MAAMmP,SAAW,KAGzEa,YAAa,SAACnM,EAAGpB,GAAJ,OAAY,EAAK+K,aAAa3J,EAAG,Q,mCAM1C,IAAD,OACX,OAAIR,KAAKrD,MAAMiQ,UACL,KAIN,6BACIH,OACE,CACE,CAACzM,KAAKrD,MAAMkQ,SAAW7M,KAAKrD,MAAM2P,YAAc,GAAItM,KAAKrD,MAAMmP,SAAW,IAC1E,CAAC9L,KAAKrD,MAAMkQ,SAAW7M,KAAKrD,MAAM2P,YAAc,GAAItM,KAAKrD,MAAMmP,SAAW,IAC1E,CAAC9L,KAAKrD,MAAMkQ,SAAW7M,KAAKrD,MAAM2P,YAAatM,KAAKrD,MAAMmP,SAAW,KAGzEa,YAAa,SAACnM,EAAGpB,GAAJ,OAAY,EAAK+K,aAAa3J,EAAG,Q,mCAM3CA,EAAGsM,GACd,IAAIC,EACAC,EACY,IAAZF,GACFC,EAAe/M,KAAKrD,MAAMsQ,YAC1BD,EAAWhN,KAAKrD,MAAMuQ,WAEH,IAAZJ,IACPC,EAAe/M,KAAKrD,MAAMwQ,YAC1BH,EAAWhN,KAAKrD,MAAMyQ,WAExB,IAAIC,EAAMrN,KAAKkD,OAAOgC,QAClBoI,EAAKD,EAAIE,iBACbD,EAAGpH,EAAI1F,EAAEgN,QACT,IAAIC,EAAOH,EAAGI,gBAAgBL,EAAIM,eAAeC,WACjDpN,EAAEqN,iBACF,IAAI3H,EAAIuH,EAAKvH,EAAI6G,EAAe/M,KAAKrD,MAAMmR,kBAG3C,MAAO,CAFGC,KAAKC,OAAO9H,EAAIlG,KAAKrD,MAAMsR,WAAajO,KAAKrD,MAAM+O,YAAcsB,EACzDe,KAAKC,OAAO9H,EAAIlG,KAAKrD,MAAMsR,WAAajO,KAAKrD,MAAM+O,YAAc,K,sCAIrE/N,EAAKuQ,EAAapB,GAIhC,GAAI9M,KAAKrD,MAAMwR,SACb,GAAgB,IAAZrB,EAAe,CACjB,IAAME,EAAWhN,KAAKrD,MAAMyR,aAAepO,KAAKrD,MAAMyQ,UACtD,GAAIzP,EAAMqC,KAAKrD,MAAMyR,aAAe,EAElCpO,KAAKS,SAAS,CAAE6L,aAActM,KAAKrD,MAAMyR,aAAe,GAAKpO,KAAKrD,MAAM+O,WAAYL,MAAO,EAAGgD,MAAOrO,KAAKrD,MAAM2R,KAAO,SAEpH,GAAI3Q,EAAMqC,KAAKrD,MAAM2R,KAAO,EAAItO,KAAKrD,MAAMyR,aAAepO,KAAKrD,MAAM4R,WAAY,CACpF,IAAMC,EAASxO,KAAKrD,MAAM4R,WAAavO,KAAKrD,MAAM2R,KAClDtO,KAAKS,SAAS,CAAE6L,YAAatM,KAAKrD,MAAM+O,YAAc1L,KAAKrD,MAAMyR,aAAeI,EAAS,GAAInD,MAAOmD,EAAQH,MAAOG,EAASxO,KAAKrD,MAAM2R,KAAO,SAG9ItO,KAAKS,SAAS,CAAE6L,YAAatM,KAAKrD,MAAM+O,WAAa/N,EAAK0N,MAAO6C,EAAclB,EAAUqB,MAAOH,EAAclB,EAAWhN,KAAKrD,MAAM2R,KAAO,IAE7ItO,KAAKkK,iBAEF,GAAgB,IAAZ4C,EAAe,CACtB,IAAME,EAAWhN,KAAKrD,MAAMyR,aAAepO,KAAKrD,MAAMuQ,UACtD,GAAIvP,EAAMqC,KAAKrD,MAAMyR,aAAe,EAClCpO,KAAKS,SAAS,CAAEgL,aAAczL,KAAKrD,MAAMyR,aAAe,GAAKpO,KAAKrD,MAAM+O,WAAYN,MAAO,EAAGqD,MAAOzO,KAAKrD,MAAM+R,KAAO,SAEpH,GAAI/Q,EAAMqC,KAAKrD,MAAM+R,KAAO,EAAI1O,KAAKrD,MAAMyR,aAAepO,KAAKrD,MAAM4R,WAAY,CACpF,IAAMC,EAASxO,KAAKrD,MAAM4R,WAAavO,KAAKrD,MAAM+R,KAClD1O,KAAKS,SAAS,CAAEgL,YAAazL,KAAKrD,MAAM+O,YAAc1L,KAAKrD,MAAMyR,aAAeI,EAAS,GAAIpD,MAAOoD,EAAQC,MAAOD,EAASxO,KAAKrD,MAAM+R,KAAO,SAG9I1O,KAAKS,SAAS,CAAEgL,YAAazL,KAAKrD,MAAM+O,WAAa/N,EAAKyN,MAAO8C,EAAclB,EAAUyB,MAAOP,EAAclB,EAAWhN,KAAKrD,MAAM+R,KAAO,IAE7I1O,KAAKkK,kBAIPvM,GAAY,EACI,IAAZmP,GAEEnP,EAAMqC,KAAKrD,MAAMwQ,YAAcnN,KAAKrD,MAAMyR,aAC5CpO,KAAKS,SAAS,CAAE6L,YAActM,KAAKrD,MAAMyQ,UAAapN,KAAKrD,MAAM+O,WAAYL,MAAO,EAAGgD,MAAOrO,KAAKrD,MAAM2R,KAAO,IAEzG3Q,EAAMqC,KAAKrD,MAAMwQ,YAAcnN,KAAKrD,MAAMyR,aAAepO,KAAKrD,MAAM4R,WAC3EvO,KAAKS,SAAS,CAAE6L,YAAatM,KAAKrD,MAAM+O,YAAc1L,KAAKrD,MAAMyQ,UAAYpN,KAAKrD,MAAM4R,YAAalD,MAAOrL,KAAKrD,MAAM4R,WAAYF,MAAOrO,KAAKrD,MAAM4R,WAAavO,KAAKrD,MAAM2R,KAAO,IAGpLtO,KAAKS,SAAS,CAAE6L,YAAatM,KAAKrD,MAAM+O,WAAa/N,EAAK0N,MAAO6C,EAAaG,MAAOH,EAAclO,KAAKrD,MAAM2R,KAAO,IAEvHtO,KAAKkK,aAEc,IAAZ4C,IAEHnP,EAAMqC,KAAKrD,MAAMsQ,YAAcjN,KAAKrD,MAAMyR,aAC5CpO,KAAKS,SAAS,CAAEgL,YAAczL,KAAKrD,MAAMuQ,UAAalN,KAAKrD,MAAM+O,WAAYN,MAAO,EAAGqD,MAAOzO,KAAKrD,MAAM+R,KAAO,IAEzG/Q,EAAMqC,KAAKrD,MAAMsQ,YAAcjN,KAAKrD,MAAMyR,aAAepO,KAAKrD,MAAM4R,WAC3EvO,KAAKS,SAAS,CAAEgL,YAAazL,KAAKrD,MAAM+O,YAAc1L,KAAKrD,MAAMuQ,UAAYlN,KAAKrD,MAAM4R,YAAanD,MAAOpL,KAAKrD,MAAM4R,WAAYE,MAAOzO,KAAKrD,MAAM4R,WAAavO,KAAKrD,MAAM+R,KAAO,IAGpL1O,KAAKS,SAAS,CAAEgL,YAAazL,KAAKrD,MAAM+O,WAAa/N,EAAKyN,MAAO8C,EAAaO,MAAOP,EAAclO,KAAKrD,MAAM+R,KAAO,IAEvH1O,KAAKkK,e,mCAKE1J,EAAGpB,GAAM,IAAD,OACnB,GAAe,cAAXoB,EAAE3D,KAAsB,CAC1B2D,EAAEqN,iBACF,IAAIc,EAAS3O,KAAKkD,OAAOgC,QAIrB0J,EAAQD,EAAOpB,iBACnBqB,EAAM1I,EAAI1F,EAAEgN,QACZ,IAAIqB,EAAUD,EAAMlB,gBAAgBiB,EAAOhB,eAAeC,WAC9C,IAARxO,EACFY,KAAKS,UAAS,SAAAqO,GAAS,MAAK,CAE1BC,QAAS3P,EACT0O,kBAAmBgB,EAAUpC,SAAW,EAAK/P,MAAM8O,YAAcoD,EAAQ3I,MAG5D,IAAR9G,GACPY,KAAKS,UAAS,SAAAqO,GAAS,MAAK,CAC1BC,QAAS3P,EACT0O,kBAAmBgB,EAAUjC,SAAW,EAAKlQ,MAAM2P,YAAcuC,EAAQ3I,S,8BAMzE1F,GACJA,EAAEqN,iBACF,IAAIf,EAAU9M,KAAKrD,MAAMoS,QACrBC,EAAOhP,KAAKsK,aAAa9J,EAAGsM,GAC5BnP,EAAMqR,EAAK,GACXd,EAAcc,EAAK,GACvBhP,KAAKiP,gBAAgBtR,EAAKuQ,EAAapB,GACvC9M,KAAKkK,c,4BAGH1J,GACAR,KAAKrD,MAAMoS,SACb/O,KAAKS,SAAS,CAAEsO,SAAS,M,kCAK3B,IAAI3D,EACAqD,EACApD,EACAgD,EAEArO,KAAKrD,MAAMwR,SACb/C,EAAQpL,KAAKrD,MAAMyO,MACnBqD,EAAQzO,KAAKrD,MAAM8R,MACnBpD,EAAQrL,KAAKrD,MAAM0O,MACnBgD,EAAQrO,KAAKrD,MAAM0R,QAGnBjD,EAAQpL,KAAKrD,MAAMyO,MAAQpL,KAAKrD,MAAMuQ,UACtCuB,EAAQzO,KAAKrD,MAAM8R,MAAQzO,KAAKrD,MAAMuQ,UACtC7B,EAAQrL,KAAKrD,MAAM0O,MAAQrL,KAAKrD,MAAMyQ,UACtCiB,EAAQrO,KAAKrD,MAAM0R,MAAQrO,KAAKrD,MAAMyQ,WAItCpN,KAAK6D,QAAQqB,QAAQoG,UADnBF,EAAQiD,GAASI,EAAQpD,EACM,EAGArL,KAAKrD,MAAMuS,YAAYnB,KAAKoB,IAAId,EAAQjD,M,iCAIlE5K,GACTA,EAAEqN,iBACF,IAAI3H,EAAI1F,EAAEgN,QACNrH,EAAI3F,EAAE4O,QAEJC,EAAOrP,KAAK+J,QAAQ7E,QAC1BmK,EAAK5M,MAAM8F,IAAOpC,EAAI,EAAK,KAC3BkJ,EAAK5M,MAAM6F,KAAQpC,EAAI,EAAK,O,iCAGnB1F,GACTA,EAAEqN,iBACF,IAAI3H,EAAI1F,EAAEgN,QACNrH,EAAI3F,EAAE4O,QAEJC,EAAOrP,KAAKgK,QAAQ9E,QAC1BmK,EAAK5M,MAAM8F,IAAOpC,EAAI,EAAK,KAC3BkJ,EAAK5M,MAAM6F,KAAQpC,EAAI,EAAK,O,kCAGlB1F,GACVA,EAAEqN,iBACF7N,KAAK+J,QAAQ7E,QAAQzC,MAAM6G,QAAU,U,kCAG3B9I,GACVA,EAAEqN,iBACF7N,KAAKgK,QAAQ9E,QAAQzC,MAAM6G,QAAU,U,+BAG9B9I,GACPA,EAAEqN,iBACF7N,KAAK+J,QAAQ7E,QAAQzC,MAAM6G,QAAU,S,+BAG9B9I,GACPA,EAAEqN,iBACF7N,KAAKgK,QAAQ9E,QAAQzC,MAAM6G,QAAU,S,+BAG7B,IAAD,OACP,OACE,yBACE2C,YAAa,SAAAzL,GAAC,OAAI,EAAK4J,QAAQ5J,IAC/B8O,UAAW,SAAA9O,GAAC,OAAI,EAAK6J,MAAM7J,KAC3B,yBAAKe,UAAU,aACb,0CACA,yBAAKkB,MAAO,CAAE+D,MAAO,MAAOoB,OAAQ,SAClC,uBAAGnF,MAAO,CAAEoF,UAAW,SACpB7H,KAAKL,MAAM4P,cAIlB,yBAAK/I,MAAOxG,KAAKrD,MAAM6S,SAAUlJ,OAAQtG,KAAKrD,MAAM8S,UAAY,GAAIrH,IAAKpI,KAAKkD,QAE3E,YAAIwM,MAAM1P,KAAKrD,MAAM+R,MAAMxP,QAAQgK,KAClC,SAACvL,GAAD,OACE,YAAI+R,MAAM,EAAK/S,MAAMgT,WAAWhS,IAAMuB,QAAQgK,KAC5C,SAAC0G,GAAD,OAAS,EAAK3F,UAAUtM,EAAKiS,SAGlC,YAAIF,MAAM1P,KAAKrD,MAAM2R,MAAMpP,QAAQgK,KAClC,SAACvL,GAAD,OACE,YAAI+R,MAAM,EAAK/S,MAAMkT,YAAYlS,IAAMuB,QAAQgK,KAC7C,SAAC0G,GAAD,OAAS,EAAKE,WAAWnS,EAAKiS,SASpC,0BAAMpJ,MAAOxG,KAAKrD,MAAMoT,QACtBzJ,OAAO,IACPD,KAAK,QACLH,EAAGlG,KAAKrD,MAAMyR,aAAepO,KAAKrD,MAAM+O,WAAa,EACrDvF,EAAGnG,KAAKrD,MAAMmP,SAAW,KAC3B,0BAAMtF,MAAM,IACVF,OAAO,KACPD,KAAK,QACLH,EAAGlG,KAAKrD,MAAMyR,aAAepO,KAAKrD,MAAM+O,WAAa,EACrDvF,EAAGnG,KAAKrD,MAAMmP,SAAW,KAC3B,0BAAMtF,MAAM,IACVF,OAAO,KACPD,KAAK,QACLH,EAAGlG,KAAKrD,MAAMoT,QAAU/P,KAAKrD,MAAMyR,aAAepO,KAAKrD,MAAM+O,WAAa,EAC1EvF,EAAGnG,KAAKrD,MAAMmP,SAAW,KAE1B9L,KAAK6K,aACL7K,KAAK8K,aACL,YAAI4E,MAAM1P,KAAKrD,MAAMqT,SAAS9Q,QAAQgK,KACrC,SAAC+G,GAAD,OACE,0BACEzJ,MAAM,IACNF,OAAO,KACPD,KAAK,QACLH,EAAG,EAAKvJ,MAAMsR,UAAa,EAAKtR,MAAMuT,UAAYD,EAAO,GAAM,EAC/D9J,EAAG,EAAKxJ,MAAMmP,SAAW,QAG9B,YAAI4D,MAAM1P,KAAKrD,MAAMqT,SAAS9Q,QAAQgK,KACrC,SAAC+G,GAAD,OACA,0BACAE,WAAW,SACXjK,EAAG,EAAKvJ,MAAMsR,UAAa,EAAKtR,MAAMuT,UAAYD,EAAO,GAAM,EAC/D9J,EAAG,EAAKxJ,MAAMmP,SAAW,IACtB,EAAKnP,MAAMyT,OAAU,EAAKzT,MAAM0T,UAAYJ,EAAO,OAGxD,0BAAMK,cAAY,SAASpK,EAAGlG,KAAKrD,MAAMsR,UAAW9H,EAAGnG,KAAKrD,MAAMmP,SAAW,IAAK9L,KAAKrD,MAAMyT,QAC7F,0BAAME,cAAY,SAASpK,EAAGlG,KAAKrD,MAAMsR,UAAYjO,KAAKrD,MAAMoT,QAAS5J,EAAGnG,KAAKrD,MAAMmP,SAAW,IAAK9L,KAAKrD,MAAMyT,OAASpQ,KAAKrD,MAAM4T,QA1DxI,0CA6DA,6BACA,yBAAKzI,MAAM,SACT,yBAAKA,MAAM,YAAYrF,MAAO,CAAE+N,gBAAiBxQ,KAAKrD,MAAMuP,UAC3DlM,KAAKL,MAAM8Q,OACZ,6BACA,yBAAK3I,MAAM,YAAYrF,MAAO,CAAE+N,gBAAiBxQ,KAAKrD,MAAM4P,UAC3DvM,KAAKL,MAAM+Q,QAEd,6BACA,mDAAyB1Q,KAAKrD,MAAMyO,MAApC,2BAAmEpL,KAAKrD,MAAM0O,MAA9E,KACA,0BAAM5I,MAAO,CAAEC,MAAO,SAAW0F,IAAKpI,KAAK6D,WAExC7D,KAAKrD,MAAM6F,WACZ,6BACE,2BAAO3F,KAAK,SAAS0E,UAAU,eAAeX,MAAM,sBAClDY,QAASxB,KAAK8B,WAFlB,IAE8B,6BAC5B,uBAAGW,MAAO,CAAEC,MAAO,OAAQ8D,MAAO,MAAOoB,OAAQ,SAAjD,kJAHF,IAMO,6BACL,2BAAO/K,KAAK,SAAS0E,UAAU,MAAMX,MAAM,yBACzCY,QAASxB,KAAK2E,YAGpB,0BACApD,UAAU,OACV6G,IAAKpI,KAAK+J,SACR/J,KAAKL,MAAM8Q,QAEb,0BACAlP,UAAU,OACV6G,IAAKpI,KAAKgK,SACRhK,KAAKL,MAAM+Q,W,mCA1rBjB,IAmCIvC,EAnCE7P,EAAO0B,KAAKL,MAAMrB,KAElBqS,EAAarS,EAAK,cAClBqN,EAAUrN,EAAK,iBACfoQ,EAAOpQ,EAAI,KACXgQ,EAAOhQ,EAAI,KACXoN,EAAuB,EAAVC,EAAc,EAC3BrF,EAA2D,IAAjDyH,KAAK6C,KAAMlF,EAAaiF,EAAc,IAAM,GAEtDE,EAAavS,EAAK,eAClBwS,EAAiBD,EAAanF,EAC9BqF,EAAUhD,KAAK6C,KAAK7C,KAAK1L,IAAIqM,EAAMJ,GAAQ,GAC3C0C,EAAajD,KAAK1L,IAAIqM,EAAMJ,GAAQ5C,EAEpCI,EAAWxF,EAAS,GACpBlF,EAAS4P,EAAaF,EAGtB7C,GAFSF,KAAK6C,KAAKxP,EAASsK,GAEhBqC,KAAK6C,KAAKI,EAAa,IACnC5C,EAAe2C,EAEfE,EAAY7P,IAAWsN,EAAO,EAAI,GAAKhD,GAAc4C,EAAO,EAAI,GAAK5C,EAAa,GAClF6C,EAAauC,EAAiBpF,EAC9BqE,EAAUxB,EAAa7C,EAEvBgB,EAAWqB,KAAK6C,KAAK,GAAMlC,GAAQhD,EACnCmB,EAAWkB,KAAK6C,KAAK,GAAMtC,GAAQ5C,EACnCuB,EAAcc,KAAK6C,KAAKlE,EAAWhB,GACnCyB,EAAcY,KAAK6C,KAAK/D,EAAWnB,GAInCwB,EAAYa,KAAKoB,IAAIpB,KAAK6C,KAAKlC,EAAO,GAAKN,GAC3ChB,EAAYW,KAAKoB,IAAIpB,KAAK6C,KAAKtC,EAAO,GAAKF,GAI/CD,IADE,YAAa7P,IACLA,EAAI,QAMhB,IAAM4S,EAAY5S,EAAI,UAClBmN,EAAcyF,EAAYhE,EAAY,EACtC9B,EAAQ8F,EAAYhE,EACpBuB,EAAQyC,EAAYxC,EAAO,EAG3B1B,EAAWoB,EAAelB,EAC9B,GAAIiB,EACF,GAAI/C,EAAQgD,EAAe,EACzB3C,GAAe2C,EAAe,GAAK1C,EACnCN,EAAQ,EACRqD,EAAQC,EAAO,OAEZ,GAAItD,EAAQsD,EAAO,EAAIN,EAAeG,EAAY,CACrD,IAAMC,EAASD,EAAaG,EAC5BjD,EAAcC,GAAc0C,EAAeI,EAAS,GACpDpD,EAAQoD,EACRC,EAAQD,EAASF,EAAO,OAGxB7C,EAAcC,EAAaN,EAC3BA,EAjBW8F,EAiBQlE,EACnByB,EAlBWyC,EAkBQlE,EAAW0B,EAAO,OAKnCtD,EAAQ6B,EAAcmB,GACxB3C,EAAeyB,EAAaxB,EAC5BN,EAAQ,EACRqD,EAAQC,EAAO,GAERtD,EAAQ6B,EAAcmB,EAAeG,GAC5C9C,EAAcC,GAAcwB,EAAYqB,GACxCnD,EAAQmD,EACRE,EAAQF,EAAaG,EAAO,IAG5BjD,EAAcC,EAAcN,EAC5BA,EAnCW8F,EAoCXzC,EApCWyC,EAoCQxC,EAAO,GAI9B,IA4CIyC,EAQAnB,EACAE,EACAG,EAtDEe,EAAY9S,EAAI,UAClBgO,EAAc8E,EAAYhE,EAAY,EACtC/B,EAAQ+F,EAAYhE,EACpBiB,EAAQ+C,EAAY9C,EAAO,EAI/B,GADAtB,EAAWoB,EAAehB,EACtBe,EACF,GAAI9C,EAAQ+C,EAAe,EACzB9B,GAAe8B,EAAe,GAAK1C,EACnCL,EAAQ,EACRgD,EAAQC,EAAO,OAEZ,GAAIjD,EAAQiD,EAAO,EAAIF,EAAeG,EAAY,CACrD,IAAMC,EAASD,EAAaD,EAC5BhC,EAAcZ,GAAc0C,EAAeI,GAC3CnD,EAAQmD,EACRH,EAAQG,EAASF,EAAO,OAGxBhC,EAAcZ,EAAaL,EAC3BA,EAjBW+F,EAiBQpE,EACnBqB,EAlBW+C,EAkBQpE,EAAWsB,EAAO,OAKnCjD,EAAQ8B,EAAciB,GACxB9B,EAAec,EAAa1B,EAC5BL,EAAQ,EACRgD,EAAQC,EAAO,GAERjD,EAAQ8B,EAAciB,EAAeG,GAC5CjC,EAAcZ,GAAc0B,EAAYmB,EAAa,GACrDlD,EAAQkD,EACRF,EAAQE,EAAaD,EAAO,IAG5BhC,EAAcZ,EAAcL,EAC5BA,EAnCW+F,EAoCX/C,EApCW+C,EAoCQ9C,EAAO,GAe9B,IAaI9B,EAQAI,EArBEyE,EAAaR,GATjBM,EADE,cAAe7S,EACL0B,KAAKL,MAAMrB,KAAX,UAGA,GAQV,YAAaA,GAAQ+S,GAAcC,SAAShT,EAAI,SAAe,KAAO,GAExE4R,EAAWW,EAAanF,IADxBsE,EAAUsB,SAAShT,EAAI,UACyB,GAChD+R,EAAWgB,GAAcrB,EAAU,KAGnCA,EAAU,EACVE,EAAWmB,EACXhB,EAAWgB,GAKX7E,EADE,cAAelO,GACLA,EAAI,UAQhBsO,EADE,cAAetO,GACLA,EAAI,UAMlB,IAKI4N,EAQAK,EAbAX,EAAY8C,EAqBhB,OApBIJ,EAAOI,IACT9C,EAAY0C,GAKZpC,EADE,WAAY5N,EACLA,EAAI,OAGJ,iBAKTiO,EADE,WAAYjO,EACLA,EAAI,OAGJ,UAGJ,CACLkE,WAAW,EACX6O,WAAY/S,EAAK,eACjB4S,UAAW5S,EAAI,UACf8S,UAAW9S,EAAI,UACf4H,EAAG,EAAGC,EAAG,EAAGoL,QAAQ,EACpBC,MAAO,KACPC,MAAM,EACNjC,SAAUpO,EACVqO,UAAWnJ,EACXoL,KAAM,EACNhD,KAAMA,EACNiB,WAAYrR,EAAI,WAChBgQ,KAAMA,EACNuB,YAAavR,EAAI,YACjBoN,WAAYA,EACZD,YAAcA,EACda,YAAaA,EACbI,SAAUO,EAAcvB,EACxBuB,YAAaA,EACbJ,SAAUM,EAAczB,EACxByB,YAAaA,EACbW,kBAAmB,EACnBiB,SAAS,EACT3D,MAAOA,EACPqD,MAAOA,EACPpD,MAAOA,EACPgD,MAAOA,EACPsD,QAAS5D,KAAKC,OAAO5M,EAAUsN,EAAOhD,GAAeA,GACrDkG,QAAS7D,KAAKC,OAAO5M,EAAUkN,EAAO5C,GAAeA,GACrDwD,YAAa5Q,EAAI,YACjBqN,QAASA,EACTG,SAAUA,EACVmC,UAAWA,EACXG,aAAcA,EACd6C,UAAWA,EACXlB,QAASA,EACTxB,WAAYA,EACZwC,QAASA,EACTC,WAAYA,EACZT,OAAQM,EACR3D,UAAWA,EACXE,UAAWA,EACXgD,OAAQpQ,KAAKL,MAAMrB,KAAX,OACRuT,WAAW,EACXV,UAAWA,EACXnB,QAASA,EACTE,SAAUA,EACVG,SAAUA,EACVlC,QAASA,EACT3B,UAAWA,EACXI,UAAWA,EACXhB,UAAWA,EACXM,OAAQA,EACRK,OAAQA,O,GA7RkB9K,aAivBjBC,eAJS,SAAA/E,GAAK,MAAK,CAChCD,KAAMC,EAAMD,QAKZ,CAAEkB,UAAS0B,eAFEoC,CAGbiI,GCnvBImI,G,wDACJ,WAAYnS,GAAQ,IAAD,8BACjB,cAAMA,IAEDiD,UAAYC,IAAMC,YACvB,EAAKiP,SAAWlP,IAAMC,YACtB,EAAKkP,KAAOnP,IAAMC,YAClB,EAAKmP,OAASpP,IAAMC,YACpB,EAAKoP,OAASrP,IAAMC,YAEpB,EAAKnG,MAAQ,EAAKZ,aAElB,EAAK8D,SAAW,EAAKA,SAASC,KAAd,gBAChB,EAAK+B,WAAa,EAAKA,WAAW/B,KAAhB,gBAClB,EAAKgC,SAAW,EAAKA,SAAShC,KAAd,gBAbC,E,yDA2BjBE,KAAKS,SAAST,KAAKjE,gB,2CAKnBiG,EADqBhC,KAAKL,MAAlBqC,UACChC,MACTA,KAAKC,UACLD,KAAKmS,YACLnS,KAAKL,MAAMsC,aAAa,e,8CAKxBD,EADqBhC,KAAKL,MAAlBqC,eACCE,K,gCAIT,IAAMxE,EAAKsC,KAAKL,MAAMjD,KAAKV,OAAO0B,GAC5B4C,EAAYN,KAAKL,MAAMjD,KAAKV,OAAO2B,IAAI4C,MAAM,KAAK,GAClD7B,EAAWsB,KAAKL,MAAMjD,KAAKV,OAAO2B,IAAI4C,MAAM,KAAK,GACvDP,KAAKL,MAAM/B,QAAQF,EAAI4C,EAAW5B,K,+BAG3B8B,GACPR,KAAKS,SAAL,eAAiBD,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,U,iCAI1C,IAAMrB,EAAWS,KAAKL,MAAMyS,gBACtB7V,EAASyD,KAAKrD,MAAMmI,UAC1B9E,KAAKL,MAAML,YAAYC,EAAUhD,GACjCyD,KAAKS,SAAS,CAAE+B,WAAW,M,kCAGhB,IAAD,OACJlE,EAAO0B,KAAKL,MAAM0S,SAAS/T,KAE3B+O,EAAMiF,IAAUtS,KAAK+R,SAAS7M,SAASqN,OAAO,OACjDC,KAAK,QAASxS,KAAKL,MAAM0S,SAAS7L,OAClCgM,KAAK,SAAUxS,KAAKL,MAAM0S,SAAS/L,QAEtC+G,EAAIoF,UAAU,QACXnU,KAAKA,GACLoU,QACAH,OAAO,QACPC,KAAK,KAAK,SAACG,EAAGC,GAAJ,OAAUA,EAAI,EAAKjT,MAAM0S,SAAS7L,MAAQlI,EAAK8C,UACzDoR,KAAK,KAAK,SAACG,EAAGC,GAAJ,OAAU,EAAKjT,MAAM0S,SAAS/L,OAAS,GAAKqM,KACtDH,KAAK,QAASxS,KAAKL,MAAM0S,SAAS7L,MAAQlI,EAAK8C,OAAS,IACxDoR,KAAK,UAAU,SAACG,EAAGC,GAAJ,OAAc,GAAJD,KACzBH,KAAK,OAAQ,WACbA,KAAK,UAAW,IAEnBnF,EAAIoF,UAAU,QACXnU,KAAKA,GACLoU,QACAH,OAAO,QACP1J,MAAK,SAAC8J,GAAD,OAAOA,KACZH,KAAK,KAAK,SAACG,EAAGC,GAAJ,OAAUA,EAAI,EAAKjT,MAAM0S,SAAS7L,MAAQlI,EAAK8C,UACzDoR,KAAK,KAAK,SAACG,EAAGC,GAAJ,OAAU,EAAKjT,MAAM0S,SAAS/L,OAAU,GAAKqM,EAAK,O,+BAI/D,IAAME,EAAY7S,KAAKL,MAAM0S,SAAS/L,OAAS,EAE/C,OACE,6BACE,yCADF,IACoB,6BACjBtG,KAAKL,MAAMmT,aACZ,yBAAK1K,IAAKpI,KAAK+R,SACbtP,MAAO,CACLsQ,SAAU,WACVvM,MAAOxG,KAAKL,MAAM0S,SAAS7L,MAC3BoB,OAAQ,SACV,yBACEnF,MAAO,CACLsQ,SAAU,WACVxK,IAAKsK,IACP,2BAAOhW,KAAK,QAAQsF,IAAKnC,KAAKL,MAAMqT,aAAc3Q,IAAKrC,KAAKL,MAAMsT,cAChE1R,UAAU,cAAc1B,SAAUG,KAAKH,SACvCc,KAAK,YAAYC,MAAOZ,KAAKrD,MAAMmI,UACnCoO,KAAMlT,KAAKL,MAAM0S,SAASa,KAAM9K,IAAKpI,KAAK4C,UAC1CH,MAAO,CAAE+D,MAAOxG,KAAKL,MAAM0S,SAAS7L,WAGzCxG,KAAKL,MAAMqT,aACZ,2BAAOnW,KAAK,QAAQiL,MAAM,eACxBrF,MAAO,CAAE+D,MAAOxG,KAAKL,MAAM0S,SAAS7L,OAAS3G,SAAUG,KAAKH,SAC5Dc,KAAK,YAAYC,MAAOZ,KAAKrD,MAAMmI,UACnCoO,KAAMlT,KAAKL,MAAM0S,SAASa,KAC1B/Q,IAAKnC,KAAKL,MAAMqT,aAAc3Q,IAAKrC,KAAKL,MAAMsT,gBAC/CjT,KAAKL,MAAMsT,cACZ,6BA1BF,oBA2BoBjT,KAAKrD,MAAMmI,UAE7B,6BAAK,8BAEF9E,KAAKrD,MAAM6F,WACZ,6BACE,2BAAO3F,KAAK,SAAS0E,UAAU,MAAMX,MAAM,sBACzCY,QAASxB,KAAK8B,WAFlB,IAE8B,6BAC5B,uBAAGW,MAAO,CAAEC,MAAO,SAAnB,sJ,mCA9GR,MAAO,CACLF,WAAW,EACX2Q,SAAS,EACTC,OAAQ/W,OACRgX,OAAQhX,OACRyI,UAAWzI,Y,GAvBOoF,cAqJTC,eAJS,SAAA/E,GAAK,MAAK,CAChCD,KAAMC,EAAMD,QAKZ,CAAEkB,UAAS0B,eAFEoC,CAGboQ,GC3IIwB,E,kDACJ,WAAY3T,GAAQ,IAAD,8BACjB,cAAMA,IACDhD,MAAQ,CACX4W,UAAW,IAGb,EAAKC,eAAiB,EAAKA,eAAe1T,KAApB,gBACtB,EAAK2T,cAAgB,EAAKA,cAAc3T,KAAnB,gBACrB,EAAK4T,YAAc,EAAKA,YAAY5T,KAAjB,gBACnB,EAAKmC,aAAe,EAAKA,aAAanC,KAAlB,gBATH,E,gEAajBE,KAAKC,UACL,IAAMC,EAAWF,KAAKL,MAAMQ,MAAMC,OAAOF,SACnCxD,EAAOsD,KAAKL,MAAMQ,MAAMC,OAAO1D,KAIhCsD,KAAKL,MAAMjD,KAAKR,gBACnByX,MAAM,+BACN3T,KAAKL,MAAM0B,QAAQC,KAAK,SAAWpB,EAAW,IAAMxD,M,qCAOtD,IAAMwD,EAAWF,KAAKL,MAAMQ,MAAMC,OAAOF,SACnCxD,EAAOsD,KAAKL,MAAMQ,MAAMC,OAAO1D,KAC/BkX,EAAQ5T,KAAKL,MAAMjD,KAAKP,aAAa6D,KAAKL,MAAMjD,KAAKN,KAAO,GAG9DwX,GAFU5T,KAAKL,MAAMjD,KAAKP,aAAa6D,KAAKL,MAAMjD,KAAKP,aAAaiF,OAAS,IAG/EpB,KAAKL,MAAMrD,UAAS,GAEtB0D,KAAKL,MAAMR,QAAQa,KAAKL,MAAMjD,KAAKN,KAAO,GAC1C4D,KAAKL,MAAM0B,QAAQC,KAAK,SAAWpB,EAAW,IAAMxD,EAClD,IAAMkX,EAAMC,c,uCAMV7T,KAAK8T,cACP9T,KAAK8T,YAAYjS,aACjB7B,KAAK+T,gBAEH/T,KAAKgU,mBACPhU,KAAKgU,iBAAiBnS,aACtB7B,KAAK+T,gBAEH/T,KAAKiU,gBACPjU,KAAKiU,cAAcpS,aACnB7B,KAAK+T,gBAEH/T,KAAKkU,mBACPlU,KAAKkU,iBAAiBrS,aACtB7B,KAAK+T,gBAEH/T,KAAKmU,qBACPnU,KAAKmU,mBAAmBtS,aACxB7B,KAAK+T,gBAEH/T,KAAKoU,iBACPpU,KAAK+T,iB,sCAMP/T,KAAKL,MAAM0B,QAAQC,KAAK,c,oCAMxB,OACE,6BAEKtB,KAAKL,MAAMjD,KAAKJ,SAOjB,6BAE4B,eAAxB0D,KAAKrD,MAAM4W,UAEX,qCAEA,kGACoE,6BAAK,8BAG3E,wDAC4B,4BACxB,2BAAO1W,KAAK,SAAS0E,UAAU,eAAeX,MAAM,SAClDY,QAASxB,KAAKyT,gBAChB,6BACE,6BAAK,6BAAK,6BAAK,6BAAK,6BAAK,gCArBjC,6BAEE,2BAAO5W,KAAK,SAAS0E,UAAU,eAAeX,MAAM,gBAClDY,QAASxB,KAAKwT,iBAChB,6BAAK,6BAAK,6BAAK,6BAAK,6BAAK,iC,gCA2BjC,IAAMtT,EAAWF,KAAKL,MAAMQ,MAAMC,OAAOF,SAEnCI,EAAYN,KAAKL,MAAMQ,MAAMC,OAAO1D,KAAK6D,MAAM,KAAK,GACpD7B,EAAWsB,KAAKL,MAAMQ,MAAMC,OAAO1D,KAAK6D,MAAM,KAAK,GACzDP,KAAKL,MAAM/B,QAAQsC,EAAUI,EAAW5B,K,mCAS7B2V,GACXrU,KAAKS,SAAS,CAAE8S,UAAWc,M,oCAGd,IAAD,OAEN3X,GADWsD,KAAKL,MAAMQ,MAAMC,OAAOF,SAC5BF,KAAKL,MAAMjD,KAAKT,eACvBqY,EAAMtU,KAAKL,MAAMQ,MAAMC,OAAOmU,KACpC,GAAI7X,EAAK4X,GAMP,OAAO5X,EAAK4X,GAAL,MACL,IAAK,SAEH,IAAMlS,EAAW1F,EAAK4X,GAAL,SACXhS,EAAY5F,EAAK4X,GAAL,UACZ/U,EAAW7C,EAAK4X,GAAL,SACX/R,EAAe7F,EAAK4X,GAAK,cAC/B,OACE,yBAAK/S,UAAU,aACb,kBAAC,EAAD,CAAQS,SAAU,SAAAoG,GAAG,OAAK,EAAK0L,YAAc1L,GAC3C7I,SAAUA,EAAUgD,aAAcA,EAClCH,SAAUA,EAAUE,UAAWA,EAAWL,aAAcjC,KAAKiC,eAC/D,6BAEA,uBAAMyR,YAAN,OAGJ,IAAK,WAEH,IAAM3O,EAAarI,EAAK4X,GAAL,WAGbxP,EAAWpI,EAAK4X,GAAL,UAEjB,OACE,yBAAK/S,UAAU,aACf,kBAAC,EAAD,CAAUS,SAAU,SAAAoG,GAAG,OAAK,EAAKgM,gBAAkBhM,GAChDrD,WAAYA,EACZD,UAAWA,EAAW7C,aAAcjC,KAAKiC,eAC1C,6BACA,uBAAMyR,YAAN,OAGJ,IAAK,gBAEmBhX,EAAK4X,GAAL,WAAtB,IAGME,EAAgB9X,EAAK4X,GAAL,UAEtB,OACE,yBAAK/S,UAAU,aACf,kBAAC,EAAD,CAAUS,SAAU,SAAAoG,GAAG,OAAK,EAAKgM,gBAAkBhM,GACjDrD,WAAYA,EACZD,UAAW0P,EAAgBvS,aAAcjC,KAAKiC,eAC9C,6BACA,uBAAMyR,YAAN,OAGN,IAAK,cAEH,IAAMe,EAAgB/X,EAAK4X,GAAL,WAGhBI,EAAchY,EAAK4X,GAAL,UAEpB,OACE,yBAAK/S,UAAU,aACf,kBAAC,EAAD,CAAaS,SAAU,SAAAoG,GAAG,OAAK,EAAKgM,gBAAkBhM,GACnDrD,WAAY0P,EACZ3P,UAAW4P,EAAczS,aAAcjC,KAAKiC,eAC7C,6BACA,uBAAMyR,YAAN,OAIV,IAAK,cAEH,IAAM7K,EAAOnM,EAAK4X,GAAK,eACnBxL,EAAY,GAIhB,OAHIhI,OAAO5B,KAAKxC,EAAK4X,IAAMK,SAAS,YAClC7L,EAAYpM,EAAK4X,GAAL,QAGZ,yBAAK/S,UAAU,aACb,kBAAC,EAAD,CAAYS,SAAU,SAAAoG,GAAG,OAAK,EAAKgM,gBAAkBhM,GACnDS,KAAMA,EAAMC,UAAWA,EAAW7G,aAAcjC,KAAKiC,eACvD,6BACA,uBAAMyR,YAAN,OAGN,IAAK,eAEH,IAAMnE,EAAa7S,EAAK4X,GAAL,SACb7D,EAAS/T,EAAK4X,GAAL,UACT5D,EAAShU,EAAK4X,GAAL,UACTvJ,EAAgBrO,EAAK4X,GAAK,6BAC1BrJ,EAAevO,EAAK4X,GAAK,4BACzBnJ,EAAezO,EAAK4X,GAAK,4BACzBM,EAAelY,EAAK4X,GAAL,SACfO,EAAkBnY,EAAK4X,GAAL,YACxB,OACE,yBAAK/S,UAAU,aACb,kBAAC,EAAD,CAAmBS,SAAU,SAAAoG,GAAG,OAAK,EAAK4L,iBAAmB5L,GAC3DmH,WAAYA,EAAYkB,OAAQA,EAAQC,OAAQA,EAChD3F,cAAeA,EACfE,aAAcA,EACdE,aAAcA,EACd2J,SAAUF,EAActW,KAAMuW,EAC9B5S,aAAcjC,KAAKiC,eACrB,6BACA,uBAAMyR,YAAN,OAGN,IAAK,YAEH,IAAMZ,EAAepW,EAAK4X,GAAL,SACflC,EAAkB1V,EAAK4X,GAAK,iBAC5BtB,EAAetW,EAAK4X,GAAL,SACfrB,EAAgBvW,EAAK4X,GAAL,UAChBS,EAAkBrY,EAAK4X,GAAL,YACxB,OACE,yBAAK/S,UAAU,aACb,kBAAC,EAAD,CAAWS,SAAU,SAAAoG,GAAG,OAAK,EAAK4M,eAAiB5M,GACjD0K,aAAcA,EACdV,gBAAiBA,EACjBY,aAAcA,EACdC,cAAeA,EAAeZ,SAAU0C,EACxC9S,aAAcjC,KAAKiC,eACrB,6BACA,uBAAMyR,YAAN,OAGN,QACE,OAAQ,2D,+BAOd,IAAMhV,EAAWsB,KAAKL,MAAMQ,MAAMC,OAAO1D,KACnCuY,EAAcjV,KAAKL,MAAMjD,KAAKR,cACpC,OACE,yBAAKqF,UAAU,aAAf,oBACiB,6BACjB,2BAAI7C,GACJ,6BAHA,mBAIgB,6BAChB,2BAAIuW,GACJ,6BAAK,6BACJjV,KAAKkV,mB,GAzRazT,aA6SVC,eALS,SAAA/E,GAAK,MAAK,CAChCD,KAAMC,EAAMD,KACZR,cAAeS,EAAMT,iBAKrB,CAAE0B,UAASiB,WAAUM,UAAS7C,YAFjBoF,CAGb4R,GC7TI6B,E,kLAGF,IAAMjV,EAAWF,KAAKL,MAAMjD,KAAKV,OAAO0B,GAClChB,EAAOsD,KAAKL,MAAMjD,KAAKV,OAAO2B,IAEpC,GAAsC,IAAjCqC,KAAKL,MAAMjD,KAAKH,OAAO6E,OAAa,CACvC,IAAMgU,EAAW,CACflZ,cAAe8D,KAAKL,MAAMjD,KAAKR,eAEjC8D,KAAKL,MAAMjD,KAAKH,OAAO2M,KAAI,SAAAmM,GACzBD,EAASC,EAAM7V,KAAO6V,EAAM5V,OAE9B2V,EAAQ,UAAgBpV,KAAKL,MAAMjD,KAAKT,cAAcqZ,UAEtDtV,KAAKL,MAAMd,SAASqB,EAAUxD,EAAM0Y,M,+BAKtC,IAAMG,EAAOvV,KAAKL,MAAMjD,KAAKT,cAAcsZ,KACrCrZ,EAAgB8D,KAAKL,MAAMjD,KAAKR,cACtC,OACE,yBAAKqF,UAAU,aACb,8DADF,IAC0C,6BAD1C,WAEU,kCAFV,qDAEsE,6BAAK,6BAF3E,uCAGsC,6BACpC,2BAAIrF,GAJN,IAIyB,6BAJzB,2BAK0B,uBAAGsZ,KAAMD,EAAM7U,OAAO,UAAtB,QAL1B,wE,GAvBgBe,aA2CPC,gBAJS,SAAA/E,GAAK,MAAK,CAChCD,KAAMC,EAAMD,QAKZ,CAAEmC,YAFW6C,CAGbyT,GCvCIM,G,kDACJ,WAAY9V,GAAQ,IAAD,8BACjB,cAAMA,IACDhD,MAAQ,CACXiD,cAAe,IAGjB,EAAKC,SAAW,EAAKA,SAASC,KAAd,gBAChB,EAAKC,SAAW,EAAKA,SAASD,KAAd,gBAPC,E,gEAWjBE,KAAKC,UAEL,IAAMC,EAAWF,KAAKL,MAAMQ,MAAMC,OAAOF,SACnCG,EAAYL,KAAKL,MAAMQ,MAAMC,OAAO1D,KAC1CsD,KAAKL,MAAMrC,YAAY4C,EAAUG,K,gCAIjC,IAAMH,EAAWF,KAAKL,MAAMQ,MAAMC,OAAOF,SACnCI,EAAYN,KAAKL,MAAMQ,MAAMC,OAAO1D,KAAK6D,MAAM,KAAK,GACpD7B,EAAWsB,KAAKL,MAAMQ,MAAMC,OAAO1D,KAAK6D,MAAM,KAAK,GACzDP,KAAKL,MAAM/B,QAAQsC,EAAUI,EAAW5B,K,+BAGjC8B,GACPR,KAAKS,SAAL,eAAiBD,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,U,iCAI1CZ,KAAKL,MAAMhB,YAAYqB,KAAKrD,MAAMiD,eAClC,IAAMM,EAAWF,KAAKL,MAAMQ,MAAMC,OAAOF,SACnCG,EAAYL,KAAKL,MAAMQ,MAAMC,OAAO1D,KACtCP,EAAe,GACnB,GAAI6D,KAAKL,MAAMjD,KAAKT,cAAe,CACjC,IAAM4E,EAAUC,OAAO5B,KAAKc,KAAKL,MAAMjD,KAAKT,eAC5C8E,QAAQC,IAAIH,GAEZ1E,EAAe0E,EAAQI,QAAO,SAAAC,GAAG,MAAqB,KAAjBA,EAAIC,OAAO,MAChDnB,KAAKL,MAAMV,WAAW9C,GAGG,GAAvBA,EAAaiF,QACfpB,KAAKL,MAAMrD,UAAS,GAEtB0D,KAAKL,MAAMR,QAAQ,GACnBa,KAAKL,MAAM0B,QAAQC,KAAK,YAAcpB,EAAW,IAAMG,EACrD,IAAMlE,EAAa,M,+BAIrB,IAAMuC,EAAWsB,KAAKL,MAAMQ,MAAMC,OAAO1D,KACvC,OACE,yBAAK6E,UAAU,aAAf,oBACiB,6BACjB,2BAAI7C,GACJ,6BAAK,6BAHL,yBAIsB,4BACtB,2BAAO7B,KAAK,OAAO8D,KAAK,gBACtBC,MAAOZ,KAAKrD,MAAMiD,cAAeC,SAAUG,KAAKH,WAClD,6BACA,2BAAOhD,KAAK,SAAS0E,UAAU,MAAMX,MAAM,mBACzCY,QAASxB,KAAKD,WAChB,6BAAK,6BAVL,oEAWiE,6BAXjE,iCAY8B,kCAZ9B,yB,GAtDqB0B,aAwFdC,gBALS,SAAA/E,GAAK,MAAK,CAChCD,KAAMC,EAAMD,KACZR,cAAeS,EAAMT,iBAKrB,CAAEoB,cAAaqB,cAAaf,UAASqB,aAAYE,UAAS7C,YAF7CoF,CAGb+T,ICtFIC,G,kDACJ,WAAY/V,GAAQ,IAAD,8BACjB,cAAMA,IACDhD,MAAQ,CACX4W,UAAW,IAGb,EAAKC,eAAiB,EAAKA,eAAe1T,KAApB,gBACtB,EAAK2T,cAAgB,EAAKA,cAAc3T,KAAnB,gBACrB,EAAK4T,YAAc,EAAKA,YAAY5T,KAAjB,gBARF,E,gEAYjBE,KAAKC,UACL,IAAMC,EAAWF,KAAKL,MAAMQ,MAAMC,OAAOF,SACnCxD,EAAOsD,KAAKL,MAAMQ,MAAMC,OAAO1D,KAChCsD,KAAKL,MAAMjD,KAAKR,gBACnByX,MAAM,+BACN3T,KAAKL,MAAM0B,QAAQC,KAAK,YAAcpB,EAAW,IAAMxD,M,qCAMzD,IAAMwD,EAAWF,KAAKL,MAAMQ,MAAMC,OAAOF,SACnCxD,EAAOsD,KAAKL,MAAMQ,MAAMC,OAAO1D,KAC/BkX,EAAQ5T,KAAKL,MAAMjD,KAAKP,aAAa6D,KAAKL,MAAMjD,KAAKN,KAAO,GAE9DwX,GADU5T,KAAKL,MAAMjD,KAAKP,aAAa6D,KAAKL,MAAMjD,KAAKP,aAAaiF,OAAS,IAE/EpB,KAAKL,MAAMrD,UAAS,GAEtB0D,KAAKL,MAAMR,QAAQa,KAAKL,MAAMjD,KAAKN,KAAO,GAC1C4D,KAAKL,MAAM0B,QAAQC,KAAK,YAAcpB,EAAW,IAAMxD,EACrD,IAAMkX,EAAMC,c,uCAMV7T,KAAK8T,cACP9T,KAAK8T,YAAYjS,aACjB7B,KAAK+T,gBAEH/T,KAAKgU,mBACPhU,KAAKgU,iBAAiBnS,aACtB7B,KAAK+T,gBAEH/T,KAAKoU,iBACPpU,KAAK+T,iB,sCAMP/T,KAAKL,MAAM0B,QAAQC,KAAK,qB,oCAMxB,OACE,6BAEKtB,KAAKL,MAAMjD,KAAKJ,SAMjB,kGACoE,6BAAK,6BADzE,+BAE8B,4BAC5B,2BAAOO,KAAK,SAAS0E,UAAU,eAAeX,MAAM,SAClDY,QAASxB,KAAKyT,gBAChB,6BACE,6BAAK,6BAAK,6BAAK,6BAAK,6BAAK,+BAX7B,6BAEE,2BAAO5W,KAAK,SAAS0E,UAAU,eAAeX,MAAM,gBAClDY,QAASxB,KAAKwT,qB,gCAiBxB,IAAMtT,EAAWF,KAAKL,MAAMQ,MAAMC,OAAOF,SAEnCI,EAAYN,KAAKL,MAAMQ,MAAMC,OAAO1D,KAAK6D,MAAM,KAAK,GACpD7B,EAAWsB,KAAKL,MAAMQ,MAAMC,OAAO1D,KAAK6D,MAAM,KAAK,GACzDP,KAAKL,MAAM/B,QAAQsC,EAAUI,EAAW5B,K,oCAG3B,IAAD,OAENhC,GADWsD,KAAKL,MAAMQ,MAAMC,OAAOF,SAC5BF,KAAKL,MAAMjD,KAAKT,eACvBqY,EAAMtU,KAAKL,MAAMQ,MAAMC,OAAOmU,KACpC,GAAI7X,EAAK4X,GAMP,OAAO5X,EAAK4X,GAAL,MACL,IAAK,SACH,IAAMlS,EAAW1F,EAAK4X,GAAL,SACXhS,EAAY5F,EAAK4X,GAAL,UACZ/U,EAAW7C,EAAK4X,GAAL,SACX/R,EAAe7F,EAAK4X,GAAK,cAC/B,OACE,yBAAK/S,UAAU,aACb,kBAAC,EAAD,CAAQS,SAAU,SAAAoG,GAAG,OAAK,EAAK0L,YAAc1L,GAC3C7I,SAAUA,EAAUgD,aAAcA,EAClCH,SAAUA,EAAUE,UAAWA,IACjC,6BAEA,uBAAMoR,YAAN,OAIN,IAAK,cACH,IAAM7K,EAAOnM,EAAK4X,GAAK,eACvB,OACE,yBAAK/S,UAAU,aACb,kBAAC,EAAD,CAAYS,SAAU,SAAAoG,GAAG,OAAK,EAAKgM,gBAAkBhM,GACnDS,KAAMA,IACR,6BACA,uBAAM6K,YAAN,OAGN,IAAK,eACH,IAAMnE,EAAa7S,EAAK4X,GAAL,SACb7D,EAAS/T,EAAK4X,GAAL,UACT5D,EAAShU,EAAK4X,GAAL,UACTvJ,EAAgBrO,EAAK4X,GAAK,6BAC1BrJ,EAAevO,EAAK4X,GAAK,4BACzBnJ,EAAezO,EAAK4X,GAAK,4BACzBM,EAAelY,EAAK4X,GAAL,SACfO,EAAkBnY,EAAK4X,GAAL,YACxB,OACE,yBAAK/S,UAAU,aACb,kBAAC,EAAD,CAAmBS,SAAU,SAAAoG,GAAG,OAAK,EAAK4L,iBAAmB5L,GAC3DmH,WAAYA,EAAYkB,OAAQA,EAAQC,OAAQA,EAChD3F,cAAeA,EACfE,aAAcA,EACdE,aAAcA,EACd2J,SAAUF,EAActW,KAAMuW,IAChC,6BACA,uBAAMnB,YAAN,OAGN,IAAK,YACH,IAAMZ,EAAepW,EAAK4X,GAAL,SACflC,EAAkB1V,EAAK4X,GAAK,iBAC5BtB,EAAetW,EAAK4X,GAAL,SACfrB,EAAgBvW,EAAK4X,GAAL,UAChBS,EAAkBrY,EAAK4X,GAAL,YACxB,OACE,yBAAK/S,UAAU,aACb,kBAAC,EAAD,CAAWS,SAAU,SAAAoG,GAAG,OAAK,EAAK4M,eAAiB5M,GACjD0K,aAAcA,EACdV,gBAAiBA,EACjBY,aAAcA,EACdC,cAAeA,EAAeZ,SAAU0C,IAC1C,6BACA,uBAAMrB,YAAN,OAGN,QACE,OAAQ,2D,+BAOd,IAAMhV,EAAWsB,KAAKL,MAAMQ,MAAMC,OAAO1D,KACnCuY,EAAcjV,KAAKL,MAAMjD,KAAKR,cACpC,OACE,yBAAKqF,UAAU,aAAf,oBACiB,6BACjB,2BAAI7C,GACJ,6BAHA,mBAIgB,6BAChB,2BAAIuW,GACJ,6BAAK,6BACJjV,KAAKkV,mB,GAxLczT,aA4MXC,gBALS,SAAA/E,GAAK,MAAK,CAChCD,KAAMC,EAAMD,KACZR,cAAeS,EAAMT,iBAKrB,CAAE0B,UAASiB,WAAUM,UAAS7C,YAFjBoF,CAGbgU,IC/NIC,G,kLAGe3V,KAAKL,MAAMjD,KAAKV,OAAO0B,GAC3BsC,KAAKL,MAAMjD,KAAKV,OAAO2B,IACpC,GAAsC,IAAjCqC,KAAKL,MAAMjD,KAAKH,OAAO6E,OAAa,CACvC,IAAMgU,EAAW,CACflZ,cAAe8D,KAAKL,MAAMjD,KAAKR,eAEjC8D,KAAKL,MAAMjD,KAAKH,OAAO2M,KAAI,SAAAmM,GACzBD,EAASC,EAAM7V,KAAO6V,EAAM5V,OAE9BsB,QAAQC,IAAIoU,M,+BAKd,IAAMG,EAAOvV,KAAKL,MAAMjD,KAAKT,cAAcsZ,KACrCrZ,EAAgB8D,KAAKL,MAAMjD,KAAKR,cACtC,OACE,yBAAKqF,UAAU,aACb,8DADF,IAC0C,6BAD1C,WAEU,kCAFV,qDAEsE,6BAAK,6BAF3E,uCAGsC,6BACpC,2BAAIrF,GAJN,IAIyB,6BAJzB,2BAK0B,uBAAGsZ,KAAMD,EAAM7U,OAAO,UAAtB,QAL1B,wE,GApBuBe,aAuCdC,gBAJS,SAAA/E,GAAK,MAAK,CAChCD,KAAMC,EAAMD,QAKZ,GAFagF,CAGbiU,ICjCWC,EAAQ,IACPA,EAAQ,IA2BPC,OAxBf,WACE,OACE,kBAAC,IAAD,CAAU5Y,MAAOA,GACf,kBAAC,IAAD,CAAY6Y,SAAS,qBACnB,yBAAKvU,UAAU,OACb,kBAAC,IAAD,CAAOwU,OAAK,EAACC,KAAK,IAAIC,UAAWtU,IAMjC,kBAAC,IAAD,CAAOoU,OAAK,EAACC,KAAK,WAAWC,UAAWd,KACxC,kBAAC,IAAD,CAAOY,OAAK,EAACC,KAAK,wBAAwBC,UAAWvW,IACrD,kBAAC,IAAD,CAAOqW,OAAK,EAACC,KAAK,8BAA8BC,UAAW3C,IAE3D,kBAAC,IAAD,CAAOyC,OAAK,EAACC,KAAK,kBAAkBC,UAAWN,KAC/C,kBAAC,IAAD,CAAOI,OAAK,EAACC,KAAK,2BAA2BC,UAAWR,KACxD,kBAAC,IAAD,CAAOM,OAAK,EAACC,KAAK,iCAAiCC,UAAWP,SC1BpDQ,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASlW,MACvB,2DCZNmW,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB1Y,MAAK,SAAA2Y,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLlW,QAAQkW,MAAMA,EAAMC,a","file":"static/js/main.62ed89b6.chunk.js","sourcesContent":["import {\n  DB_INFO,\n  GET_EXPT,\n  PART_ID,\n  Q_KEYS,\n  NUM_Q,\n  FINAL_Q,\n  ANSWER,\n  ITEM_DATA\n} from \"../actions/types\";\nimport { act } from \"react-dom/test-utils\";\nimport { bindActionCreators } from \"redux\";\n\nconst initialState = {\n  dbInfo: {},\n  exptToDisplay: {},\n  participantID: '',\n  questionKeys: [],\n  numQ: Number,\n  isFinalQ: false,\n  answer: [],\n  fileContent: {}\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case DB_INFO:\n      return {\n        ...state,\n        dbInfo: action.payload\n      };\n    case GET_EXPT:\n      return {\n        ...state,\n        exptToDisplay: action.payload\n      };\n    case PART_ID:\n      return {\n        ...state,\n        participantID: action.payload\n      };\n    case Q_KEYS:\n      return {\n        ...state,\n        questionKeys: action.payload\n      };\n    case NUM_Q:\n      return {\n        ...state,\n        numQ: action.payload\n      }\n    case FINAL_Q:\n      return {\n        ...state,\n        isFinalQ: action.payload\n      };\n    case ANSWER:\n      return {\n        ...state,\n        answer: [...state.answer, action.payload]\n      };\n    case ITEM_DATA:\n      return {\n        ...state,\n        fileContent: action.payload\n      }\n    default:\n      return state;\n  }\n}\n\n","import { combineReducers } from \"redux\";\nimport dataReducer from \"./dataReducer\";\n\nexport default combineReducers({\n  expt: dataReducer\n});","export const DB_INFO = \"DB_INFO\";\nexport const GET_EXPT = \"GET_EXPT\";\nexport const PART_ID = \"PART_ID\";\nexport const SEND_EXPT = \"SEND_EXPT\";\nexport const Q_KEYS = \"Q_KEYS\";\nexport const NUM_Q = \"NUM_Q\";\nexport const FINAL_Q = \"FINAL_Q\";\nexport const ANSWER = \"ANSWER\";\nexport const ITEM_DATA = \"ITEM_DATA\";","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middleware)\n    // ,window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n\nexport default store;","import axios from \"axios\";\nimport {\n  DB_INFO,\n  GET_EXPT,\n  PART_ID,\n  SEND_EXPT,\n  Q_KEYS,\n  NUM_Q,\n  FINAL_Q,\n  ANSWER,\n  ITEM_DATA\n} from \"./types\"\n\n// Input: name of a database, name of a collection \n// Output: a JSON object containing the input\n// Action: puts database - collection information into redux store so that \n//         it's easily accessible for all components\nexport const storeDBInfo = (which_database, which_collection) => dispatch => {\n  dispatch({\n    type: DB_INFO,\n    payload: {\n      db: which_database,\n      col: which_collection\n    }\n  })\n}\n\n// Input: name of a database, name of a study, name of an experiment\n// Output: a JSON object containing configuration data of the given experiment \n//         in the given study \n// Action: a GET request to get the output. \nexport const getExpt = (which_db, study_name, expt_name) => dispatch => {\n  const API_URL = 'https://test-api-615.herokuapp.com/api/feedback/' +\n    which_db + '/info/' + 'studyName-' + study_name;\n  axios\n    .get(API_URL)\n    .then(res => {\n      const experiments = res.data.experiments;\n      var thisExpt = {};\n      experiments.forEach(element => {\n        if (element.exptName == expt_name) {\n          thisExpt = element;\n        }\n      });\n      dispatch({\n        type: GET_EXPT,\n        payload: thisExpt\n      })\n    })\n}\n\n// Input: participant ID\n// Output: participant ID\n// Action: puts participant ID into redux store so that it's easily accessible \n//         for all components \nexport const storePartID = (part_id) => dispatch => {\n  dispatch({\n    type: PART_ID,\n    payload: part_id\n  })\n}\n\n// Input: name of a database, name of a collection, JSON object containing \n//        user responses\n// Output: NONE\n// Action: a POST request to send user response to the appropriate collection \n//         in Mongo database. \nexport const sendExpt = (which_db, which_col, dataToPOST) => dispatch => {\n  const API_URL = 'https://test-api-615.herokuapp.com/api/feedback/' +\n    which_db + \"/\" + which_col;\n  axios\n    .post(API_URL, dataToPOST)\n    .then(res => {\n      // console.log(res);\n    })\n}\n\n// Input: an array representing questions keys of an experiment\n// Output: the same array\n// Action: puts the array into redux store so that it's easily accessible for \n//         all components\nexport const storeQKeys = (keys) => dispatch => {\n  dispatch({\n    type: Q_KEYS,\n    payload: keys\n  })\n}\n\n// Input: a number representing the index of the questions keys array. \n//        This number tells Experiment.js what to display next\n// Output: the same number\n// Action: puts the number into redux store so that it's easily accessible \n//         for all components\nexport const setNumQ = (num) => dispatch => {\n  dispatch({\n    type: NUM_Q,\n    payload: num\n  })\n}\n\n// Input: a boolean indicating whether the next question to display is the \n//        last question. This boolean determines which type of <button> to show\n// Output: the same boolean\n// Action: puts the boolean into redux store so that it's easily accessible \n//         for all components\nexport const isFinalQ = (is) => dispatch => {\n  dispatch({\n    type: FINAL_Q,\n    payload: is\n  })\n}\n\n// Input: a string representing a question, any representing an answer\n// Output: a JSON object containing the inputs\n// Action: puts the object into redux store. Notice the redux reducer \n//         appends the answer to the existing state. In this way, ```Success.js``` can send all stored answers via API at the end of the experiment. \nexport const storeAnswer = (question, answer) => dispatch => {\n  dispatch({\n    type: ANSWER,\n    payload: {\n      que: question,\n      ans: answer\n    }\n  })\n}\n\n// ###DEPRECATED###\n// Reason: there's a lag in receiving the output, which causes errors when \n//         displaying experiment items. \n// Input: name of a database, name of an uploaded file whose content is a \n//        JSON object containing experiment item data\n// Output: the content of the file\n// Action: puts the output into redux store so that it's easily accessible \n//         for all components.\nexport const getItemData = (which_database, fileName) => dispatch => {\n  const API_URL = 'https://test-api-615.herokuapp.com/api/feedback/' +\n    which_database + \"/itemData\";\n  axios\n    .get(API_URL)\n    .then(res => {\n      const fileContent = res.data.filter(doc => doc.fileName == fileName)[0].fileContent\n      dispatch({\n        type: ITEM_DATA,\n        payload: fileContent\n      })\n    })\n}","import React, { Component } from 'react';\nimport axios from \"axios\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nimport { \n  storeDBInfo,\n  storePartID, \n  getExpt,\n  storeQKeys,\n  setNumQ,\n  isFinalQ\n} \nfrom \"../actions/dataActions\";\n\n/**\n * This is what participants will see when they first take an experiment\n */\nclass EnterID extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ParticipantID: ''\n    }\n\n    this.onChange = this.onChange.bind(this);\n    this.showExpt = this.showExpt.bind(this);\n  }\n\n  componentDidMount() {\n    this.getData();\n\n    const username = this.props.match.params.username;\n    const studyExpt = this.props.match.params.expt;\n    // store the database - collection info into redux store to be readily \n    // accessible for all components\n    this.props.storeDBInfo(username, studyExpt);\n  }\n\n  /**\n   * Get experiment data (queried by database, studyName, and exptName)\n   */\n  getData() {\n    const username = this.props.match.params.username;\n    const studyName = this.props.match.params.expt.split(\"-\")[0];\n    const exptName = this.props.match.params.expt.split(\"-\")[1];\n    this.props.getExpt(username, studyName, exptName);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value })\n  }\n\n  /**\n   * This method will lead participants to the first question of an experiment\n   */\n  showExpt() {\n    this.props.storePartID(this.state.ParticipantID);\n    const username = this.props.match.params.username;\n    const studyExpt = this.props.match.params.expt;\n    var questionKeys = [];\n    if (this.props.expt.exptToDisplay) {\n      const allKeys = Object.keys(this.props.expt.exptToDisplay);\n      console.log(allKeys);\n      // in the JSON file each question must have index q0, q1, q2, ... \n      questionKeys = allKeys.filter(str => str.charAt(0) == \"q\");\n      this.props.storeQKeys(questionKeys);\n    }\n    // Let the next question know if it's the final question\n    if (questionKeys.length == 1) {\n      this.props.isFinalQ(true);\n    }\n    this.props.setNumQ(0);\n    // Note that this.props.history can only be accessible if we use a React Router\n    this.props.history.push(\"/expt/\" + username + \"/\" + studyExpt + \n      \"/\" + questionKeys[0]);\n  }\n\n  render() {\n    const exptName = this.props.match.params.expt;\n      return (\n        <div className=\"container\">\n        Experiment name: <br/>\n        <b>{exptName}</b>\n        <br/><br/>\n        Enter your unique ID: <p></p>\n        <input type=\"text\" name=\"ParticipantID\" \n          value={this.state.ParticipantID} onChange={this.onChange}/>\n        <br/>\n        <input type=\"button\" className=\"btn\" value=\"Start Experiment\" \n          onClick={this.showExpt}/>\n        <br/><br/>\n        Note: once you click \"Ok\" for a question, you won't be\n        able to change your response. \n      </div>\n      )\n  }\n}\n\nEnterID.propTypes = {\n  storeDBInfo: PropTypes.func.isRequired,\n  getExpt: PropTypes.func.isRequired,\n  expt: PropTypes.object.isRequired,\n  storePartID: PropTypes.func.isRequired,\n  participantID: PropTypes.string.isRequired,\n  storeQKeys: PropTypes.func.isRequired,\n  setNumQ: PropTypes.func.isRequired,\n  isFinalQ: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  expt: state.expt,\n  participantID: state.participantID\n})\n\nexport default connect(\n  mapStateToProps,\n  { storeDBInfo, storePartID, getExpt, storeQKeys, setNumQ, isFinalQ }\n)(EnterID);\n","import React, { Component } from 'react';\n\nclass HomePage extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <h1>This is the home page</h1>\n        <h3>Experiments are accessible by experiment URLs given in Qualtrics Surveys</h3>\n      </div>\n    )\n  }\n}\n\nexport default HomePage;\n","import React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nimport {\n  getExpt,\n  storeAnswer\n} from \"../actions/dataActions\";\n\n// This component does the following:\n// - Display question\n// - Display an experiment item (in this case, a slider)\n// - Store answer into Redux store upon submission \nclass Slider extends Component {\n  constructor() {\n    // putting super() here so that we can use this.blahblah\n    super();\n    this.state = this.initialState;\n\n    this.resetState = this.resetState.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.showSlider = this.showSlider.bind(this);\n  }\n\n  get initialState() {\n    return {\n      submitted: false,\n      value: 0\n    };\n  }\n\n  resetState() {\n    this.setState(this.initialState);\n  }\n\n  componentDidMount() {\n    const { childRef } = this.props;\n    childRef(this);\n    this.getData();\n    this.props.setWhichItem(\"slider\");\n  }\n\n  componentWillUnmount() {\n    const { childRef } = this.props;\n    childRef(undefined);\n  }\n\n  getData() {\n    const db = this.props.expt.dbInfo.db;\n    // there will be problems if user's study name / experiment name inclues \"-\"\n    const studyName = this.props.expt.dbInfo.col.split(\"-\")[0];\n    const exptName = this.props.expt.dbInfo.col.split(\"-\")[1];\n    this.props.getExpt(db, studyName, exptName);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value })\n  }\n\n  showSlider() {\n    return (\n      <div className=\"container\">\n        {this.props.question} <br/>\n        <input \n          type=\"range\"\n          min={this.props.lowRange}\n          max={this.props.highRange}\n          name=\"value\"\n          value={this.state.value}\n          onChange={this.onChange}\n        />\n        {this.state.value} <br/>\n      </div>\n    )\n  }\n\n  onSubmit() {\n    const question = this.props.question;\n    const sliderCSVKey = this.props.sliderCSVKey;\n    // put answer in our redux store to be sent via API later\n    this.props.storeAnswer(sliderCSVKey, this.state.value);\n    this.setState({ submitted: true });\n  }\n\n  render() {\n    return (\n      <div>\n        {this.showSlider()} <br/>\n        {\n          !this.state.submitted && \n          <div>\n            <input type=\"submit\" className=\"btn\" value=\"Ok\"\n              onClick={this.onSubmit}/> <br/>\n            <p style={{ color: \"grey\" }}>\n              Reminder: Once you click \"Ok\", your response to this question will be \n              recorded, and you won't be able to change your answer. \n            </p>\n          </div>\n        }\n      </div>\n    )\n  }\n}\n\nSlider.propTypes = {\n  getExpt: PropTypes.func.isRequired,\n  expt: PropTypes.object.isRequired,\n  storeAnswer: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = state => ({\n  expt: state.expt\n})\n\nexport default connect(\n  mapStateToProps,\n  { getExpt, storeAnswer }\n)(Slider);","import React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport './HistSliderTradeOff.css';\n\nimport {\n  getExpt,\n  storeAnswer\n} from \"../actions/dataActions\";\n\n\n\nclass TradeOff extends Component {\n  constructor() {\n    // putting super() here so that we can use this.blahblah\n    super();\n    this.sliderRef = React.createRef();\n    this.slider2Ref = React.createRef();\n    this.threeGraphRef = React.createRef();\n    this.rectRef = React.createRef();\n    this.svgRef = React.createRef();\n    this.graphColRef=React.createRef();\n    this.refLine1Ref = React.createRef();\n    this.refLine2Ref = React.createRef();\n\n    this.refLine4Ref = React.createRef();\n    this.refLine3Ref = React.createRef();\n    this.refLine6Ref = React.createRef();\n    this.refLine5Ref = React.createRef();\n    this.refLine7Ref = React.createRef();\n    this.refLine8Ref = React.createRef();\n\n    this.stroke1Ref = React.createRef();\n    this.areaRef = React.createRef();\n    this.onChange2 = this.onChange2.bind(this);\n\n\n\n    this.rectReturn1 = this.rectReturn1.bind(this);\n    this.rectReturn2 = this.rectReturn2.bind(this);\n    this.rectReturn3 = this.rectReturn3.bind(this);\n    this.rectReturn4 = this.rectReturn4.bind(this);\n    this.rectReturn5 = this.rectReturn5.bind(this);\n    this.rectReturn6 = this.rectReturn6.bind(this);\n    this.textReturn1 = this.textReturn1.bind(this);\n    this.changeGraphColNumber = this.changeGraphColNumber.bind(this);\n    this.line1 = this.line1.bind(this);\n    this.changeGraphNumber = this.changeGraphNumber.bind(this);\n    this.changeStroke1=this.changeStroke1.bind(this);\n\n\n\n    this.onChange1 = this.onChange1.bind(this);\n\n\n    this.resetState = this.resetState.bind(this);\n    //this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.noAnswer = this.noAnswer.bind(this);\n\n\n    this.state = this.initialState;\n  }\n\n  \n// setting the initial state of this component \n    get initialState() {\n        //const data = this.props.data;\n\n\n\n        return{\n            submitted: false,\n            stroke1 : \"#FF0000\",\n            stroke2 : \"#0000FF\",\n            rectWidth : 40,\n            sliderPos:0,\n            rect1Arr: [0.76,0.76, 0.68, 0.65, 0.63, 0.62, 0.60, 0.59, 0.58, 0.57, 0.56, 0.56, 0.55, 0.54, 0.54, 0.53, 0.53, 0.52, 0.52, 0.52, 0.51, 0.51, 0.509 ,0.506, 0.503, 0.50],\n            rect2Arr: [0.399528104378295,\n            0.419528104378295,\n            0.436856783892294,\n            0.446993411594998,\n            0.454185463406292,\n            0.459764052189148,\n            0.464322091108996,\n            0.468175858104678,\n            0.471514142920291,\n            0.4744587188117,\n            0.477092731703146,\n            0.479475486198254,\n            0.481650770622995,\n            0.483651838314833,\n            0.485504537618676,\n            0.48722935940585,\n            0.48884282243429,\n            0.4903584379797,\n            0.491787398325699,\n            0.493139078857456,\n            0.494421411217145,\n            0.495641165321381,\n            0.496804165712253,\n            0.497915459776524,\n            0.498979450136994,\n            0.5],\n            rect3Arr: [0.75,\n            0.750612329917804,\n            0.751250724134086,\n            0.751917500572648,\n            0.752615300807172,\n            0.753347153269713,\n            0.754116552685526,\n            0.754927561004581,\n            0.75578493721218,\n            0.756694306539426,\n            0.75766238435649,\n            0.758697277428794,\n            0.7598088970111,\n            0.761009537626203,\n            0.762314708281047,\n            0.763744360978112,\n            0.76532476871298,\n            0.767091514247826,\n            0.769094485137193,\n            0.771406745334602,\n            0.774141568686512,\n            0.777488721956225,\n            0.781803953043001,\n            0.787885929664624,\n            0.798283137373023,\n            0.818283137373023],\n            rect4Arr: [0.75,\n            0.748775340164392,\n            0.747498551731828,\n            0.746164998854703,\n            0.744769398385657,\n            0.743305693460574,\n            0.741766894628947,\n            0.740144877990839,\n            0.73843012557564,\n            0.736611386921148,\n            0.73467523128702,\n            0.732605445142412,\n            0.7303822059778,\n            0.727980924747594,\n            0.725370583437905,\n            0.722511278043775,\n            0.719350462574041,\n            0.715816971504349,\n            0.711811029725613,\n            0.707186509330796,\n            0.701716862626977,\n            0.695022556087551,\n            0.686392093913997,\n            0.674228140670752,\n            0.653433725253954,\n            0.633433725253954],\n            rect5Arr: [0.689038170367751,\n            0.677038170367751,\n            0.638915075436954,\n            0.616614494491005,\n            0.600791980506157,\n            0.588519085183875,\n            0.578491399560208,\n            0.570013112169709,\n            0.56266888557536,\n            0.556190818614259,\n            0.550395990253079,\n            0.545153930363841,\n            0.540368304629411,\n            0.535965955707367,\n            0.531890017238912,\n            0.52809540930713,\n            0.524545790644563,\n            0.521211436444659,\n            0.518067723683462,\n            0.515094026513597,\n            0.512272895322282,\n            0.509589436292963,\n            0.507030835433044,\n            0.504585988491648,\n            0.502245209698614,\n            0.5],\n            rect6Arr: [0.75,0.750244931967122,\n            0.750500289653634,\n            0.750767000229059,\n            0.751046120322869,\n            0.751338861307885,\n            0.75164662107421,\n            0.751971024401832,\n            0.752313974884872,\n            0.75267772261577,\n            0.753064953742596,\n            0.753478910971518,\n            0.75392355880444,\n            0.754403815050481,\n            0.754925883312419,\n            0.755497744391245,\n            0.756129907485192,\n            0.75683660569913,\n            0.757637794054877,\n            0.758562698133841,\n            0.759656627474605,\n            0.76099548878249,\n            0.762721581217201,\n            0.76515437186585,\n            0.769313254949209,\n            0.781313254949209, \n            ],\n            rect7Arr: [0.4,0.8],\n            rect8Arr: [0.2,0.3],\n            line1Height:0.4,\n            line2Height:0.5,\n            line3Height:0.4,\n            line4Height:0.2,\n            line5Height:0.4,\n            line6Height:0.3,\n            line7Height:0.2,\n            line8Height:0.1,\n            threeGraphs: false,\n            threeGraphOne: true,\n            fourGraphOne: true\n\n        }\n\n\n    };\n    \n    \n    resetState() {\n        this.setState(this.initialState);\n      }\n\n    // additional setup to communicate with Experiment.js\n    componentDidMount() {\n      const { childRef } = this.props;\n      childRef(this);\n      this.getData();\n      this.props.setWhichItem(\"trade-off\");\n    }\n    // additional setup to communicate with Experiment.js\n    componentWillUnmount() {\n      const { childRef } = this.props;\n      childRef(undefined);\n   }\n  // get experiment data from the database \n    getData() {\n        const db = this.props.expt.dbInfo.db;\n        const studyName = this.props.expt.dbInfo.col.split(\"-\")[0];\n        const exptName = this.props.expt.dbInfo.col.split(\"-\")[1];\n        this.props.getExpt(db, studyName, exptName);\n    }\n    onSubmit() {\n        //const threeGraphs = this.state.threeGraphs;\n        const questionTO = \"tradeoff\";\n        const reply={\n          sliderPositionTO: this.state.sliderPos\n        }\n        \n\n        this.props.storeAnswer( questionTO,reply);\n        //this.props.storeAnswer(question, answer);\n        this.setState({ submitted: true });\n      }\n    noAnswer() {\n        const questionTO = this.props.questionTOKey;\n        const sliderPos = \"Prefer Not to Answer\";\n        this.props.storeAnswer(questionTO,sliderPos);\n        this.setState({ submitted: true });\n    }\n    changeGraphColNumber(){\n        const newColor = this.graphColRef.current.value;\n        if (newColor === \"1 and 1\"){\n            this.setState({fourGraphOne: true});\n            this.setState({threeGraphOne: true});\n        }\n        if (newColor === \"1 and 2\"){\n            this.setState({fourGraphOne: true});\n            this.setState({threeGraphOne: false});\n        }\n        if (newColor === \"2 and 1\"){\n            this.setState({fourGraphOne: false});\n            this.setState({threeGraphOne: true});\n        }\n        if (newColor === \"2 and 2\"){\n            this.setState({fourGraphOne: false});\n            this.setState({threeGraphOne: false});\n        }\n    }\n      onChange1(e){\n        this.setState({ [e.target.name]: e.target.value })\n      }\n      onChange10(e){\n        this.setState({line1Height:e})\n      }\n      onChange2(e){\n        this.setState({line2Height:e})\n      }\n      onChange3(e){\n        this.setState({line3Height:e})\n      }\n      onChange4(e){\n        this.setState({line4Height:e})\n      }\n      onChange5(e){\n        this.setState({line5Height:e})\n      }\n      onChange6(e){\n        this.setState({line6Height:e})\n      }\n      onChange7(e){\n        this.setState({line7Height:e})\n      }\n      onChange8(e){\n        this.setState({line8Height:e})\n      }\n  \n      changeStroke1() {\n        const newColor = this.stroke1Ref.current.value;\n        if (newColor === \"#FF0000\"){\n          this.setState({stroke1:\"#0000FF\"});\n          this.setState({stroke2:newColor});\n        }\n        if (newColor === \"#0000FF\"){      \n          this.setState({stroke1: \"#FF0000\"});\n          this.setState({stroke2:newColor});\n        }\n        if(newColor === \"Orange and Blue\"){\n          this.setState({stroke1:\"#0000FF\"});\n          this.setState({stroke2: \"#ffa500\"});\n        }\n        if(newColor === \"Blue and Orange\"){\n          this.setState({stroke1:\"#0000FF\"});\n          this.setState({stroke2: \"#ffa500\"});\n        }\n        if(newColor === \"Blue and Yellow\"){\n          this.setState({stroke1:\"#0000FF\"});\n          this.setState({stroke2: \"#FFD300\"});\n        }\n        if(newColor === \"Yellow and Blue\"){\n          this.setState({stroke1:\"#0000FF\"});\n          this.setState({stroke2: \"#FFD300\"});\n        }\n  \n  \n      }\n      changeGraphNumber(){\n        const newGraph = this.threeGraphRef.current.value;\n        if (newGraph === \"True\"){\n          this.setState({threeGraphs: true});\n        }\n        else{\n          this.setState({threeGraphs: false});\n        }\n    }\n  \n    rectReturn1(xPos, yPos){\n      var hard = \n      <rect\n      x = {xPos} y = {yPos} stroke = {this.state.stroke1} fill = {this.state.stroke1} height = {200*this.state.rect1Arr[this.state.sliderPos]} width = {this.state.rectWidth} fillOpacity = \"0.7\" strokeOpacity = \"0.7\"></rect>;\n      return hard;\n    }\n    rectReturn2(xPos, yPos){\n      var hard = \n      <rect\n      x = {xPos} y = {yPos} stroke = {this.state.stroke2} fill = {this.state.stroke2} height = {200*this.state.rect2Arr[this.state.sliderPos]} width = {this.state.rectWidth} fillOpacity = \"0.7\" strokeOpacity = \"0.7\"></rect>;\n      return hard;\n    }\n    rectReturn3(xPos, yPos){\n      var hard = \n      <rect\n      x = {xPos} y = {yPos} stroke = {\"#000000\"} fill = {this.state.stroke1} height = {200*this.state.rect3Arr[this.state.sliderPos]} width = {this.state.rectWidth} fillOpacity = \"0.7\" strokeOpacity = \"0.7\"></rect>;\n      return hard;\n    }\n    rectReturn4(xPos, yPos){\n      var hard = \n      <rect\n      x = {xPos} y = {yPos} stroke = {\"#000000\"} fill = {this.state.stroke2} height = {200*this.state.rect4Arr[this.state.sliderPos]} width = {this.state.rectWidth} fillOpacity = \"0.7\" strokeOpacity = \"0.7\"></rect>;\n      return hard;\n    }\n    rectReturn5(xPos, yPos){\n      var hard = \n      <rect\n      x = {xPos} y = {yPos} stroke = {\"#000000\"} fill = {this.state.stroke1} height = {200*this.state.rect5Arr[this.state.sliderPos]} width = {this.state.rectWidth} fillOpacity = \"0.7\" strokeOpacity = \"0.7\"></rect>;\n      return hard;\n    }\n    rectReturn6(xPos, yPos){\n      var hard = \n      <rect\n      x = {xPos} y = {yPos} stroke = {\"#000000\"} fill = {this.state.stroke2} height = {200*this.state.rect6Arr[this.state.sliderPos]} width = {this.state.rectWidth} fillOpacity = \"0.7\" strokeOpacity = \"0.7\"></rect>;\n      return hard;\n    }\n    rectReturn7(xPos, yPos){\n      var hard = \n      <rect\n      x = {xPos} y = {yPos} stroke = {\"#000000\"} fill = {this.state.stroke1} height = {200*this.state.rect7Arr[this.state.sliderPos]} width = {this.state.rectWidth} fillOpacity = \"0.7\" strokeOpacity = \"0.7\"></rect>;\n      return hard;\n    }\n    rectReturn8(xPos, yPos){\n      var hard = \n      <rect\n      x = {xPos} y = {yPos} stroke = {\"#000000\"} fill = {this.state.stroke2} height = {200*this.state.rect8Arr[this.state.sliderPos]} width = {this.state.rectWidth} fillOpacity = \"0.7\" strokeOpacity = \"0.7\"></rect>;\n      return hard;\n    }\n    rectReturn9(xPos, yPos){\n      var hard = \n      <rect\n      x = {xPos} y = {yPos} stroke = {\"#000000\"} fill = {\"#ffa500\"} height = {200*this.state.rect5Arr[this.state.sliderPos]} width = {this.state.rectWidth} fillOpacity = \"0.7\" strokeOpacity = \"0.7\"></rect>;\n      return hard;\n    }\n    rectReturn10(xPos, yPos){\n      var hard = \n      <rect\n      x = {xPos} y = {yPos} stroke = {\"#000000\"} fill = {\"#ffa500\"} height = {200*this.state.rect5Arr[this.state.sliderPos]} width = {this.state.rectWidth} fillOpacity = \"0.7\" strokeOpacity = \"0.7\"></rect>;\n      return hard;\n    }\n        line1(xPos1,xPos2,yPos1,yPos2){\n          var hard = \n          <line x1 = {xPos1 + 300} x2 = {300 + xPos2} y1 = {yPos1} y2 = {yPos2} stroke = \"#000000\"></line>;\n          return hard;\n        }\n        line2(xPos1,xPos2,yPos1,yPos2){\n          var hard = \n          <line x1 = {xPos1 + 300} x2 = {300 + xPos2} y1 = {yPos1} y2 = {yPos2} stroke = \"#808080\"></line>;\n          return hard;\n        }\n        textReturn1(xPos, yPos, tedxt){\n          var hard = <text x = {xPos} y = {yPos}>{tedxt}</text>;\n          return hard;\n        }\n  \n    showTradeOff(){\n        const threeGraphs = this.state.threeGraphs;\n        return(\n            \n            <div>\n        <div className=\"container\">\n          <h3>Question: </h3>\n          <div style={{ width: \"60%\", margin: \"auto\" }}>\n            <p style={{ textAlign: \"left\" }}>\n              {this.props.questionTO}\n            </p>\n          </div>\n        </div> \n            <svg width = {1400} height = {1000} style={{}} class = \"b\"> \n                {this.rectReturn1(500,450)}\n                {this.rectReturn2(580,450)}\n                {this.rectReturn3(900,450)}\n                {this.rectReturn4(980,450)}\n                {this.line1(173,187,650,650)}\n                {this.line1(173,187,488,488)}\n                {this.line1(173,187,528,528)}\n                {this.line1(173,187,568,568)}\n                {this.line1(173,187,608,608)}\n\n                {this.line1(176,184,633,633)}\n                {this.line1(176,184,468,468)}\n                {this.line1(176,184,508,508)}\n                {this.line1(176,184,548,548)}\n                {this.line1(176,184,588,588)}\n                {this.line1(173,187,488,488)}\n                {this.line1(173,187,528,528)}\n                {this.line1(173,187,568,568)}\n                {this.line1(173,187,608,608)}\n\n                {this.line1(176,184,633,633)}\n                {this.line1(176,184,468,468)}\n                {this.line1(176,184,508,508)}\n                {this.line1(176,184,548,548)}\n                {this.line1(176,184,588,588)}\n\n                {\n                threeGraphs\n                ? this.line1(330,330,160,360)\n\n\n                : this.line1(576,584,218,218)\n              }\n              {\n                threeGraphs\n                ? this.line1(330,330,258,258)\n\n\n                : this.line1(576,584,298,298)\n              }\n              {\n                threeGraphs\n                ? this.line1(326,334,298,298)\n\n\n                : this.line1(576,584,337,337)\n              }\n              {\n                threeGraphs\n                ? this.line1(326,334,338,338)\n\n\n                : this.line1(573,587,360,360)\n              }\n\n              {\n                threeGraphs\n                ? this.line1(326,334,218,218)\n\n\n                : this.line1(176,184,218,218)\n              }\n              \n              {\n                threeGraphs\n                ? this.line1(326,334,258,258)\n\n\n                : this.line1(176,184,258,258)\n              }\n\n              {\n                threeGraphs\n                ? this.line1(326,334,178,178)\n\n\n                : this.line1(576,584,258,258)\n              }\n\n\n\n\n              {\n                threeGraphs\n                ? this.line1(330,330,160,360)\n\n\n                : this.line1(573,587,198,198)\n              }\n              {\n                threeGraphs\n                ? this.line1(323,337,238,238)\n\n\n                : this.line1(573,587,238,238)\n              }\n              {\n                threeGraphs\n                ? this.line1(323,337,278,278)\n\n\n                : this.line1(573,587,278,278)\n              }\n              {\n                threeGraphs\n                ? this.line1(323,337,318,318)\n\n\n                : this.line1(573,587,318,318)\n              }\n\n              {\n                threeGraphs\n                ? this.line1(323,337,360,360)\n\n\n                : this.line1(176,184,218,218)\n              }\n\n\n               {\n                threeGraphs\n                ? this.line1(323,337,198,198)\n\n\n                : this.line1(173,187,198,198)\n              }\n              {\n                threeGraphs\n                ? this.line1(330,330,258,258)\n\n\n                : this.line1(173,187,238,238)\n              }\n              {\n                threeGraphs\n                ? this.line1(330,330,160,360)\n\n\n                : this.line1(173,187,278,278)\n              }\n              {\n                threeGraphs\n                ? this.line1(330,330,160,360)\n\n\n                : this.line1(173,187,318,318)\n              }\n\n              {\n                threeGraphs\n                ? this.line1(330,330,160,360)\n\n\n                : this.line1(176,184,218,218)\n              }\n\n\n\n\n\n\n\n\n\n\n\n              {\n                threeGraphs\n                ? this.line1(330,330,255,258)\n\n\n                : this.line1(176,184,298,298)\n              }\n              {\n                threeGraphs\n                ? this.line1(330,330,160,360)\n\n\n                : this.line1(176,184,337,337)\n              }\n              {\n                threeGraphs\n                ? this.line1(330,330,160,360)\n\n\n                : this.line1(173,187,360,360)\n              }\n\n\n              {\n                threeGraphs\n                ? this.line1(330,330,160,360)\n\n\n                : this.line1(576,584,218,218)\n              }\n                                {\n                threeGraphs\n                ? this.line1(330,330,160,360)\n\n\n                : this.line1(576,584,178,178)\n\n              }\n                                {\n                threeGraphs\n                ? this.line1(330,330,160,360)\n\n\n                : this.line1(176,184,178,178)\n              }\n\n                {this.line1(573,587,650,650)}\n                {this.line1(573,587,488,488)}\n                {this.line1(573,587,528,528)}\n                {this.line1(573,587,568,568)}\n                {this.line1(573,587,608,608)}\n\n                {this.line1(576,584,633,633)}\n                {this.line1(576,584,468,468)}\n                {this.line1(576,584,508,508)}\n                {this.line1(576,584,548,548)}\n                {this.line1(576,584,588,588)}\n\n\n                {\n                  this.state.threeGraphs\n                  ? this.rectReturn5(660,160)             \n                  : [\n                      (this.state.threeGraphOne\n                      ? this.rectReturn9(535,160)\n                      : this.rectReturn5(500,160)\n                      )\n                    ]\n                }\n                {\n                  this.state.threeGraphs\n                  ? this.rectReturn6(735,160)         \n                  : [\n                    (this.state.threeGraphOne\n                    ? <text></text>\n                    : this.rectReturn6(580,160)\n                    )\n                  ]     \n                }\n                {\n                  this.state.threeGraphs\n                  ? <text> </text>        \n                  : [\n                      (this.state.fourGraphOne\n                      ? this.rectReturn10(940,160)  \n                      : this.rectReturn7(900,160)   \n                      )\n                  ] \n                }\n               {\n                  this.state.threeGraphs\n                  ? <text> </text>        \n                  : [\n                      (this.state.fourGraphOne\n                      ? <text></text>\n                      : this.rectReturn8(980,160)   \n                      )\n                  ] \n                }\n                {this.line1(180,180,450,650)}\n                {this.line1(180,360,450,450)}\n                {this.line1(580,580,450,650)}\n                {this.line1(580,760,450,450)}\n                {\n                threeGraphs\n                ? this.line1(330,330,160,360)\n\n\n                : this.line1(180,180,160,360)\n\n              }\n            \n              {\n                threeGraphs\n                ? this.line1(330,510,160,160)\n\n                : this.line1(180,390,160,160)\n              }\n              {\n                threeGraphs\n                ? this.line1(0,0,0,0)\n\n\n                : this.line1(580,580,160,360)\n\n              }\n              {\n                threeGraphs\n                ? this.line1(0,0,0,0)\n\n                : this.line1(580 ,780,160,160)\n              }\n              </svg>\n              <svg class = \"e\" width = {1400} height = {1000}>\n              <text x = {200} y = {115}>Filler text for eventual question will go here</text>\n              <text x = {230} y = {265}>Legend:</text>\n              <text x = {305} y = {265}> White People</text>\n              <rect x = {290} y = {255} height = {10} width = {10} stroke = {this.state.stroke1} fill = {this.state.stroke1}></rect>\n              <text x = {415} y = {265}> Black People</text>\n              <rect x = {510} y = {255} height = {10} width = {10} stroke = {\"#ffa500\"} fill = {\"#ffa500\"}></rect>\n              <text x = {525} y = {265}>Both Groups</text>\n              <rect x = {400} y = {255} height = {10} width = {10} stroke = {this.state.stroke2} fill = {this.state.stroke2}></rect>\n\n              <text x = {150} y = {200}>Equal FPR</text>\n              <text x = {450} y = {200}>Equal Accuracy</text>\n              <text x = {55} y = {510}>0</text>\n              <text x = {50} y = {470}>20</text>\n              <text x = {50} y = {430}>40</text>\n              <text x = {50} y = {390}>60</text>\n              <text x = {50} y = {350}>80</text>\n              <text x = {45} y = {310}>100</text>\n              <text x = {450} y = {510}>0</text>\n              <text x = {445} y = {470}>20</text>\n              <text x = {445} y = {430}>40</text>\n              <text x = {445} y = {390}>60</text>\n              <text x = {445} y = {350}>80</text>\n              <text style = {{size:8}} x = {440} y = {310}>100</text>\n              {\n                threeGraphs\n                ? <text x = {185} y = {600}>100</text>\n\n                : <text x = {45} y = {600}>100</text>\n              }\n              {\n                threeGraphs\n                ? <text x = {190} y = {640}>80</text>\n\n                : <text x = {50} y = {640}>80</text>\n              }\n              {\n                threeGraphs\n                ? <text x = {190} y = {680}>60</text>\n\n                : <text x = {50} y = {680}>60</text>\n              }\n              {\n                threeGraphs\n                ? <text x = {190} y = {720}>40</text>\n\n                : <text x = {50} y = {720}>40</text>\n              }\n              {\n                threeGraphs\n                ? <text x = {190} y = {760}>20</text>\n\n                : <text x = {50} y = {760}>20</text>\n              }\n              {\n                threeGraphs\n                ? <text x = {190} y = {790}>0</text>\n                : <text x = {50} y = {800}>0</text>\n              }\n              {\n                threeGraphs\n                ? <text x = {190} y = {790}> </text>\n                : <text x = {445} y = {600}>100</text>\n              }\n               {\n                threeGraphs\n                ? <text x = {190} y = {640}></text>\n\n                : <text x = {452} y = {640}>80</text>\n              }\n              {\n                threeGraphs\n                ? <text x = {190} y = {680}></text>\n\n                : <text x = {452} y = {680}>60</text>\n              }\n              {\n                threeGraphs\n                ? <text x = {190} y = {720}></text>\n\n                : <text x = {452} y = {720}>40</text>\n              }\n              {\n                threeGraphs\n                ? <text x = {190} y = {760}></text>\n\n                : <text x = {452} y = {760}>20</text>\n              }\n              {\n                threeGraphs\n                ? <text x = {160} y = {790}> </text>\n                : <text x = {460} y = {800}>0</text>\n              }\n              <text x = {200} y = {310}>Accuracy Rate</text>\n              <text x = {625} y = {310}>False Positive Rate</text>\n              {\n                threeGraphs\n                ? <text x = {380} y = {610}>Graph 3</text>\n                : <text x = {200} y = {610}></text>\n              }\n              {\n                threeGraphs\n                ? <text> </text>\n                : <text x = {625} y = {610}></text>\n              }\n              <text x = {200} y = {310}></text>\n              <text x = {625} y = {310}></text>\n              {\n                threeGraphs\n                ? <text x = {380} y = {610}>Graph 3</text>\n                : <text x = {200} y = {610}>Total Accuracy Rate</text>\n              }\n              {\n                threeGraphs\n                ? <text> </text>\n                : <text x = {625} y = {610}>Total False Positive Rate</text>\n              }\n\n            </svg>\n\n            <input type=\"range\" min={0} max={(this.state.rect1Arr.length)-1} \n          className=\"tradeoff-slider\" onChange={this.onChange1}\n          name=\"sliderPos\" value={this.state.sliderPos} ref={this.sliderRef} list = \"tickmarks\"\n          style={{ width:300, left:550, top:650}}/>\n\n            </div>\n        )\n    }\n\n\n    render() {\n        return (\n\n        <div>\n         {this.showTradeOff()} <br/>\n        <span style={{ color: \"white\" }} ref={this.sliderRef}></span>\n        {\n          !this.state.submitted && \n          <div>\n            <input type=\"submit\" className=\"extraPadding\" value=\"I Confirm My Answer\"\n              onClick={this.onSubmit}/> <br/>\n            <p style={{ color: \"grey\", width: \"40%\", margin: \"auto\" }}>\n              Reminder: Once you click \"I Confirm My Answer\", your response to this question \n              will be recorded, and you won't be able to change your answer. \n            </p> <br/>\n            <input type=\"submit\" className=\"btn\" value=\"I Prefer Not to Answer\"\n              onClick={this.noAnswer}/>\n          </div>\n        }\n                \n            </div>\n        )\n    }\n}\n\n\n\n\n\n\n\n// Listing required functions / data\nTradeOff.propTypes = {\n    getExpt: PropTypes.func.isRequired,\n    expt: PropTypes.object.isRequired,\n    storeAnswer: PropTypes.func.isRequired\n  }\n\n// mapping Redux state to props that we can use in our component\n// expt contains all info from a given experiment \nconst mapStateToProps = state => ({\n   expt: state.expt\n })\n\nexport default connect(\n   mapStateToProps,\n   { getExpt, storeAnswer }\n )(TradeOff); \n\n/*\nclass TradeOff extends Component {\n    constructor() {\n      // putting super() here so that we can use this.blahblah\n      super();\n      this.sliderRef = React.createRef();\n      this.slider2Ref = React.createRef();\n      this.threeGraphRef = React.createRef();\n      this.rectRef = React.createRef();\n      this.svgRef = React.createRef();\n      this.graphColRef=React.createRef();\n      this.refLine1Ref = React.createRef();\n      this.refLine2Ref = React.createRef();\n\n      this.refLine4Ref = React.createRef();\n      this.refLine3Ref = React.createRef();\n      this.refLine6Ref = React.createRef();\n      this.refLine5Ref = React.createRef();\n      this.refLine7Ref = React.createRef();\n      this.refLine8Ref = React.createRef();\n\n      this.stroke1Ref = React.createRef();\n      this.areaRef = React.createRef();\n      this.onChange2 = this.onChange2.bind(this);\n      this.rectReturn1 = this.rectReturn1.bind(this);\n      this.rectReturn2 = this.rectReturn2.bind(this);\n      this.rectReturn3 = this.rectReturn3.bind(this);\n      this.rectReturn4 = this.rectReturn4.bind(this);\n      this.rectReturn5 = this.rectReturn5.bind(this);\n      this.rectReturn6 = this.rectReturn6.bind(this);\n      this.textReturn1 = this.textReturn1.bind(this);\n      this.changeGraphColNumber = this.changeGraphColNumber.bind(this);\n      this.line1 = this.line1.bind(this);\n      this.changeGraphNumber = this.changeGraphNumber.bind(this);\n      this.changeStroke1=this.changeStroke1.bind(this);\n\n      this.establishStateData = this.establishStateData.bind(this);\n      this.state = this.establishStateData(this.props.data);\n      this.onChange1 = this.onChange1.bind(this);\n\n  \n      this.resetState = this.resetState.bind(this);\n      this.onChange = this.onChange.bind(this);\n      this.onSubmit = this.onSubmit.bind(this);\n      this.showSlider = this.showSlider.bind(this);\n\n      this.state = this.initialState;\n    }\n  \n// setting the initial state of this component \nget initialState() {\n    const data = this.props.data;\n\n    return{\n        stroke1 : \"#FF0000\",\n        stroke2 : \"#0000FF\",\n        rect1Height : 100,\n        rect2Height : 100,\n        rect3Height : 100,\n        rect4Height: 100,\n        rect5Height:100,\n        rect6Height:100,\n        rect7Height:100,\n        rect8Height:100,\n        rectWidth : 40,\n        sliderPos:1,\n        sliderPos2:1,\n        rect1Arr: [0.76,0.76, 0.68, 0.65, 0.63, 0.62, 0.60, 0.59, 0.58, 0.57, 0.56, 0.56, 0.55, 0.54, 0.54, 0.53, 0.53, 0.52, 0.52, 0.52, 0.51, 0.51, 0.509 ,0.506, 0.503, 0.50],\n        rect2Arr: [0.399528104378295,\n          0.419528104378295,\n          0.436856783892294,\n          0.446993411594998,\n          0.454185463406292,\n          0.459764052189148,\n          0.464322091108996,\n          0.468175858104678,\n          0.471514142920291,\n          0.4744587188117,\n          0.477092731703146,\n          0.479475486198254,\n          0.481650770622995,\n          0.483651838314833,\n          0.485504537618676,\n          0.48722935940585,\n          0.48884282243429,\n          0.4903584379797,\n          0.491787398325699,\n          0.493139078857456,\n          0.494421411217145,\n          0.495641165321381,\n          0.496804165712253,\n          0.497915459776524,\n          0.498979450136994,\n          0.5],\n        rect3Arr: [0.75,\n          0.750612329917804,\n          0.751250724134086,\n          0.751917500572648,\n          0.752615300807172,\n          0.753347153269713,\n          0.754116552685526,\n          0.754927561004581,\n          0.75578493721218,\n          0.756694306539426,\n          0.75766238435649,\n          0.758697277428794,\n          0.7598088970111,\n          0.761009537626203,\n          0.762314708281047,\n          0.763744360978112,\n          0.76532476871298,\n          0.767091514247826,\n          0.769094485137193,\n          0.771406745334602,\n          0.774141568686512,\n          0.777488721956225,\n          0.781803953043001,\n          0.787885929664624,\n          0.798283137373023,\n          0.818283137373023],\n        rect4Arr: [0.75,\n          0.748775340164392,\n          0.747498551731828,\n          0.746164998854703,\n          0.744769398385657,\n          0.743305693460574,\n          0.741766894628947,\n          0.740144877990839,\n          0.73843012557564,\n          0.736611386921148,\n          0.73467523128702,\n          0.732605445142412,\n          0.7303822059778,\n          0.727980924747594,\n          0.725370583437905,\n          0.722511278043775,\n          0.719350462574041,\n          0.715816971504349,\n          0.711811029725613,\n          0.707186509330796,\n          0.701716862626977,\n          0.695022556087551,\n          0.686392093913997,\n          0.674228140670752,\n          0.653433725253954,\n          0.633433725253954],\n        rect5Arr: [0.689038170367751,\n          0.677038170367751,\n          0.638915075436954,\n          0.616614494491005,\n          0.600791980506157,\n          0.588519085183875,\n          0.578491399560208,\n          0.570013112169709,\n          0.56266888557536,\n          0.556190818614259,\n          0.550395990253079,\n          0.545153930363841,\n          0.540368304629411,\n          0.535965955707367,\n          0.531890017238912,\n          0.52809540930713,\n          0.524545790644563,\n          0.521211436444659,\n          0.518067723683462,\n          0.515094026513597,\n          0.512272895322282,\n          0.509589436292963,\n          0.507030835433044,\n          0.504585988491648,\n          0.502245209698614,\n          0.5],\n        rect6Arr: [0.75,0.750244931967122,\n          0.750500289653634,\n          0.750767000229059,\n          0.751046120322869,\n          0.751338861307885,\n          0.75164662107421,\n          0.751971024401832,\n          0.752313974884872,\n          0.75267772261577,\n          0.753064953742596,\n          0.753478910971518,\n          0.75392355880444,\n          0.754403815050481,\n          0.754925883312419,\n          0.755497744391245,\n          0.756129907485192,\n          0.75683660569913,\n          0.757637794054877,\n          0.758562698133841,\n          0.759656627474605,\n          0.76099548878249,\n          0.762721581217201,\n          0.76515437186585,\n          0.769313254949209,\n          0.781313254949209, \n          ],\n        rect7Arr: [0.4,0.8],\n        rect8Arr: [0.2,0.3],\n        line1Height:0.4,\n        line2Height:0.5,\n        line3Height:0.4,\n        line4Height:0.2,\n        line5Height:0.4,\n        line6Height:0.3,\n        line7Height:0.2,\n        line8Height:0.1,\n        threeGraphs: false,\n        threeGraphOne: true,\n        fourGraphOne: true\n\n    }\n    };\n  \n\n  resetState() {\n    this.setState(this.initialState);\n  }\n    // additional setup to communicate with Experiment.js\n  componentDidMount() {\n    const { childRef } = this.props;\n    childRef(this);\n    this.getData();\n    this.props.setWhichItem(\"trade-off\");\n  }\n  // additional setup to communicate with Experiment.js\n  componentWillUnmount() {\n    const { childRef } = this.props;\n    childRef(undefined);\n  }\n\n  // get experiment data from the database \n  getData() {\n    const db = this.props.expt.dbInfo.db;\n    const studyName = this.props.expt.dbInfo.col.split(\"-\")[0];\n    const exptName = this.props.expt.dbInfo.col.split(\"-\")[1];\n    this.props.getExpt(db, studyName, exptName);\n  }\n\n\n\n\n\n// Listing required functions / data\nTradeOff.propTypes = {\n    getExpt: PropTypes.func.isRequired,\n    expt: PropTypes.object.isRequired,\n    storeAnswer: PropTypes.func.isRequired\n  }\n\n// mapping Redux state to props that we can use in our component\n// expt contains all info from a given experiment \nconst mapStateToProps = state => ({\n   expt: state.expt\n })\n\nexport default connect(\n   mapStateToProps,\n   { getExpt, storeAnswer }\n )(TradeOff); \n\n*/","import React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport './HistSliderTradeOff.css';\n\nimport {\n  getExpt,\n  storeAnswer\n} from \"../actions/dataActions\";\n\n\n\nclass TradeoffTwo extends Component {\n    constructor() {\n        // putting super() here so that we can use this.blahblah\n        super();\n        this.sliderRef = React.createRef();\n        this.slider2Ref = React.createRef();\n        this.threeGraphRef = React.createRef();\n        this.rectRef = React.createRef();\n        this.svgRef = React.createRef();\n        this.graphColRef=React.createRef();\n        this.refLine1Ref = React.createRef();\n        this.refLine2Ref = React.createRef();\n  \n        this.refLine4Ref = React.createRef();\n        this.refLine3Ref = React.createRef();\n        this.refLine6Ref = React.createRef();\n        this.refLine5Ref = React.createRef();\n        this.refLine7Ref = React.createRef();\n        this.refLine8Ref = React.createRef();\n  \n        this.stroke1Ref = React.createRef();\n        this.areaRef = React.createRef();\n        this.onChange2 = this.onChange2.bind(this);\n        this.rectReturn1 = this.rectReturn1.bind(this);\n        this.rectReturn2 = this.rectReturn2.bind(this);\n        this.rectReturn3 = this.rectReturn3.bind(this);\n        this.rectReturn4 = this.rectReturn4.bind(this);\n        this.rectReturn5 = this.rectReturn5.bind(this);\n        this.rectReturn6 = this.rectReturn6.bind(this);\n        this.textReturn1 = this.textReturn1.bind(this);\n        this.changeGraphColNumber = this.changeGraphColNumber.bind(this);\n        this.line1 = this.line1.bind(this);\n        this.changeGraphNumber = this.changeGraphNumber.bind(this);\n        this.changeStroke1=this.changeStroke1.bind(this);\n  \n\n\n        this.onChange1 = this.onChange1.bind(this);\n  \n    \n        this.resetState = this.resetState.bind(this);\n        //this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.noAnswer = this.noAnswer.bind(this);\n\n  \n        this.state = this.initialState;\n      }\n\n  \n// setting the initial state of this component \n    get initialState() {\n        //const data = this.props.data;\n\n\n\n        return{\n            submitted: false,\n            stroke1 : \"#FF0000\",\n            stroke2 : \"#0000FF\",\n            rectWidth : 40,\n            sliderPos:0,\n            rect1Arr: [0.76,0.76, 0.68, 0.65, 0.63, 0.62, 0.60, 0.59, 0.58, 0.57, 0.56, 0.56, 0.55, 0.54, 0.54, 0.53, 0.53, 0.52, 0.52, 0.52, 0.51, 0.51, 0.509 ,0.506, 0.503, 0.50],\n            rect2Arr: [0.399528104378295,\n            0.419528104378295,\n            0.436856783892294,\n            0.446993411594998,\n            0.454185463406292,\n            0.459764052189148,\n            0.464322091108996,\n            0.468175858104678,\n            0.471514142920291,\n            0.4744587188117,\n            0.477092731703146,\n            0.479475486198254,\n            0.481650770622995,\n            0.483651838314833,\n            0.485504537618676,\n            0.48722935940585,\n            0.48884282243429,\n            0.4903584379797,\n            0.491787398325699,\n            0.493139078857456,\n            0.494421411217145,\n            0.495641165321381,\n            0.496804165712253,\n            0.497915459776524,\n            0.498979450136994,\n            0.5],\n            rect3Arr: [0.75,\n            0.750612329917804,\n            0.751250724134086,\n            0.751917500572648,\n            0.752615300807172,\n            0.753347153269713,\n            0.754116552685526,\n            0.754927561004581,\n            0.75578493721218,\n            0.756694306539426,\n            0.75766238435649,\n            0.758697277428794,\n            0.7598088970111,\n            0.761009537626203,\n            0.762314708281047,\n            0.763744360978112,\n            0.76532476871298,\n            0.767091514247826,\n            0.769094485137193,\n            0.771406745334602,\n            0.774141568686512,\n            0.777488721956225,\n            0.781803953043001,\n            0.787885929664624,\n            0.798283137373023,\n            0.818283137373023],\n            rect4Arr: [0.75,\n            0.748775340164392,\n            0.747498551731828,\n            0.746164998854703,\n            0.744769398385657,\n            0.743305693460574,\n            0.741766894628947,\n            0.740144877990839,\n            0.73843012557564,\n            0.736611386921148,\n            0.73467523128702,\n            0.732605445142412,\n            0.7303822059778,\n            0.727980924747594,\n            0.725370583437905,\n            0.722511278043775,\n            0.719350462574041,\n            0.715816971504349,\n            0.711811029725613,\n            0.707186509330796,\n            0.701716862626977,\n            0.695022556087551,\n            0.686392093913997,\n            0.674228140670752,\n            0.653433725253954,\n            0.633433725253954],\n            rect5Arr: [0.689038170367751,\n            0.677038170367751,\n            0.638915075436954,\n            0.616614494491005,\n            0.600791980506157,\n            0.588519085183875,\n            0.578491399560208,\n            0.570013112169709,\n            0.56266888557536,\n            0.556190818614259,\n            0.550395990253079,\n            0.545153930363841,\n            0.540368304629411,\n            0.535965955707367,\n            0.531890017238912,\n            0.52809540930713,\n            0.524545790644563,\n            0.521211436444659,\n            0.518067723683462,\n            0.515094026513597,\n            0.512272895322282,\n            0.509589436292963,\n            0.507030835433044,\n            0.504585988491648,\n            0.502245209698614,\n            0.5],\n            rect6Arr: [0.75,0.750244931967122,\n            0.750500289653634,\n            0.750767000229059,\n            0.751046120322869,\n            0.751338861307885,\n            0.75164662107421,\n            0.751971024401832,\n            0.752313974884872,\n            0.75267772261577,\n            0.753064953742596,\n            0.753478910971518,\n            0.75392355880444,\n            0.754403815050481,\n            0.754925883312419,\n            0.755497744391245,\n            0.756129907485192,\n            0.75683660569913,\n            0.757637794054877,\n            0.758562698133841,\n            0.759656627474605,\n            0.76099548878249,\n            0.762721581217201,\n            0.76515437186585,\n            0.769313254949209,\n            0.781313254949209, \n            ],\n            rect7Arr: [0.4,0.8],\n            rect8Arr: [0.2,0.3],\n            line1Height:0.4,\n            line2Height:0.5,\n            line3Height:0.4,\n            line4Height:0.2,\n            line5Height:0.4,\n            line6Height:0.3,\n            line7Height:0.2,\n            line8Height:0.1,\n            threeGraphs: false,\n            threeGraphOne: true,\n            fourGraphOne: true\n\n\n        }\n\n\n    };\n    \n    \n    resetState() {\n        this.setState(this.initialState);\n      }\n\n    // additional setup to communicate with Experiment.js\n    componentDidMount() {\n      const { childRef } = this.props;\n      childRef(this);\n      this.getData();\n      this.props.setWhichItem(\"trade-off-three\");\n    }\n    // additional setup to communicate with Experiment.js\n    componentWillUnmount() {\n      const { childRef } = this.props;\n      childRef(undefined);\n   }\n  // get experiment data from the database \n    getData() {\n        const db = this.props.expt.dbInfo.db;\n        const studyName = this.props.expt.dbInfo.col.split(\"-\")[0];\n        const exptName = this.props.expt.dbInfo.col.split(\"-\")[1];\n        this.props.getExpt(db, studyName, exptName);\n    }\n    onSubmit() {\n        //const threeGraphs = this.state.threeGraphs;\n        const questionTO = \"tradeoffTwo\";\n        const reply={\n          sliderPositionTO: this.state.sliderPos\n        }\n        \n\n        this.props.storeAnswer( questionTO,reply);\n        //this.props.storeAnswer(question, answer);\n        this.setState({ submitted: true });\n      }\n    noAnswer() {\n        const questionTO = this.props.questionTOKey;\n        const sliderPos = \"Prefer Not to Answer\";\n        this.props.storeAnswer(questionTO,sliderPos);\n        this.setState({ submitted: true });\n    }\n    changeGraphColNumber(){\n        const newColor = this.graphColRef.current.value;\n        if (newColor === \"1 and 1\"){\n            this.setState({fourGraphOne: true});\n            this.setState({threeGraphOne: true});\n        }\n        if (newColor === \"1 and 2\"){\n            this.setState({fourGraphOne: true});\n            this.setState({threeGraphOne: false});\n        }\n        if (newColor === \"2 and 1\"){\n            this.setState({fourGraphOne: false});\n            this.setState({threeGraphOne: true});\n        }\n        if (newColor === \"2 and 2\"){\n            this.setState({fourGraphOne: false});\n            this.setState({threeGraphOne: false});\n        }\n    }\n      onChange1(e){\n          this.setState({ [e.target.name]: e.target.value })\n\n      }\n      onChange10(e){\n        this.setState({line1Height:e})\n      }\n      onChange2(e){\n        this.setState({line2Height:e})\n      }\n      onChange3(e){\n        this.setState({line3Height:e})\n      }\n      onChange4(e){\n        this.setState({line4Height:e})\n      }\n      onChange5(e){\n        this.setState({line5Height:e})\n      }\n      onChange6(e){\n        this.setState({line6Height:e})\n      }\n      onChange7(e){\n        this.setState({line7Height:e})\n      }\n      onChange8(e){\n        this.setState({line8Height:e})\n      }\n  \n      changeStroke1() {\n        const newColor = this.stroke1Ref.current.value;\n        if (newColor === \"#FF0000\"){\n          this.setState({stroke1:\"#0000FF\"});\n          this.setState({stroke2:newColor});\n        }\n        if (newColor === \"#0000FF\"){      \n          this.setState({stroke1: \"#FF0000\"});\n          this.setState({stroke2:newColor});\n        }\n        if(newColor === \"Orange and Blue\"){\n          this.setState({stroke1:\"#0000FF\"});\n          this.setState({stroke2: \"#ffa500\"});\n        }\n        if(newColor === \"Blue and Orange\"){\n          this.setState({stroke1:\"#0000FF\"});\n          this.setState({stroke2: \"#ffa500\"});\n        }\n        if(newColor === \"Blue and Yellow\"){\n          this.setState({stroke1:\"#0000FF\"});\n          this.setState({stroke2: \"#FFD300\"});\n        }\n        if(newColor === \"Yellow and Blue\"){\n          this.setState({stroke1:\"#0000FF\"});\n          this.setState({stroke2: \"#FFD300\"});\n        }\n  \n  \n      }\n      changeGraphNumber(){\n        const newGraph = this.threeGraphRef.current.value;\n        if (newGraph === \"True\"){\n          this.setState({threeGraphs: true});\n        }\n        else{\n          this.setState({threeGraphs: false});\n        }\n    }\n  \n    rectReturn1(xPos, yPos){\n        var hard = \n        <rect\n        x = {xPos} y = {yPos} stroke = {\"#000000\"} fill = {this.state.stroke1} height = {200*this.state.rect1Arr[this.state.sliderPos]} width = {this.state.rectWidth} fillOpacity = \"0.7\" strokeOpacity = \"0.7\"></rect>;\n        return hard;\n      }\n      rectReturn2(xPos, yPos){\n        var hard = \n        <rect\n        x = {xPos} y = {yPos} stroke = {\"#000000\"} fill = {this.state.stroke2} height = {200*this.state.rect2Arr[this.state.sliderPos]} width = {this.state.rectWidth} fillOpacity = \"0.7\" strokeOpacity = \"0.7\"></rect>;\n        return hard;\n      }\n      rectReturn3(xPos, yPos){\n        var hard = \n        <rect\n        x = {xPos} y = {yPos} stroke = {\"#000000\"} fill = {this.state.stroke1} height = {200*this.state.rect3Arr[this.state.sliderPos]} width = {this.state.rectWidth} fillOpacity = \"0.7\" strokeOpacity = \"0.7\"></rect>;\n        return hard;\n      }\n      rectReturn4(xPos, yPos){\n        var hard = \n        <rect\n        x = {xPos} y = {yPos} stroke = {\"#000000\"} fill = {this.state.stroke2} height = {200*this.state.rect4Arr[this.state.sliderPos]} width = {this.state.rectWidth} fillOpacity = \"0.7\" strokeOpacity = \"0.7\"></rect>;\n        return hard;\n      }\n      rectReturn5(xPos, yPos){\n        var hard = \n        <rect\n        x = {xPos} y = {yPos} stroke = {\"#000000\"} fill = {this.state.stroke1} height = {200*this.state.rect5Arr[this.state.sliderPos]} width = {this.state.rectWidth} fillOpacity = \"0.7\" strokeOpacity = \"0.7\"></rect>;\n        return hard;\n      }\n      rectReturn6(xPos, yPos){\n        var hard = \n        <rect\n        x = {xPos} y = {yPos} stroke = {\"#000000\"} fill = {this.state.stroke2} height = {200*this.state.rect6Arr[this.state.sliderPos]} width = {this.state.rectWidth} fillOpacity = \"0.7\" strokeOpacity = \"0.7\"></rect>;\n        return hard;\n      }\n      rectReturn7(xPos, yPos){\n        var hard = \n        <rect\n        x = {xPos} y = {yPos} stroke = {\"#000000\"} fill = {this.state.stroke1} height = {200*this.state.rect7Arr[this.state.sliderPos]} width = {this.state.rectWidth} fillOpacity = \"0.7\" strokeOpacity = \"0.7\"></rect>;\n        return hard;\n      }\n      rectReturn8(xPos, yPos){\n        var hard = \n        <rect\n        x = {xPos} y = {yPos} stroke = {\"#000000\"} fill = {this.state.stroke2} height = {200*this.state.rect8Arr[this.state.sliderPos]} width = {this.state.rectWidth} fillOpacity = \"0.7\" strokeOpacity = \"0.7\"></rect>;\n        return hard;\n      }\n      rectReturn9(xPos, yPos){\n        var hard = \n        <rect\n        x = {xPos} y = {yPos} stroke = {\"#000000\"} fill = {\"#ffa500\"} height = {200*this.state.rect5Arr[this.state.sliderPos]} width = {this.state.rectWidth} fillOpacity = \"0.7\" strokeOpacity = \"0.7\"></rect>;\n        return hard;\n      }\n      rectReturn10(xPos, yPos){\n        var hard = \n        <rect\n        x = {xPos} y = {yPos} stroke = {\"#000000\"} fill = {\"#ffa500\"} height = {200*this.state.rect5Arr[this.state.sliderPos]} width = {this.state.rectWidth} fillOpacity = \"0.7\" strokeOpacity = \"0.7\"></rect>;\n        return hard;\n      }\n        line1(xPos1,xPos2,yPos1,yPos2){\n          var hard = \n          <line x1 = {xPos1 + 300} x2 = {300 + xPos2} y1 = {yPos1} y2 = {yPos2} stroke = \"#000000\"></line>;\n          return hard;\n        }\n        line2(xPos1,xPos2,yPos1,yPos2){\n          var hard = \n          <line x1 = {xPos1 + 300} x2 = {300 + xPos2} y1 = {yPos1} y2 = {yPos2} stroke = \"#808080\"></line>;\n          return hard;\n        }\n        textReturn1(xPos, yPos, tedxt){\n          var hard = <text x = {xPos} y = {yPos}>{tedxt}</text>;\n          return hard;\n        }\n  \n    showTradeOff(){\n        const threeGraphs = this.state.threeGraphs;\n        return(\n            \n            <div>\n        <div className=\"container\">\n          <h3>Question: </h3>\n          <div style={{ width: \"60%\", margin: \"auto\" }}>\n            <p style={{ textAlign: \"left\" }}>\n              {this.props.questionTO}\n            </p>\n          </div>\n        </div> \n            <svg width = {1400} height = {1000} style={{}} class = \"b\"> \n                {this.rectReturn1(500,450)}\n                {this.rectReturn2(580,450)}\n                {this.rectReturn3(900,450)}\n                {this.rectReturn4(980,450)}\n                {this.line1(173,187,650,650)}\n                {this.line1(173,187,488,488)}\n                {this.line1(173,187,528,528)}\n                {this.line1(173,187,568,568)}\n                {this.line1(173,187,608,608)}\n\n                {this.line1(176,184,633,633)}\n                {this.line1(176,184,468,468)}\n                {this.line1(176,184,508,508)}\n                {this.line1(176,184,548,548)}\n                {this.line1(176,184,588,588)}\n                {this.line1(173,187,488,488)}\n                {this.line1(173,187,528,528)}\n                {this.line1(173,187,568,568)}\n                {this.line1(173,187,608,608)}\n\n                {this.line1(176,184,633,633)}\n                {this.line1(176,184,468,468)}\n                {this.line1(176,184,508,508)}\n                {this.line1(176,184,548,548)}\n                {this.line1(176,184,588,588)}\n\n                {\n                threeGraphs\n                ? this.line1(330,330,160,360)\n\n\n                : this.line1(576,584,218,218)\n              }\n              {\n                threeGraphs\n                ? this.line1(330,330,258,258)\n\n\n                : this.line1(576,584,298,298)\n              }\n              {\n                threeGraphs\n                ? this.line1(326,334,298,298)\n\n\n                : this.line1(576,584,337,337)\n              }\n              {\n                threeGraphs\n                ? this.line1(326,334,338,338)\n\n\n                : this.line1(573,587,360,360)\n              }\n\n              {\n                threeGraphs\n                ? this.line1(326,334,218,218)\n\n\n                : this.line1(176,184,218,218)\n              }\n              \n              {\n                threeGraphs\n                ? this.line1(326,334,258,258)\n\n\n                : this.line1(176,184,258,258)\n              }\n\n              {\n                threeGraphs\n                ? this.line1(326,334,178,178)\n\n\n                : this.line1(576,584,258,258)\n              }\n\n\n\n\n              {\n                threeGraphs\n                ? this.line1(330,330,160,360)\n\n\n                : this.line1(573,587,198,198)\n              }\n              {\n                threeGraphs\n                ? this.line1(323,337,238,238)\n\n\n                : this.line1(573,587,238,238)\n              }\n              {\n                threeGraphs\n                ? this.line1(323,337,278,278)\n\n\n                : this.line1(573,587,278,278)\n              }\n              {\n                threeGraphs\n                ? this.line1(323,337,318,318)\n\n\n                : this.line1(573,587,318,318)\n              }\n\n              {\n                threeGraphs\n                ? this.line1(323,337,360,360)\n\n\n                : this.line1(176,184,218,218)\n              }\n\n\n               {\n                threeGraphs\n                ? this.line1(323,337,198,198)\n\n\n                : this.line1(173,187,198,198)\n              }\n              {\n                threeGraphs\n                ? this.line1(330,330,258,258)\n\n\n                : this.line1(173,187,238,238)\n              }\n              {\n                threeGraphs\n                ? this.line1(330,330,160,360)\n\n\n                : this.line1(173,187,278,278)\n              }\n              {\n                threeGraphs\n                ? this.line1(330,330,160,360)\n\n\n                : this.line1(173,187,318,318)\n              }\n\n              {\n                threeGraphs\n                ? this.line1(330,330,160,360)\n\n\n                : this.line1(176,184,218,218)\n              }\n\n\n\n\n\n\n\n\n\n\n\n              {\n                threeGraphs\n                ? this.line1(330,330,255,258)\n\n\n                : this.line1(176,184,298,298)\n              }\n              {\n                threeGraphs\n                ? this.line1(330,330,160,360)\n\n\n                : this.line1(176,184,337,337)\n              }\n              {\n                threeGraphs\n                ? this.line1(330,330,160,360)\n\n\n                : this.line1(173,187,360,360)\n              }\n\n\n              {\n                threeGraphs\n                ? this.line1(330,330,160,360)\n\n\n                : this.line1(576,584,218,218)\n              }\n                                {\n                threeGraphs\n                ? this.line1(330,330,160,360)\n\n\n                : this.line1(576,584,178,178)\n\n              }\n                                {\n                threeGraphs\n                ? this.line1(330,330,160,360)\n\n\n                : this.line1(176,184,178,178)\n              }\n\n                {this.line1(573,587,650,650)}\n                {this.line1(573,587,488,488)}\n                {this.line1(573,587,528,528)}\n                {this.line1(573,587,568,568)}\n                {this.line1(573,587,608,608)}\n\n                {this.line1(576,584,633,633)}\n                {this.line1(576,584,468,468)}\n                {this.line1(576,584,508,508)}\n                {this.line1(576,584,548,548)}\n                {this.line1(576,584,588,588)}\n\n\n                {\n                  this.state.threeGraphs\n                  ? this.rectReturn5(660,160)             \n                  : [\n                      (this.state.threeGraphOne\n                      ? this.rectReturn9(535,160)\n                      : this.rectReturn5(500,160)\n                      )\n                    ]\n                }\n                {\n                  this.state.threeGraphs\n                  ? this.rectReturn6(735,160)         \n                  : [\n                    (this.state.threeGraphOne\n                    ? <text></text>\n                    : this.rectReturn6(580,160)\n                    )\n                  ]     \n                }\n                {\n                  this.state.threeGraphs\n                  ? <text> </text>        \n                  : [\n                      (this.state.fourGraphOne\n                      ? this.rectReturn10(940,160)  \n                      : this.rectReturn7(900,160)   \n                      )\n                  ] \n                }\n               {\n                  this.state.threeGraphs\n                  ? <text> </text>        \n                  : [\n                      (this.state.fourGraphOne\n                      ? <text></text>\n                      : this.rectReturn8(980,160)   \n                      )\n                  ] \n                }\n                {this.line1(180,180,450,650)}\n                {this.line1(180,360,450,450)}\n                {this.line1(580,580,450,650)}\n                {this.line1(580,760,450,450)}\n                {\n                threeGraphs\n                ? this.line1(330,330,160,360)\n\n\n                : this.line1(180,180,160,360)\n\n              }\n            \n              {\n                threeGraphs\n                ? this.line1(330,510,160,160)\n\n                : this.line1(180,390,160,160)\n              }\n              {\n                threeGraphs\n                ? this.line1(0,0,0,0)\n\n\n                : this.line1(580,580,160,360)\n\n              }\n              {\n                threeGraphs\n                ? this.line1(0,0,0,0)\n\n                : this.line1(580 ,780,160,160)\n              }\n              </svg>\n              <svg class = \"e\" width = {1400} height = {1000}>\n              <text x = {200} y = {115}>Filler text for eventual question will go here</text>\n              <text x = {230} y = {265}>Legend:</text>\n              <text x = {305} y = {265}> White People</text>\n              <rect x = {290} y = {255} height = {10} width = {10} stroke = {this.state.stroke1} fill = {this.state.stroke1}></rect>\n              <text x = {415} y = {265}> Black People</text>\n              <rect x = {510} y = {255} height = {10} width = {10} stroke = {\"#ffa500\"} fill = {\"#ffa500\"}></rect>\n              <text x = {525} y = {265}>Both Groups</text>\n              <rect x = {400} y = {255} height = {10} width = {10} stroke = {this.state.stroke2} fill = {this.state.stroke2}></rect>\n\n              <text x = {150} y = {200}>Equal FPR</text>\n              <text x = {450} y = {200}>Equal Accuracy</text>\n              <text x = {55} y = {510}>0</text>\n              <text x = {50} y = {470}>20</text>\n              <text x = {50} y = {430}>40</text>\n              <text x = {50} y = {390}>60</text>\n              <text x = {50} y = {350}>80</text>\n              <text x = {45} y = {310}>100</text>\n              <text x = {450} y = {510}>0</text>\n              <text x = {445} y = {470}>20</text>\n              <text x = {445} y = {430}>40</text>\n              <text x = {445} y = {390}>60</text>\n              <text x = {445} y = {350}>80</text>\n              <text style = {{size:8}} x = {440} y = {310}>100</text>\n              {\n                threeGraphs\n                ? <text x = {185} y = {600}>100</text>\n\n                : <text x = {45} y = {600}>100</text>\n              }\n              {\n                threeGraphs\n                ? <text x = {190} y = {640}>80</text>\n\n                : <text x = {50} y = {640}>80</text>\n              }\n              {\n                threeGraphs\n                ? <text x = {190} y = {680}>60</text>\n\n                : <text x = {50} y = {680}>60</text>\n              }\n              {\n                threeGraphs\n                ? <text x = {190} y = {720}>40</text>\n\n                : <text x = {50} y = {720}>40</text>\n              }\n              {\n                threeGraphs\n                ? <text x = {190} y = {760}>20</text>\n\n                : <text x = {50} y = {760}>20</text>\n              }\n              {\n                threeGraphs\n                ? <text x = {190} y = {790}>0</text>\n                : <text x = {50} y = {800}>0</text>\n              }\n              {\n                threeGraphs\n                ? <text x = {190} y = {790}> </text>\n                : <text x = {445} y = {600}>100</text>\n              }\n               {\n                threeGraphs\n                ? <text x = {190} y = {640}></text>\n\n                : <text x = {452} y = {640}>80</text>\n              }\n              {\n                threeGraphs\n                ? <text x = {190} y = {680}></text>\n\n                : <text x = {452} y = {680}>60</text>\n              }\n              {\n                threeGraphs\n                ? <text x = {190} y = {720}></text>\n\n                : <text x = {452} y = {720}>40</text>\n              }\n              {\n                threeGraphs\n                ? <text x = {190} y = {760}></text>\n\n                : <text x = {452} y = {760}>20</text>\n              }\n              {\n                threeGraphs\n                ? <text x = {160} y = {790}> </text>\n                : <text x = {460} y = {800}>0</text>\n              }\n              <text x = {200} y = {310}>Accuracy Rate</text>\n              <text x = {625} y = {310}>False Positive Rate</text>\n              {\n                threeGraphs\n                ? <text x = {380} y = {610}>Graph 3</text>\n                : <text x = {200} y = {610}></text>\n              }\n              {\n                threeGraphs\n                ? <text> </text>\n                : <text x = {625} y = {610}></text>\n              }\n              <text x = {200} y = {310}></text>\n              <text x = {625} y = {310}></text>\n              {\n                threeGraphs\n                ? <text x = {380} y = {610}>Graph 3</text>\n                : <text x = {200} y = {610}>Total Accuracy Rate</text>\n              }\n              {\n                threeGraphs\n                ? <text> </text>\n                : <text x = {625} y = {610}>Total False Positive Rate</text>\n              }\n\n            </svg>\n\n            <input type=\"range\" min={0} max={(this.state.rect1Arr.length)-1} \n          className=\"tradeoff-slider\" onChange={this.onChange1}\n          name=\"sliderPos\" value={this.state.sliderPos} ref={this.sliderRef} list = \"tickmarks\"\n          style={{ width:300, left:550, top:650}}/>\n\n            </div>\n        )\n    }\n\n\n    render() {\n        return (\n\n        <div>\n         {this.showTradeOff()} <br/>\n        <span style={{ color: \"white\" }} ref={this.sliderRef}></span>\n        {\n          !this.state.submitted && \n          <div>\n            <input type=\"submit\" className=\"extraPadding\" value=\"I Confirm My Answer\"\n              onClick={this.onSubmit}/> <br/>\n            <p style={{ color: \"grey\", width: \"40%\", margin: \"auto\" }}>\n              Reminder: Once you click \"I Confirm My Answer\", your response to this question \n              will be recorded, and you won't be able to change your answer. \n            </p> <br/>\n            <input type=\"submit\" className=\"btn\" value=\"I Prefer Not to Answer\"\n              onClick={this.noAnswer}/>\n          </div>\n        }\n                \n            </div>\n        )\n    }\n}\n\n\n\n\n\n\n\n// Listing required functions / data\nTradeoffTwo.propTypes = {\n    getExpt: PropTypes.func.isRequired,\n    expt: PropTypes.object.isRequired,\n    storeAnswer: PropTypes.func.isRequired\n  }\n\n// mapping Redux state to props that we can use in our component\n// expt contains all info from a given experiment \nconst mapStateToProps = state => ({\n   expt: state.expt\n })\n\nexport default connect(\n   mapStateToProps,\n   { getExpt, storeAnswer }\n )(TradeoffTwo); \n\n/*\nclass TradeOff extends Component {\n    constructor() {\n      // putting super() here so that we can use this.blahblah\n      super();\n      this.sliderRef = React.createRef();\n      this.slider2Ref = React.createRef();\n      this.threeGraphRef = React.createRef();\n      this.rectRef = React.createRef();\n      this.svgRef = React.createRef();\n      this.graphColRef=React.createRef();\n      this.refLine1Ref = React.createRef();\n      this.refLine2Ref = React.createRef();\n\n      this.refLine4Ref = React.createRef();\n      this.refLine3Ref = React.createRef();\n      this.refLine6Ref = React.createRef();\n      this.refLine5Ref = React.createRef();\n      this.refLine7Ref = React.createRef();\n      this.refLine8Ref = React.createRef();\n\n      this.stroke1Ref = React.createRef();\n      this.areaRef = React.createRef();\n      this.onChange2 = this.onChange2.bind(this);\n      this.rectReturn1 = this.rectReturn1.bind(this);\n      this.rectReturn2 = this.rectReturn2.bind(this);\n      this.rectReturn3 = this.rectReturn3.bind(this);\n      this.rectReturn4 = this.rectReturn4.bind(this);\n      this.rectReturn5 = this.rectReturn5.bind(this);\n      this.rectReturn6 = this.rectReturn6.bind(this);\n      this.textReturn1 = this.textReturn1.bind(this);\n      this.changeGraphColNumber = this.changeGraphColNumber.bind(this);\n      this.line1 = this.line1.bind(this);\n      this.changeGraphNumber = this.changeGraphNumber.bind(this);\n      this.changeStroke1=this.changeStroke1.bind(this);\n\n      this.establishStateData = this.establishStateData.bind(this);\n      this.state = this.establishStateData(this.props.data);\n      this.onChange1 = this.onChange1.bind(this);\n\n  \n      this.resetState = this.resetState.bind(this);\n      this.onChange = this.onChange.bind(this);\n      this.onSubmit = this.onSubmit.bind(this);\n      this.showSlider = this.showSlider.bind(this);\n\n      this.state = this.initialState;\n    }\n  \n// setting the initial state of this component \nget initialState() {\n    const data = this.props.data;\n\n    return{\n        stroke1 : \"#FF0000\",\n        stroke2 : \"#0000FF\",\n        rect1Height : 100,\n        rect2Height : 100,\n        rect3Height : 100,\n        rect4Height: 100,\n        rect5Height:100,\n        rect6Height:100,\n        rect7Height:100,\n        rect8Height:100,\n        rectWidth : 40,\n        sliderPos:1,\n        sliderPos2:1,\n        rect1Arr: [0.76,0.76, 0.68, 0.65, 0.63, 0.62, 0.60, 0.59, 0.58, 0.57, 0.56, 0.56, 0.55, 0.54, 0.54, 0.53, 0.53, 0.52, 0.52, 0.52, 0.51, 0.51, 0.509 ,0.506, 0.503, 0.50],\n        rect2Arr: [0.399528104378295,\n          0.419528104378295,\n          0.436856783892294,\n          0.446993411594998,\n          0.454185463406292,\n          0.459764052189148,\n          0.464322091108996,\n          0.468175858104678,\n          0.471514142920291,\n          0.4744587188117,\n          0.477092731703146,\n          0.479475486198254,\n          0.481650770622995,\n          0.483651838314833,\n          0.485504537618676,\n          0.48722935940585,\n          0.48884282243429,\n          0.4903584379797,\n          0.491787398325699,\n          0.493139078857456,\n          0.494421411217145,\n          0.495641165321381,\n          0.496804165712253,\n          0.497915459776524,\n          0.498979450136994,\n          0.5],\n        rect3Arr: [0.75,\n          0.750612329917804,\n          0.751250724134086,\n          0.751917500572648,\n          0.752615300807172,\n          0.753347153269713,\n          0.754116552685526,\n          0.754927561004581,\n          0.75578493721218,\n          0.756694306539426,\n          0.75766238435649,\n          0.758697277428794,\n          0.7598088970111,\n          0.761009537626203,\n          0.762314708281047,\n          0.763744360978112,\n          0.76532476871298,\n          0.767091514247826,\n          0.769094485137193,\n          0.771406745334602,\n          0.774141568686512,\n          0.777488721956225,\n          0.781803953043001,\n          0.787885929664624,\n          0.798283137373023,\n          0.818283137373023],\n        rect4Arr: [0.75,\n          0.748775340164392,\n          0.747498551731828,\n          0.746164998854703,\n          0.744769398385657,\n          0.743305693460574,\n          0.741766894628947,\n          0.740144877990839,\n          0.73843012557564,\n          0.736611386921148,\n          0.73467523128702,\n          0.732605445142412,\n          0.7303822059778,\n          0.727980924747594,\n          0.725370583437905,\n          0.722511278043775,\n          0.719350462574041,\n          0.715816971504349,\n          0.711811029725613,\n          0.707186509330796,\n          0.701716862626977,\n          0.695022556087551,\n          0.686392093913997,\n          0.674228140670752,\n          0.653433725253954,\n          0.633433725253954],\n        rect5Arr: [0.689038170367751,\n          0.677038170367751,\n          0.638915075436954,\n          0.616614494491005,\n          0.600791980506157,\n          0.588519085183875,\n          0.578491399560208,\n          0.570013112169709,\n          0.56266888557536,\n          0.556190818614259,\n          0.550395990253079,\n          0.545153930363841,\n          0.540368304629411,\n          0.535965955707367,\n          0.531890017238912,\n          0.52809540930713,\n          0.524545790644563,\n          0.521211436444659,\n          0.518067723683462,\n          0.515094026513597,\n          0.512272895322282,\n          0.509589436292963,\n          0.507030835433044,\n          0.504585988491648,\n          0.502245209698614,\n          0.5],\n        rect6Arr: [0.75,0.750244931967122,\n          0.750500289653634,\n          0.750767000229059,\n          0.751046120322869,\n          0.751338861307885,\n          0.75164662107421,\n          0.751971024401832,\n          0.752313974884872,\n          0.75267772261577,\n          0.753064953742596,\n          0.753478910971518,\n          0.75392355880444,\n          0.754403815050481,\n          0.754925883312419,\n          0.755497744391245,\n          0.756129907485192,\n          0.75683660569913,\n          0.757637794054877,\n          0.758562698133841,\n          0.759656627474605,\n          0.76099548878249,\n          0.762721581217201,\n          0.76515437186585,\n          0.769313254949209,\n          0.781313254949209, \n          ],\n        rect7Arr: [0.4,0.8],\n        rect8Arr: [0.2,0.3],\n        line1Height:0.4,\n        line2Height:0.5,\n        line3Height:0.4,\n        line4Height:0.2,\n        line5Height:0.4,\n        line6Height:0.3,\n        line7Height:0.2,\n        line8Height:0.1,\n        threeGraphs: false,\n        threeGraphOne: true,\n        fourGraphOne: true\n\n    }\n    };\n  \n\n  resetState() {\n    this.setState(this.initialState);\n  }\n    // additional setup to communicate with Experiment.js\n  componentDidMount() {\n    const { childRef } = this.props;\n    childRef(this);\n    this.getData();\n    this.props.setWhichItem(\"trade-off\");\n  }\n  // additional setup to communicate with Experiment.js\n  componentWillUnmount() {\n    const { childRef } = this.props;\n    childRef(undefined);\n  }\n\n  // get experiment data from the database \n  getData() {\n    const db = this.props.expt.dbInfo.db;\n    const studyName = this.props.expt.dbInfo.col.split(\"-\")[0];\n    const exptName = this.props.expt.dbInfo.col.split(\"-\")[1];\n    this.props.getExpt(db, studyName, exptName);\n  }\n\n\n\n\n\n// Listing required functions / data\nTradeOff.propTypes = {\n    getExpt: PropTypes.func.isRequired,\n    expt: PropTypes.object.isRequired,\n    storeAnswer: PropTypes.func.isRequired\n  }\n\n// mapping Redux state to props that we can use in our component\n// expt contains all info from a given experiment \nconst mapStateToProps = state => ({\n   expt: state.expt\n })\n\nexport default connect(\n   mapStateToProps,\n   { getExpt, storeAnswer }\n )(TradeOff); \n\n*/","import React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport './HistSliderTradeOff.css';\n\nimport {\n  getExpt,\n  storeAnswer\n} from \"../actions/dataActions\";\n\n\n\nclass TradeoffThree extends Component {\n    constructor() {\n        // putting super() here so that we can use this.blahblah\n        super();\n        this.sliderRef = React.createRef();\n        this.slider2Ref = React.createRef();\n        this.threeGraphRef = React.createRef();\n        this.rectRef = React.createRef();\n        this.svgRef = React.createRef();\n        this.graphColRef=React.createRef();\n        this.refLine1Ref = React.createRef();\n        this.refLine2Ref = React.createRef();\n  \n        this.refLine4Ref = React.createRef();\n        this.refLine3Ref = React.createRef();\n        this.refLine6Ref = React.createRef();\n        this.refLine5Ref = React.createRef();\n        this.refLine7Ref = React.createRef();\n        this.refLine8Ref = React.createRef();\n  \n        this.stroke1Ref = React.createRef();\n        this.areaRef = React.createRef();\n        this.onChange2 = this.onChange2.bind(this);\n        this.rectReturn1 = this.rectReturn1.bind(this);\n        this.rectReturn2 = this.rectReturn2.bind(this);\n        this.rectReturn3 = this.rectReturn3.bind(this);\n        this.rectReturn4 = this.rectReturn4.bind(this);\n        this.rectReturn5 = this.rectReturn5.bind(this);\n        this.rectReturn6 = this.rectReturn6.bind(this);\n        this.textReturn1 = this.textReturn1.bind(this);\n        this.changeGraphColNumber = this.changeGraphColNumber.bind(this);\n        this.line1 = this.line1.bind(this);\n        this.changeGraphNumber = this.changeGraphNumber.bind(this);\n        this.changeStroke1=this.changeStroke1.bind(this);\n  \n\n\n        this.onChange1 = this.onChange1.bind(this);\n  \n    \n        this.resetState = this.resetState.bind(this);\n        //this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.noAnswer = this.noAnswer.bind(this);\n\n  \n        this.state = this.initialState;\n      }\n\n  \n// setting the initial state of this component \n    get initialState() {\n        //const data = this.props.data;\n\n\n\n        return{\n            submitted: false,\n            stroke1 : \"#FF0000\",\n            stroke2 : \"#0000FF\",\n            rectWidth : 40,\n            sliderPos:0,\n            rect1Arr: [0.76,0.76, 0.68, 0.65, 0.63, 0.62, 0.60, 0.59, 0.58, 0.57, 0.56, 0.56, 0.55, 0.54, 0.54, 0.53, 0.53, 0.52, 0.52, 0.52, 0.51, 0.51, 0.509 ,0.506, 0.503, 0.50],\n            rect2Arr: [0.399528104378295,\n            0.419528104378295,\n            0.436856783892294,\n            0.446993411594998,\n            0.454185463406292,\n            0.459764052189148,\n            0.464322091108996,\n            0.468175858104678,\n            0.471514142920291,\n            0.4744587188117,\n            0.477092731703146,\n            0.479475486198254,\n            0.481650770622995,\n            0.483651838314833,\n            0.485504537618676,\n            0.48722935940585,\n            0.48884282243429,\n            0.4903584379797,\n            0.491787398325699,\n            0.493139078857456,\n            0.494421411217145,\n            0.495641165321381,\n            0.496804165712253,\n            0.497915459776524,\n            0.498979450136994,\n            0.5],\n            rect3Arr: [0.75,\n            0.750612329917804,\n            0.751250724134086,\n            0.751917500572648,\n            0.752615300807172,\n            0.753347153269713,\n            0.754116552685526,\n            0.754927561004581,\n            0.75578493721218,\n            0.756694306539426,\n            0.75766238435649,\n            0.758697277428794,\n            0.7598088970111,\n            0.761009537626203,\n            0.762314708281047,\n            0.763744360978112,\n            0.76532476871298,\n            0.767091514247826,\n            0.769094485137193,\n            0.771406745334602,\n            0.774141568686512,\n            0.777488721956225,\n            0.781803953043001,\n            0.787885929664624,\n            0.798283137373023,\n            0.818283137373023],\n            rect4Arr: [0.75,\n            0.748775340164392,\n            0.747498551731828,\n            0.746164998854703,\n            0.744769398385657,\n            0.743305693460574,\n            0.741766894628947,\n            0.740144877990839,\n            0.73843012557564,\n            0.736611386921148,\n            0.73467523128702,\n            0.732605445142412,\n            0.7303822059778,\n            0.727980924747594,\n            0.725370583437905,\n            0.722511278043775,\n            0.719350462574041,\n            0.715816971504349,\n            0.711811029725613,\n            0.707186509330796,\n            0.701716862626977,\n            0.695022556087551,\n            0.686392093913997,\n            0.674228140670752,\n            0.653433725253954,\n            0.633433725253954],\n            rect5Arr: [0.689038170367751,\n            0.677038170367751,\n            0.638915075436954,\n            0.616614494491005,\n            0.600791980506157,\n            0.588519085183875,\n            0.578491399560208,\n            0.570013112169709,\n            0.56266888557536,\n            0.556190818614259,\n            0.550395990253079,\n            0.545153930363841,\n            0.540368304629411,\n            0.535965955707367,\n            0.531890017238912,\n            0.52809540930713,\n            0.524545790644563,\n            0.521211436444659,\n            0.518067723683462,\n            0.515094026513597,\n            0.512272895322282,\n            0.509589436292963,\n            0.507030835433044,\n            0.504585988491648,\n            0.502245209698614,\n            0.5],\n            rect6Arr: [0.75,0.750244931967122,\n            0.750500289653634,\n            0.750767000229059,\n            0.751046120322869,\n            0.751338861307885,\n            0.75164662107421,\n            0.751971024401832,\n            0.752313974884872,\n            0.75267772261577,\n            0.753064953742596,\n            0.753478910971518,\n            0.75392355880444,\n            0.754403815050481,\n            0.754925883312419,\n            0.755497744391245,\n            0.756129907485192,\n            0.75683660569913,\n            0.757637794054877,\n            0.758562698133841,\n            0.759656627474605,\n            0.76099548878249,\n            0.762721581217201,\n            0.76515437186585,\n            0.769313254949209,\n            0.781313254949209, \n            ],\n            rect7Arr: [0.4,0.8],\n            rect8Arr: [0.2,0.3],\n            line1Height:0.4,\n            line2Height:0.5,\n            line3Height:0.4,\n            line4Height:0.2,\n            line5Height:0.4,\n            line6Height:0.3,\n            line7Height:0.2,\n            line8Height:0.1,\n            threeGraphs: false,\n            threeGraphOne: true,\n            fourGraphOne: true\n\n\n        }\n\n\n    };\n    \n    \n    resetState() {\n        this.setState(this.initialState);\n      }\n\n    // additional setup to communicate with Experiment.js\n    componentDidMount() {\n      const { childRef } = this.props;\n      childRef(this);\n      this.getData();\n      this.props.setWhichItem(\"trade-off-three\");\n    }\n    // additional setup to communicate with Experiment.js\n    componentWillUnmount() {\n      const { childRef } = this.props;\n      childRef(undefined);\n   }\n  // get experiment data from the database \n    getData() {\n        const db = this.props.expt.dbInfo.db;\n        const studyName = this.props.expt.dbInfo.col.split(\"-\")[0];\n        const exptName = this.props.expt.dbInfo.col.split(\"-\")[1];\n        this.props.getExpt(db, studyName, exptName);\n    }\n    onSubmit() {\n        //const threeGraphs = this.state.threeGraphs;\n        const questionTO = \"tradeoffThree\";\n        const reply={\n          sliderPositionTO: this.state.sliderPos\n        }\n        \n\n        this.props.storeAnswer( questionTO,reply);\n        //this.props.storeAnswer(question, answer);\n        this.setState({ submitted: true });\n      }\n    noAnswer() {\n        const questionTO = this.props.questionTOKey;\n        const sliderPos = \"Prefer Not to Answer\";\n        this.props.storeAnswer(questionTO,sliderPos);\n        this.setState({ submitted: true });\n    }\n    changeGraphColNumber(){\n        const newColor = this.graphColRef.current.value;\n        if (newColor === \"1 and 1\"){\n            this.setState({fourGraphOne: true});\n            this.setState({threeGraphOne: true});\n        }\n        if (newColor === \"1 and 2\"){\n            this.setState({fourGraphOne: true});\n            this.setState({threeGraphOne: false});\n        }\n        if (newColor === \"2 and 1\"){\n            this.setState({fourGraphOne: false});\n            this.setState({threeGraphOne: true});\n        }\n        if (newColor === \"2 and 2\"){\n            this.setState({fourGraphOne: false});\n            this.setState({threeGraphOne: false});\n        }\n    }\n      onChange1(e){\n          this.setState({ [e.target.name]: e.target.value })\n      }\n      onChange10(e){\n        this.setState({line1Height:e})\n      }\n      onChange2(e){\n        this.setState({line2Height:e})\n      }\n      onChange3(e){\n        this.setState({line3Height:e})\n      }\n      onChange4(e){\n        this.setState({line4Height:e})\n      }\n      onChange5(e){\n        this.setState({line5Height:e})\n      }\n      onChange6(e){\n        this.setState({line6Height:e})\n      }\n      onChange7(e){\n        this.setState({line7Height:e})\n      }\n      onChange8(e){\n        this.setState({line8Height:e})\n      }\n  \n      changeStroke1() {\n        const newColor = this.stroke1Ref.current.value;\n        if (newColor === \"#FF0000\"){\n          this.setState({stroke1:\"#0000FF\"});\n          this.setState({stroke2:newColor});\n        }\n        if (newColor === \"#0000FF\"){      \n          this.setState({stroke1: \"#FF0000\"});\n          this.setState({stroke2:newColor});\n        }\n        if(newColor === \"Orange and Blue\"){\n          this.setState({stroke1:\"#0000FF\"});\n          this.setState({stroke2: \"#ffa500\"});\n        }\n        if(newColor === \"Blue and Orange\"){\n          this.setState({stroke1:\"#0000FF\"});\n          this.setState({stroke2: \"#ffa500\"});\n        }\n        if(newColor === \"Blue and Yellow\"){\n          this.setState({stroke1:\"#0000FF\"});\n          this.setState({stroke2: \"#FFD300\"});\n        }\n        if(newColor === \"Yellow and Blue\"){\n          this.setState({stroke1:\"#0000FF\"});\n          this.setState({stroke2: \"#FFD300\"});\n        }\n  \n  \n      }\n      changeGraphNumber(){\n        const newGraph = this.threeGraphRef.current.value;\n        if (newGraph === \"True\"){\n          this.setState({threeGraphs: true});\n        }\n        else{\n          this.setState({threeGraphs: false});\n        }\n    }\n  \n    rectReturn1(xPos, yPos){\n        var hard = \n        <rect\n        x = {xPos} y = {yPos} stroke = {\"#000000\"} fill = {this.state.stroke1} height = {200*this.state.rect1Arr[this.state.sliderPos]} width = {this.state.rectWidth} fillOpacity = \"0.7\" strokeOpacity = \"0.7\"></rect>;\n        return hard;\n      }\n      rectReturn2(xPos, yPos){\n        var hard = \n        <rect\n        x = {xPos} y = {yPos} stroke = {\"#000000\"} fill = {this.state.stroke2} height = {200*this.state.rect2Arr[this.state.sliderPos]} width = {this.state.rectWidth} fillOpacity = \"0.7\" strokeOpacity = \"0.7\"></rect>;\n        return hard;\n      }\n      rectReturn3(xPos, yPos){\n        var hard = \n        <rect\n        x = {xPos} y = {yPos} stroke = {\"#000000\"} fill = {this.state.stroke1} height = {200*this.state.rect3Arr[this.state.sliderPos]} width = {this.state.rectWidth} fillOpacity = \"0.7\" strokeOpacity = \"0.7\"></rect>;\n        return hard;\n      }\n      rectReturn4(xPos, yPos){\n        var hard = \n        <rect\n        x = {xPos} y = {yPos} stroke = {\"#000000\"} fill = {this.state.stroke2} height = {200*this.state.rect4Arr[this.state.sliderPos]} width = {this.state.rectWidth} fillOpacity = \"0.7\" strokeOpacity = \"0.7\"></rect>;\n        return hard;\n      }\n      rectReturn5(xPos, yPos){\n        var hard = \n        <rect\n        x = {xPos} y = {yPos} stroke = {\"#000000\"} fill = {this.state.stroke1} height = {200*this.state.rect5Arr[this.state.sliderPos]} width = {this.state.rectWidth} fillOpacity = \"0.7\" strokeOpacity = \"0.7\"></rect>;\n        return hard;\n      }\n      rectReturn6(xPos, yPos){\n        var hard = \n        <rect\n        x = {xPos} y = {yPos} stroke = {\"#000000\"} fill = {this.state.stroke2} height = {200*this.state.rect6Arr[this.state.sliderPos]} width = {this.state.rectWidth} fillOpacity = \"0.7\" strokeOpacity = \"0.7\"></rect>;\n        return hard;\n      }\n      rectReturn7(xPos, yPos){\n        var hard = \n        <rect\n        x = {xPos} y = {yPos} stroke = {\"#000000\"} fill = {this.state.stroke1} height = {200*this.state.rect7Arr[this.state.sliderPos]} width = {this.state.rectWidth} fillOpacity = \"0.7\" strokeOpacity = \"0.7\"></rect>;\n        return hard;\n      }\n      rectReturn8(xPos, yPos){\n        var hard = \n        <rect\n        x = {xPos} y = {yPos} stroke = {\"#000000\"} fill = {this.state.stroke2} height = {200*this.state.rect8Arr[this.state.sliderPos]} width = {this.state.rectWidth} fillOpacity = \"0.7\" strokeOpacity = \"0.7\"></rect>;\n        return hard;\n      }\n      rectReturn9(xPos, yPos){\n        var hard = \n        <rect\n        x = {xPos} y = {yPos} stroke = {\"#000000\"} fill = {\"#ffa500\"} height = {200*this.state.rect5Arr[this.state.sliderPos]} width = {this.state.rectWidth} fillOpacity = \"0.7\" strokeOpacity = \"0.7\"></rect>;\n        return hard;\n      }\n      rectReturn10(xPos, yPos){\n        var hard = \n        <rect\n        x = {xPos} y = {yPos} stroke = {\"#000000\"} fill = {\"#ffa500\"} height = {200*this.state.rect5Arr[this.state.sliderPos]} width = {this.state.rectWidth} fillOpacity = \"0.7\" strokeOpacity = \"0.7\"></rect>;\n        return hard;\n      }\n        line1(xPos1,xPos2,yPos1,yPos2){\n          var hard = \n          <line x1 = {xPos1 + 300} x2 = {300 + xPos2} y1 = {yPos1} y2 = {yPos2} stroke = \"#000000\"></line>;\n          return hard;\n        }\n        line2(xPos1,xPos2,yPos1,yPos2){\n          var hard = \n          <line x1 = {xPos1 + 300} x2 = {300 + xPos2} y1 = {yPos1} y2 = {yPos2} stroke = \"#808080\"></line>;\n          return hard;\n        }\n        textReturn1(xPos, yPos, tedxt){\n          var hard = <text x = {xPos} y = {yPos}>{tedxt}</text>;\n          return hard;\n        }\n  \n    showTradeOff(){\n        const threeGraphs = this.state.threeGraphs;\n        return(\n            \n            <div>\n        <div className=\"container\">\n          <h3>Question: </h3>\n          <div style={{ width: \"60%\", margin: \"auto\" }}>\n            <p style={{ textAlign: \"left\" }}>\n              {this.props.questionTO}\n            </p>\n          </div>\n        </div> \n            <svg width = {1400} height = {1000} style={{}} class = \"b\"> \n                {this.rectReturn1(500,450)}\n                {this.rectReturn2(580,450)}\n                {this.rectReturn3(900,450)}\n                {this.rectReturn4(980,450)}\n                {this.line1(173,187,650,650)}\n                {this.line1(173,187,488,488)}\n                {this.line1(173,187,528,528)}\n                {this.line1(173,187,568,568)}\n                {this.line1(173,187,608,608)}\n\n                {this.line1(176,184,633,633)}\n                {this.line1(176,184,468,468)}\n                {this.line1(176,184,508,508)}\n                {this.line1(176,184,548,548)}\n                {this.line1(176,184,588,588)}\n                {this.line1(173,187,488,488)}\n                {this.line1(173,187,528,528)}\n                {this.line1(173,187,568,568)}\n                {this.line1(173,187,608,608)}\n\n                {this.line1(176,184,633,633)}\n                {this.line1(176,184,468,468)}\n                {this.line1(176,184,508,508)}\n                {this.line1(176,184,548,548)}\n                {this.line1(176,184,588,588)}\n\n                {\n                threeGraphs\n                ? this.line1(330,330,160,360)\n\n\n                : this.line1(576,584,218,218)\n              }\n              {\n                threeGraphs\n                ? this.line1(330,330,258,258)\n\n\n                : this.line1(576,584,298,298)\n              }\n              {\n                threeGraphs\n                ? this.line1(326,334,298,298)\n\n\n                : this.line1(576,584,337,337)\n              }\n              {\n                threeGraphs\n                ? this.line1(326,334,338,338)\n\n\n                : this.line1(573,587,360,360)\n              }\n\n              {\n                threeGraphs\n                ? this.line1(326,334,218,218)\n\n\n                : this.line1(176,184,218,218)\n              }\n              \n              {\n                threeGraphs\n                ? this.line1(326,334,258,258)\n\n\n                : this.line1(176,184,258,258)\n              }\n\n              {\n                threeGraphs\n                ? this.line1(326,334,178,178)\n\n\n                : this.line1(576,584,258,258)\n              }\n\n\n\n\n              {\n                threeGraphs\n                ? this.line1(330,330,160,360)\n\n\n                : this.line1(573,587,198,198)\n              }\n              {\n                threeGraphs\n                ? this.line1(323,337,238,238)\n\n\n                : this.line1(573,587,238,238)\n              }\n              {\n                threeGraphs\n                ? this.line1(323,337,278,278)\n\n\n                : this.line1(573,587,278,278)\n              }\n              {\n                threeGraphs\n                ? this.line1(323,337,318,318)\n\n\n                : this.line1(573,587,318,318)\n              }\n\n              {\n                threeGraphs\n                ? this.line1(323,337,360,360)\n\n\n                : this.line1(176,184,218,218)\n              }\n\n\n               {\n                threeGraphs\n                ? this.line1(323,337,198,198)\n\n\n                : this.line1(173,187,198,198)\n              }\n              {\n                threeGraphs\n                ? this.line1(330,330,258,258)\n\n\n                : this.line1(173,187,238,238)\n              }\n              {\n                threeGraphs\n                ? this.line1(330,330,160,360)\n\n\n                : this.line1(173,187,278,278)\n              }\n              {\n                threeGraphs\n                ? this.line1(330,330,160,360)\n\n\n                : this.line1(173,187,318,318)\n              }\n\n              {\n                threeGraphs\n                ? this.line1(330,330,160,360)\n\n\n                : this.line1(176,184,218,218)\n              }\n\n\n\n\n\n\n\n\n\n\n\n              {\n                threeGraphs\n                ? this.line1(330,330,255,258)\n\n\n                : this.line1(176,184,298,298)\n              }\n              {\n                threeGraphs\n                ? this.line1(330,330,160,360)\n\n\n                : this.line1(176,184,337,337)\n              }\n              {\n                threeGraphs\n                ? this.line1(330,330,160,360)\n\n\n                : this.line1(173,187,360,360)\n              }\n\n\n              {\n                threeGraphs\n                ? this.line1(330,330,160,360)\n\n\n                : this.line1(576,584,218,218)\n              }\n                                {\n                threeGraphs\n                ? this.line1(330,330,160,360)\n\n\n                : this.line1(576,584,178,178)\n\n              }\n                                {\n                threeGraphs\n                ? this.line1(330,330,160,360)\n\n\n                : this.line1(176,184,178,178)\n              }\n\n                {this.line1(573,587,650,650)}\n                {this.line1(573,587,488,488)}\n                {this.line1(573,587,528,528)}\n                {this.line1(573,587,568,568)}\n                {this.line1(573,587,608,608)}\n\n                {this.line1(576,584,633,633)}\n                {this.line1(576,584,468,468)}\n                {this.line1(576,584,508,508)}\n                {this.line1(576,584,548,548)}\n                {this.line1(576,584,588,588)}\n\n\n                {\n                  this.state.threeGraphs\n                  ? this.rectReturn5(660,160)             \n                  : [\n                      (this.state.threeGraphOne\n                      ? this.rectReturn9(535,160)\n                      : this.rectReturn5(500,160)\n                      )\n                    ]\n                }\n                {\n                  this.state.threeGraphs\n                  ? this.rectReturn6(735,160)         \n                  : [\n                    (this.state.threeGraphOne\n                    ? <text></text>\n                    : this.rectReturn6(580,160)\n                    )\n                  ]     \n                }\n                {\n                  this.state.threeGraphs\n                  ? <text> </text>        \n                  : [\n                      (this.state.fourGraphOne\n                      ? this.rectReturn10(940,160)  \n                      : this.rectReturn7(900,160)   \n                      )\n                  ] \n                }\n               {\n                  this.state.threeGraphs\n                  ? <text> </text>        \n                  : [\n                      (this.state.fourGraphOne\n                      ? <text></text>\n                      : this.rectReturn8(980,160)   \n                      )\n                  ] \n                }\n                {this.line1(180,180,450,650)}\n                {this.line1(180,360,450,450)}\n                {this.line1(580,580,450,650)}\n                {this.line1(580,760,450,450)}\n                {\n                threeGraphs\n                ? this.line1(330,330,160,360)\n\n\n                : this.line1(180,180,160,360)\n\n              }\n            \n              {\n                threeGraphs\n                ? this.line1(330,510,160,160)\n\n                : this.line1(180,390,160,160)\n              }\n              {\n                threeGraphs\n                ? this.line1(0,0,0,0)\n\n\n                : this.line1(580,580,160,360)\n\n              }\n              {\n                threeGraphs\n                ? this.line1(0,0,0,0)\n\n                : this.line1(580 ,780,160,160)\n              }\n              </svg>\n              <svg class = \"e\" width = {1400} height = {1000}>\n              <text x = {200} y = {115}>Filler text for eventual question will go here</text>\n              <text x = {230} y = {265}>Legend:</text>\n              <text x = {305} y = {265}> White People</text>\n              <rect x = {290} y = {255} height = {10} width = {10} stroke = {this.state.stroke1} fill = {this.state.stroke1}></rect>\n              <text x = {415} y = {265}> Black People</text>\n              <rect x = {510} y = {255} height = {10} width = {10} stroke = {\"#ffa500\"} fill = {\"#ffa500\"}></rect>\n              <text x = {525} y = {265}>Both Groups</text>\n              <rect x = {400} y = {255} height = {10} width = {10} stroke = {this.state.stroke2} fill = {this.state.stroke2}></rect>\n\n              <text x = {150} y = {200}>Equal FPR</text>\n              <text x = {450} y = {200}>Equal Accuracy</text>\n              <text x = {55} y = {510}>0</text>\n              <text x = {50} y = {470}>20</text>\n              <text x = {50} y = {430}>40</text>\n              <text x = {50} y = {390}>60</text>\n              <text x = {50} y = {350}>80</text>\n              <text x = {45} y = {310}>100</text>\n              <text x = {450} y = {510}>0</text>\n              <text x = {445} y = {470}>20</text>\n              <text x = {445} y = {430}>40</text>\n              <text x = {445} y = {390}>60</text>\n              <text x = {445} y = {350}>80</text>\n              <text style = {{size:8}} x = {440} y = {310}>100</text>\n              {\n                threeGraphs\n                ? <text x = {185} y = {600}>100</text>\n\n                : <text x = {45} y = {600}>100</text>\n              }\n              {\n                threeGraphs\n                ? <text x = {190} y = {640}>80</text>\n\n                : <text x = {50} y = {640}>80</text>\n              }\n              {\n                threeGraphs\n                ? <text x = {190} y = {680}>60</text>\n\n                : <text x = {50} y = {680}>60</text>\n              }\n              {\n                threeGraphs\n                ? <text x = {190} y = {720}>40</text>\n\n                : <text x = {50} y = {720}>40</text>\n              }\n              {\n                threeGraphs\n                ? <text x = {190} y = {760}>20</text>\n\n                : <text x = {50} y = {760}>20</text>\n              }\n              {\n                threeGraphs\n                ? <text x = {190} y = {790}>0</text>\n                : <text x = {50} y = {800}>0</text>\n              }\n              {\n                threeGraphs\n                ? <text x = {190} y = {790}> </text>\n                : <text x = {445} y = {600}>100</text>\n              }\n               {\n                threeGraphs\n                ? <text x = {190} y = {640}></text>\n\n                : <text x = {452} y = {640}>80</text>\n              }\n              {\n                threeGraphs\n                ? <text x = {190} y = {680}></text>\n\n                : <text x = {452} y = {680}>60</text>\n              }\n              {\n                threeGraphs\n                ? <text x = {190} y = {720}></text>\n\n                : <text x = {452} y = {720}>40</text>\n              }\n              {\n                threeGraphs\n                ? <text x = {190} y = {760}></text>\n\n                : <text x = {452} y = {760}>20</text>\n              }\n              {\n                threeGraphs\n                ? <text x = {160} y = {790}> </text>\n                : <text x = {460} y = {800}>0</text>\n              }\n              <text x = {200} y = {310}>Accuracy Rate</text>\n              <text x = {625} y = {310}>False Positive Rate</text>\n              {\n                threeGraphs\n                ? <text x = {380} y = {610}>Graph 3</text>\n                : <text x = {200} y = {610}></text>\n              }\n              {\n                threeGraphs\n                ? <text> </text>\n                : <text x = {625} y = {610}></text>\n              }\n              <text x = {200} y = {310}></text>\n              <text x = {625} y = {310}></text>\n              {\n                threeGraphs\n                ? <text x = {380} y = {610}>Graph 3</text>\n                : <text x = {200} y = {610}>Total Accuracy Rate</text>\n              }\n              {\n                threeGraphs\n                ? <text> </text>\n                : <text x = {625} y = {610}>Total False Positive Rate</text>\n              }\n\n            </svg>\n\n            <input type=\"range\" min={0} max={(this.state.rect1Arr.length)-1} \n          className=\"tradeoff-slider\" onChange={this.onChange1}\n          name=\"sliderPos\" value={this.state.sliderPos} ref={this.sliderRef} list = \"tickmarks\"\n          style={{ width:300, left:550, top:650}}/>\n\n            </div>\n        )\n    }\n\n\n    render() {\n        return (\n\n        <div>\n         {this.showTradeOff()} <br/>\n        <span style={{ color: \"white\" }} ref={this.sliderRef}></span>\n        {\n          !this.state.submitted && \n          <div>\n            <input type=\"submit\" className=\"extraPadding\" value=\"I Confirm My Answer\"\n              onClick={this.onSubmit}/> <br/>\n            <p style={{ color: \"grey\", width: \"40%\", margin: \"auto\" }}>\n              Reminder: Once you click \"I Confirm My Answer\", your response to this question \n              will be recorded, and you won't be able to change your answer. \n            </p> <br/>\n            <input type=\"submit\" className=\"btn\" value=\"I Prefer Not to Answer\"\n              onClick={this.noAnswer}/>\n          </div>\n        }\n                \n            </div>\n        )\n    }\n}\n\n\n\n\n\n\n\n// Listing required functions / data\nTradeoffThree.propTypes = {\n    getExpt: PropTypes.func.isRequired,\n    expt: PropTypes.object.isRequired,\n    storeAnswer: PropTypes.func.isRequired\n  }\n\n// mapping Redux state to props that we can use in our component\n// expt contains all info from a given experiment \nconst mapStateToProps = state => ({\n   expt: state.expt\n })\n\nexport default connect(\n   mapStateToProps,\n   { getExpt, storeAnswer }\n )(TradeoffThree); \n\n/*\nclass TradeOff extends Component {\n    constructor() {\n      // putting super() here so that we can use this.blahblah\n      super();\n      this.sliderRef = React.createRef();\n      this.slider2Ref = React.createRef();\n      this.threeGraphRef = React.createRef();\n      this.rectRef = React.createRef();\n      this.svgRef = React.createRef();\n      this.graphColRef=React.createRef();\n      this.refLine1Ref = React.createRef();\n      this.refLine2Ref = React.createRef();\n\n      this.refLine4Ref = React.createRef();\n      this.refLine3Ref = React.createRef();\n      this.refLine6Ref = React.createRef();\n      this.refLine5Ref = React.createRef();\n      this.refLine7Ref = React.createRef();\n      this.refLine8Ref = React.createRef();\n\n      this.stroke1Ref = React.createRef();\n      this.areaRef = React.createRef();\n      this.onChange2 = this.onChange2.bind(this);\n      this.rectReturn1 = this.rectReturn1.bind(this);\n      this.rectReturn2 = this.rectReturn2.bind(this);\n      this.rectReturn3 = this.rectReturn3.bind(this);\n      this.rectReturn4 = this.rectReturn4.bind(this);\n      this.rectReturn5 = this.rectReturn5.bind(this);\n      this.rectReturn6 = this.rectReturn6.bind(this);\n      this.textReturn1 = this.textReturn1.bind(this);\n      this.changeGraphColNumber = this.changeGraphColNumber.bind(this);\n      this.line1 = this.line1.bind(this);\n      this.changeGraphNumber = this.changeGraphNumber.bind(this);\n      this.changeStroke1=this.changeStroke1.bind(this);\n\n      this.establishStateData = this.establishStateData.bind(this);\n      this.state = this.establishStateData(this.props.data);\n      this.onChange1 = this.onChange1.bind(this);\n\n  \n      this.resetState = this.resetState.bind(this);\n      this.onChange = this.onChange.bind(this);\n      this.onSubmit = this.onSubmit.bind(this);\n      this.showSlider = this.showSlider.bind(this);\n\n      this.state = this.initialState;\n    }\n  \n// setting the initial state of this component \nget initialState() {\n    const data = this.props.data;\n\n    return{\n        stroke1 : \"#FF0000\",\n        stroke2 : \"#0000FF\",\n        rect1Height : 100,\n        rect2Height : 100,\n        rect3Height : 100,\n        rect4Height: 100,\n        rect5Height:100,\n        rect6Height:100,\n        rect7Height:100,\n        rect8Height:100,\n        rectWidth : 40,\n        sliderPos:1,\n        sliderPos2:1,\n        rect1Arr: [0.76,0.76, 0.68, 0.65, 0.63, 0.62, 0.60, 0.59, 0.58, 0.57, 0.56, 0.56, 0.55, 0.54, 0.54, 0.53, 0.53, 0.52, 0.52, 0.52, 0.51, 0.51, 0.509 ,0.506, 0.503, 0.50],\n        rect2Arr: [0.399528104378295,\n          0.419528104378295,\n          0.436856783892294,\n          0.446993411594998,\n          0.454185463406292,\n          0.459764052189148,\n          0.464322091108996,\n          0.468175858104678,\n          0.471514142920291,\n          0.4744587188117,\n          0.477092731703146,\n          0.479475486198254,\n          0.481650770622995,\n          0.483651838314833,\n          0.485504537618676,\n          0.48722935940585,\n          0.48884282243429,\n          0.4903584379797,\n          0.491787398325699,\n          0.493139078857456,\n          0.494421411217145,\n          0.495641165321381,\n          0.496804165712253,\n          0.497915459776524,\n          0.498979450136994,\n          0.5],\n        rect3Arr: [0.75,\n          0.750612329917804,\n          0.751250724134086,\n          0.751917500572648,\n          0.752615300807172,\n          0.753347153269713,\n          0.754116552685526,\n          0.754927561004581,\n          0.75578493721218,\n          0.756694306539426,\n          0.75766238435649,\n          0.758697277428794,\n          0.7598088970111,\n          0.761009537626203,\n          0.762314708281047,\n          0.763744360978112,\n          0.76532476871298,\n          0.767091514247826,\n          0.769094485137193,\n          0.771406745334602,\n          0.774141568686512,\n          0.777488721956225,\n          0.781803953043001,\n          0.787885929664624,\n          0.798283137373023,\n          0.818283137373023],\n        rect4Arr: [0.75,\n          0.748775340164392,\n          0.747498551731828,\n          0.746164998854703,\n          0.744769398385657,\n          0.743305693460574,\n          0.741766894628947,\n          0.740144877990839,\n          0.73843012557564,\n          0.736611386921148,\n          0.73467523128702,\n          0.732605445142412,\n          0.7303822059778,\n          0.727980924747594,\n          0.725370583437905,\n          0.722511278043775,\n          0.719350462574041,\n          0.715816971504349,\n          0.711811029725613,\n          0.707186509330796,\n          0.701716862626977,\n          0.695022556087551,\n          0.686392093913997,\n          0.674228140670752,\n          0.653433725253954,\n          0.633433725253954],\n        rect5Arr: [0.689038170367751,\n          0.677038170367751,\n          0.638915075436954,\n          0.616614494491005,\n          0.600791980506157,\n          0.588519085183875,\n          0.578491399560208,\n          0.570013112169709,\n          0.56266888557536,\n          0.556190818614259,\n          0.550395990253079,\n          0.545153930363841,\n          0.540368304629411,\n          0.535965955707367,\n          0.531890017238912,\n          0.52809540930713,\n          0.524545790644563,\n          0.521211436444659,\n          0.518067723683462,\n          0.515094026513597,\n          0.512272895322282,\n          0.509589436292963,\n          0.507030835433044,\n          0.504585988491648,\n          0.502245209698614,\n          0.5],\n        rect6Arr: [0.75,0.750244931967122,\n          0.750500289653634,\n          0.750767000229059,\n          0.751046120322869,\n          0.751338861307885,\n          0.75164662107421,\n          0.751971024401832,\n          0.752313974884872,\n          0.75267772261577,\n          0.753064953742596,\n          0.753478910971518,\n          0.75392355880444,\n          0.754403815050481,\n          0.754925883312419,\n          0.755497744391245,\n          0.756129907485192,\n          0.75683660569913,\n          0.757637794054877,\n          0.758562698133841,\n          0.759656627474605,\n          0.76099548878249,\n          0.762721581217201,\n          0.76515437186585,\n          0.769313254949209,\n          0.781313254949209, \n          ],\n        rect7Arr: [0.4,0.8],\n        rect8Arr: [0.2,0.3],\n        line1Height:0.4,\n        line2Height:0.5,\n        line3Height:0.4,\n        line4Height:0.2,\n        line5Height:0.4,\n        line6Height:0.3,\n        line7Height:0.2,\n        line8Height:0.1,\n        threeGraphs: false,\n        threeGraphOne: true,\n        fourGraphOne: true\n\n    }\n    };\n  \n\n  resetState() {\n    this.setState(this.initialState);\n  }\n    // additional setup to communicate with Experiment.js\n  componentDidMount() {\n    const { childRef } = this.props;\n    childRef(this);\n    this.getData();\n    this.props.setWhichItem(\"trade-off\");\n  }\n  // additional setup to communicate with Experiment.js\n  componentWillUnmount() {\n    const { childRef } = this.props;\n    childRef(undefined);\n  }\n\n  // get experiment data from the database \n  getData() {\n    const db = this.props.expt.dbInfo.db;\n    const studyName = this.props.expt.dbInfo.col.split(\"-\")[0];\n    const exptName = this.props.expt.dbInfo.col.split(\"-\")[1];\n    this.props.getExpt(db, studyName, exptName);\n  }\n\n\n\n\n\n// Listing required functions / data\nTradeOff.propTypes = {\n    getExpt: PropTypes.func.isRequired,\n    expt: PropTypes.object.isRequired,\n    storeAnswer: PropTypes.func.isRequired\n  }\n\n// mapping Redux state to props that we can use in our component\n// expt contains all info from a given experiment \nconst mapStateToProps = state => ({\n   expt: state.expt\n })\n\nexport default connect(\n   mapStateToProps,\n   { getExpt, storeAnswer }\n )(TradeOff); \n\n*/","import React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nimport {\n  getExpt\n} from \"../actions/dataActions\";\n\nclass StaticText extends Component {\n  constructor(props) {\n    super(props);\n    this.state = this.initialState;\n    \n    // ###TODO###: change the name of the following binding if you see fit\n    // this binds the state to the showItem function below\n    this.showItem = this.showItem.bind(this);\n    // this.showImage = this.showImage.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  get initialState() {\n    return {\n      submitted: false\n    };\n  }\n\n  // additional setup to communicate with Experiment.js\n  componentDidMount() {\n    const { childRef } = this.props;\n    childRef(this);\n    this.getData();\n    this.props.setWhichItem(\"static-text\");\n  }\n\n  // additional setup to communicate with Experiment.js\n  componentWillUnmount() {\n    const { childRef } = this.props;\n    childRef(undefined);\n  }\n\n  // get experiment data from the database \n  getData() {\n    const db = this.props.expt.dbInfo.db;\n    const studyName = this.props.expt.dbInfo.col.split(\"-\")[0];\n    const exptName = this.props.expt.dbInfo.col.split(\"-\")[1];\n    this.props.getExpt(db, studyName, exptName);\n  }\n\n  // ###TODO###: add your own function(s) to show experiment item(s)\n  showItem() {\n    return (\n      <div className=\"container\">\n        <div style={{ width: \"60%\", margin: \"auto\" }}>\n          <p style={{ textAlign: \"left\" }}>\n            {this.props.text}\n          </p>\n        </div>\n      </div>\n    )\n  }\n\n  onSubmit() {\n    this.setState({ submitted: true });\n  }\n\n  // please render anything else you see fit\n  render() {\n    const imageURLs = this.props.imageURLs;\n    var Images = ({sth}) => <img src={''} />\n    if (imageURLs.length != 0) {\n      console.log(imageURLs);\n      Images = ({sth}) => (\n        imageURLs.map(imag => (\n          <div style={{ \n            width: \"30%\", \n            padding: \"10px\"\n          }}>\n            <img src={imag.parsedLink} style={{ width: \"100%\" }}/>\n          </div>\n        ))\n      );\n    }\n    return (\n      <div className=\"container\">\n        {this.showItem()} <br/>\n        <div style={{ \n          display: \"flex\", \n          flexDirection: \"row\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          flexWrap: \"wrap\" \n        }}>\n          <Images data={''}/>\n        </div>\n        {/* {\n          !this.state.submitted && \n          <div>\n            <input type=\"submit\" className=\"btn\" value=\"Ok\"\n              onClick={this.onSubmit}/> <br/>\n          </div>\n        } */}\n      </div>\n    )\n  }\n\n}\n\n// Listing required functions / data\nStaticText.propTypes = {\n  getExpt: PropTypes.func.isRequired,\n  expt: PropTypes.object.isRequired\n}\n\n// mapping Redux state to props that we can use in our component\n// expt contains all info from a given experiment \nconst mapStateToProps = state => ({\n  expt: state.expt\n})\n\n// connecting props to our component\n// export our component so that Experiment.js can use it \nexport default connect(\n  mapStateToProps,\n  { getExpt }\n)(StaticText);","import React, { Component } from 'react';\nimport './NormalCurve.css';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nimport {\n  getExpt,\n  storeAnswer\n} from \"../actions/dataActions\";\nimport { forceCenter } from 'd3';\n\nclass NormalCurveSurvey extends Component {\n  constructor(props) {\n    super(props);\n\n    this.sliderRef = React.createRef();\n    this.rectRef = React.createRef();\n    this.svgRef = React.createRef();\n    this.areaRef = React.createRef();\n    this.lengthRef = React.createRef();\n    this.startPos1Ref = React.createRef();\n    this.startPos2Ref = React.createRef();\n    this.tagRef1 = React.createRef();\n    this.tagRef2 = React.createRef();\n\n    this.dotReturn = this.dotReturn.bind(this);\n    this.curveArea = this.curveArea.bind(this);\n    this.triMouseDown = this.triMouseDown.bind(this);\n    this.triDrag = this.triDrag.bind(this);\n    this.triUp = this.triUp.bind(this);\n    this.curveArea = this.curveArea.bind(this);\n    this.svgColReturn = this.svgColReturn.bind(this);\n    this.svgColReturn = this.svgColReturn.bind(this);\n    this.updateTag1 = this.updateTag1.bind(this);\n    this.updateTag2 = this.updateTag2.bind(this);\n    this.displayTag1 = this.displayTag1.bind(this);\n    this.displayTag2 = this.displayTag2.bind(this);\n    this.hideTag1 = this.hideTag1.bind(this);\n    this.hideTag2 = this.hideTag2.bind(this);\n    this.returnTri1 = this.returnTri1.bind(this);\n    this.returnTri2 = this.returnTri2.bind(this);\n\n    this.resetState = this.resetState.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.noAnswer = this.noAnswer.bind(this);\n\n    this.state = this.initialState;\n  }\n\n  get initialState() {\n    const data = this.props.data;\n    // console.log(data);\n    const unitHeight = data[\"max-height\"];\n    const circRad = data[\"circle-radius\"];\n    const len1 = data[\"len1\"];\n    const len2 = data[\"len2\"];\n    const distancing = circRad * 4 - 1;\n    const height = (Math.ceil((distancing * unitHeight) / 50) + 1) * 50;\n\n    const colNumInit = data[\"axis-length\"];\n    const internalLength = colNumInit * distancing;\n    const edgeCol = Math.ceil(Math.max(len1, len2) / 2);\n    const edgeLength = Math.max(len1, len2) * distancing;\n\n    const ceilDist = height - 50;\n    const length = edgeLength + internalLength;\n    const colNum = Math.ceil(length / distancing);\n\n    const axisStart = Math.ceil(edgeLength / 2);\n    const axisStartCol = edgeCol;\n    // console.log(\"startCol\", axisStartCol);\n    const axisWidth = length - ((len1 / 2 + 1) * distancing + (len2 / 2 + 1) * distancing - 1);\n    const axisEndCol = internalLength / distancing;\n    const axisEnd = axisEndCol * distancing;\n\n    const triCent1 = Math.ceil(0.5 * len1) * distancing;\n    const triCent2 = Math.ceil(0.5 * len2) * distancing;\n    const triCentCol1 = Math.ceil(triCent1 / distancing);\n    const triCentCol2 = Math.ceil(triCent2 / distancing);\n    // console.log(\"triCentCol1: \", triCentCol1);\n    // console.log(\"triCentCol2: \", triCentCol2);\n\n    const variance1 = Math.abs(Math.ceil(len1 / 2) - axisStartCol);\n    const variance2 = Math.abs(Math.ceil(len2 / 2) - axisStartCol);\n\n    let edgeLim;\n    if (\"edgeLim\" in data) {\n      edgeLim = data[\"edgeLim\"];\n    }\n    else {\n      edgeLim = true;\n    }\n\n    const startPos1 = data[\"startPos1\"];\n    let distancing1 = startPos1 + variance1 - 1;\n    let col11 = startPos1 + variance1;\n    let col12 = startPos1 + len1 - 1;\n    let col11Rel = startPos1;\n\n    let variance = axisStartCol - variance1;\n    if (edgeLim) {\n      if (col11 < axisStartCol - 1) {\n        distancing1 = (axisStartCol - 1) * distancing;\n        col11 = 0;\n        col12 = len1 - 1;\n      }\n      else if (col11 + len1 + 1 > axisStartCol + axisEndCol) {\n        const endCol = axisEndCol - len1;\n        distancing1 = distancing * (axisStartCol + endCol - 1);\n        col11 = endCol;\n        col12 = endCol + len2 - 1;\n      }\n      else {\n        distancing1 = distancing * col11;\n        col11 = col11Rel - variance;\n        col12 = col11Rel - variance + len1 - 1;\n      }\n    }\n    else {\n      // col11 = col11 - 1;\n      if (col11 + triCentCol1 < axisStartCol) {\n        distancing1 = (variance1) * distancing;\n        col11 = 0;\n        col12 = len1 - 1;\n      }\n      else if (col11 + triCentCol1 > axisStartCol + axisEndCol) {\n        distancing1 = distancing * (variance1 + axisEndCol);\n        col11 = axisEndCol;\n        col12 = axisEndCol + len1 - 1;\n      }\n      else {\n        distancing1 = distancing * (col11);\n        col11 = col11Rel;\n        col12 = col11Rel + len1 - 1;\n      }\n    }\n\n    const startPos2 = data[\"startPos2\"];\n    let distancing2 = startPos2 + variance2 - 1;\n    let col21 = startPos2 + variance2;\n    let col22 = startPos2 + len2 - 1;\n    let col21Rel = startPos2;\n\n    variance = axisStartCol - variance2;\n    if (edgeLim) {\n      if (col21 < axisStartCol - 1) {\n        distancing2 = (axisStartCol - 1) * distancing;\n        col21 = 0;\n        col22 = len2 - 1;\n      }\n      else if (col21 + len2 + 1 > axisStartCol + axisEndCol) {\n        const endCol = axisEndCol - len2;\n        distancing2 = distancing * (axisStartCol + endCol);\n        col21 = endCol;\n        col22 = endCol + len2 - 1;\n      }\n      else {\n        distancing2 = distancing * col21;\n        col21 = col21Rel - variance;\n        col22 = col21Rel - variance + len2 - 1;\n      }\n    }\n    else {\n      // col21 = col21 - 1;\n      if (col21 + triCentCol2 < axisStartCol) {\n        distancing2 = (variance2) * distancing;\n        col21 = 0;\n        col22 = len2 - 1;\n      }\n      else if (col21 + triCentCol2 > axisStartCol + axisEndCol) {\n        distancing2 = distancing * (variance2 + axisEndCol - 1);\n        col21 = axisEndCol;\n        col22 = axisEndCol + len2 - 1;\n      }\n      else {\n        distancing2 = distancing * (col21);\n        col21 = col21Rel;\n        col22 = col21Rel + len2 - 1;\n      }\n    }\n\n    let colNumVal;\n    if (\"colNumVal\" in data) {\n      colNumVal = this.props.data[\"colNumVal\"];\n    }\n    else {\n      colNumVal = 1;\n    }\n\n    let tickNum;\n    let tickDist;\n    let rangeVal;\n    const axisLength = colNumInit * colNumVal;\n    // console.log(\"tickNum\", data[\"tickNum\"], axisLength % (parseInt(data[\"tickNum\"]) + 1) === 0);\n    if (\"tickNum\" in data && axisLength % (parseInt(data[\"tickNum\"]) + 1) === 0) {\n      tickNum = parseInt(data[\"tickNum\"]);\n      tickDist = colNumInit * distancing / (tickNum + 1);\n      rangeVal = axisLength / (tickNum + 1);\n    }\n    else {\n      tickNum = 0;\n      tickDist = axisLength;\n      rangeVal = axisLength;\n    }\n\n    let fixCurve1;\n    if (\"fixCurve1\" in data) {\n      fixCurve1 = data[\"fixCurve1\"];\n    }\n    else {\n      fixCurve1 = false;\n    }\n\n    let fixCurve2;\n    if (\"fixCurve2\" in data) {\n      fixCurve2 = data[\"fixCurve2\"];\n    }\n    else {\n      fixCurve2 = false;\n    }\n\n    let maxLength = len1;\n    if (len2 > len1) {\n      maxLength = len2;\n    }\n\n    let color1;\n    if (\"color1\" in data) {\n      color1 = data[\"color1\"];\n    }\n    else {\n      color1 = \"CornflowerBlue\";\n    }\n\n    let color2;\n    if (\"color2\" in data) {\n      color2 = data[\"color2\"];\n    }\n    else {\n      color2 = \"Crimson\";\n    }\n\n    return {\n      submitted: false,\n      axisLength: data[\"axis-length\"],\n      startPos1: data[\"startPos1\"],\n      startPos2: data[\"startPos2\"],\n      x: 0, y: 0, isDown: false,\n      rectX: 12.5,\n      down: false,\n      svgWidth: length,\n      svgHeight: height,\n      svgX: 6,\n      len1: len1,\n      colValHeiS: data[\"colValHeiS\"],\n      len2: len2,\n      colValHeiS2: data[\"colValHeiS2\"],\n      distancing: distancing,\n      distancing1 : distancing1,\n      distancing2: distancing2,\n      triCent1: triCentCol1 * distancing,\n      triCentCol1: triCentCol1,\n      triCent2: triCentCol2 * distancing,\n      triCentCol2: triCentCol2,\n      mousePointerRange: 0,\n      triDown: false,\n      col11: col11,\n      col12: col12,\n      col21: col21,\n      col22: col22,\n      colLim1: Math.round((length - (len1 * distancing)) / distancing),\n      colLim2: Math.round((length - (len2 * distancing)) / distancing),\n      overlapVals: data[\"overlapVals\"],\n      circRad: circRad,\n      ceilDist: ceilDist,\n      axisStart: axisStart,\n      axisStartCol: axisStartCol,\n      axisWidth: axisWidth,\n      axisEnd: axisEnd,\n      axisEndCol: axisEndCol,\n      edgeCol: edgeCol,\n      edgeLength: edgeLength,\n      colNum: colNumInit,\n      variance1: variance1,\n      variance2: variance2,\n      lowVal: this.props.data[\"lowVal\"],\n      showCoors: true,\n      colNumVal: colNumVal,\n      tickNum: tickNum,\n      tickDist: tickDist,\n      rangeVal: rangeVal,\n      edgeLim: edgeLim,\n      fixCurve1: fixCurve1,\n      fixCurve2: fixCurve2,\n      maxLength: maxLength,\n      color1: color1,\n      color2: color2\n    };\n  }\n\n  resetState() {\n    this.setState(this.initialState);\n  }\n\n  componentDidMount() {\n    const { childRef } = this.props;\n    childRef(this);\n    this.getData();\n    this.props.setWhichItem(\"normal-curve\");\n  }\n\n  componentWillUnmount() {\n    const { childRef } = this.props;\n    childRef(undefined);\n  }\n\n  getData() {\n    const db = this.props.expt.dbInfo.db;\n    const studyName = this.props.expt.dbInfo.col.split(\"-\")[0];\n    const exptName = this.props.expt.dbInfo.col.split(\"-\")[1];\n    this.props.getExpt(db, studyName, exptName);\n  }\n\n  onSubmit() {\n    const question = this.props.questionNCKey;\n    const key1 = this.props.graph1legend;\n    const key2 = this.props.graph2legend;\n    const answer = {\n      [key1]: this.state.col11,\n      [key2]: this.state.col21,\n      area: this.areaRef.current.innerHTML\n    }\n    this.props.storeAnswer(question, answer);\n    this.setState({ submitted: true });\n  }\n\n  noAnswer() {\n    const question = this.props.questionNCKey;\n    const answer = \"Prefer Not to Answer\";\n    this.props.storeAnswer(question, answer);\n    this.setState({ submitted: true });\n  }\n\n  dotReturn(xPos, yPos) {\n    const xPosOrig = xPos;\n\n    const CX = this.state.distancing1 + this.state.distancing * (xPosOrig + 1) + this.state.circRad - this.state.maxLength + 10;\n    const CY = this.state.ceilDist - this.state.distancing * yPos + 10;\n\n    var hard = \n    [<circle \n    onMouseEnter={e => this.displayTag1(e)}\n    onMouseLeave={e => this.hideTag1(e)}\n    onMouseMove={e => this.updateTag1(e)} \n    className=\"icon circle1\" \n    stroke={this.state.color1}\n    fill={this.state.color1}\n    fillOpacity=\"0.3\" \n    strokeOpacity=\"0.3\" cx={CX} cy={CY} r={this.state.circRad}>\n    </circle>,\n    <circle\n    onMouseEnter={e => this.displayTag1(e)}\n    onMouseLeave={e => this.hideTag1(e)}\n    onMouseMove={e => this.updateTag1(e)} \n    className=\"icon circle1\" \n    stroke={this.state.color1}\n    fill={this.state.color1}\n    fillOpacity=\"0\" \n    strokeOpacity=\"0\" cx={CX} cy={CY} r={this.state.distancing}>\n    </circle>];\n\n    return hard;\n  }\n\n  dotReturn2(xPos, yPos) {\n    const xPosOrig = xPos;\n\n    const CX = this.state.distancing2 + this.state.distancing * (xPosOrig + 1) + this.state.circRad - this.state.maxLength + 10;\n    const CY = this.state.ceilDist - this.state.distancing * yPos + 10;\n\n    var hard = \n    [<circle \n    onMouseEnter={e => this.displayTag2(e)}\n    onMouseLeave={e => this.hideTag2(e)}\n    onMouseMove={e => this.updateTag2(e)} \n    className=\"icon circle2\" \n    stroke={this.state.color2}\n    fill={this.state.color2}\n    fillOpacity=\"0.3\" \n    strokeOpacity=\"0.3\" cx={CX} cy={CY} r={this.state.circRad}>\n    </circle>,\n    <circle\n    onMouseEnter={e => this.displayTag2(e)}\n    onMouseLeave={e => this.hideTag2(e)}\n    onMouseMove={e => this.updateTag2(e)} \n    className=\"icon circle2\" \n    stroke={this.state.color2}\n    fill={this.state.color2}\n    fillOpacity=\"0\" \n    strokeOpacity=\"0\" cx={CX} cy={CY} r={this.state.distancing}>\n    </circle>];\n\n    return hard;\n  }\n\n  returnTri1() {\n    if (this.state.fixCurve1) {\n      return (null);\n    }\n    else {\n      return (\n        <polygon\n            points={\n              [\n                [this.state.triCent1 + this.state.distancing1 - 15, this.state.ceilDist + 35],\n                [this.state.triCent1 + this.state.distancing1 + 15, this.state.ceilDist + 35],\n                [this.state.triCent1 + this.state.distancing1, this.state.ceilDist + 20]\n              ]\n            }\n            onMouseDown={(e, num) => this.triMouseDown(e, 1)}\n          />\n      )\n    }\n  }\n\n  returnTri2() {\n    if (this.state.fixCurve2) {\n      return (null);\n    }\n    else {\n      return (\n        <polygon\n            points={\n              [\n                [this.state.triCent2 + this.state.distancing2 - 15, this.state.ceilDist + 35],\n                [this.state.triCent2 + this.state.distancing2 + 15, this.state.ceilDist + 35],\n                [this.state.triCent2 + this.state.distancing2, this.state.ceilDist + 20]\n              ]\n            }\n            onMouseDown={(e, num) => this.triMouseDown(e, 2)}\n          />\n      )\n    }\n  }\n\n  svgColReturn(e, dragger) {\n    let distFromCent;\n    let variance;\n    if (dragger === 1) {\n      distFromCent = this.state.triCentCol1;\n      variance = this.state.variance1;\n    }\n    else if (dragger === 2) {\n      distFromCent = this.state.triCentCol2;\n      variance = this.state.variance2;\n    }\n    var svg = this.svgRef.current;\n    var pt = svg.createSVGPoint();\n    pt.x = e.clientX;\n    var svgP = pt.matrixTransform(svg.getScreenCTM().inverse());\n    e.preventDefault();\n    var x = svgP.x - distFromCent + this.state.mousePointerRange;\n    var col = Math.round((x - this.state.axisStart) / this.state.distancing) + variance;\n    var colRelative = Math.round((x - this.state.axisStart) / this.state.distancing) - 1;\n    return [col, colRelative];\n  }\n\n  svgColPlacement(col, colRelative, dragger) {\n    // console.log(col, colRelative);\n    // console.log(this.state.axisStartCol);\n    // console.log(this.state.axisStart);\n    if (this.state.edgeLim) {\n      if (dragger === 2) {\n        const variance = this.state.axisStartCol - this.state.variance2;\n        if (col < this.state.axisStartCol - 1) {\n          // console.log(\"edge\");\n          this.setState({ distancing2: (this.state.axisStartCol - 1) * this.state.distancing, col21: 0, col22: this.state.len2 - 1 });\n        }\n        else if (col + this.state.len2 + 1 > this.state.axisStartCol + this.state.axisEndCol) {\n          const endCol = this.state.axisEndCol - this.state.len2;\n          this.setState({ distancing2: this.state.distancing * (this.state.axisStartCol + endCol - 1), col21: endCol, col22: endCol + this.state.len2 - 1 })\n        }\n        else {\n          this.setState({ distancing2: this.state.distancing * col, col21: colRelative - variance, col22: colRelative - variance + this.state.len2 - 1 });\n        }\n        this.curveArea();\n      }\n      else if (dragger === 1) {\n        const variance = this.state.axisStartCol - this.state.variance1;\n        if (col < this.state.axisStartCol - 1) {\n          this.setState({ distancing1: (this.state.axisStartCol - 1) * this.state.distancing, col11: 0, col12: this.state.len1 - 1 });\n        }\n        else if (col + this.state.len1 + 1 > this.state.axisStartCol + this.state.axisEndCol) {\n          const endCol = this.state.axisEndCol - this.state.len1;\n          this.setState({ distancing1: this.state.distancing * (this.state.axisStartCol + endCol - 1), col11: endCol, col12: endCol + this.state.len1 - 1 })\n        }\n        else {\n          this.setState({ distancing1: this.state.distancing * col, col11: colRelative - variance, col12: colRelative - variance + this.state.len1 - 1 });\n        }\n        this.curveArea();\n      }\n    }\n    else {\n      col = col - 1;\n      if (dragger === 2) {\n        // colRelative = colRelative - this.state.axisStartCol + this.state.variance2;\n        if (col + this.state.triCentCol2 < this.state.axisStartCol) {\n          this.setState({ distancing2: (this.state.variance2) * this.state.distancing, col21: 0, col22: this.state.len2 - 1 });\n        }\n        else if (col + this.state.triCentCol2 > this.state.axisStartCol + this.state.axisEndCol) {\n          this.setState({ distancing2: this.state.distancing * (this.state.variance2 + this.state.axisEndCol), col21: this.state.axisEndCol, col22: this.state.axisEndCol + this.state.len2 - 1 })\n        }\n        else {\n          this.setState({ distancing2: this.state.distancing * col, col21: colRelative, col22: colRelative + this.state.len2 - 1 });\n        }\n        this.curveArea();\n      }\n      else if (dragger === 1) {\n        // colRelative = colRelative - this.state.axisStartCol + this.state.variance1;\n        if (col + this.state.triCentCol1 < this.state.axisStartCol) {\n          this.setState({ distancing1: (this.state.variance1) * this.state.distancing, col11: 0, col12: this.state.len1 - 1 });\n        }\n        else if (col + this.state.triCentCol1 > this.state.axisStartCol + this.state.axisEndCol) {\n          this.setState({ distancing1: this.state.distancing * (this.state.variance1 + this.state.axisEndCol), col11: this.state.axisEndCol, col12: this.state.axisEndCol + this.state.len1 - 1 })\n        }\n        else {\n          this.setState({ distancing1: this.state.distancing * col, col11: colRelative, col12: colRelative + this.state.len1 - 1 });\n        }\n        this.curveArea();\n      }\n    }\n  }\n\n  triMouseDown(e, num) {\n    if (e.type === \"mousedown\") {\n      e.preventDefault();\n      var svgPre = this.svgRef.current;\n      // Set mousePointerRange so that we know the distance\n      // from the mouse tip to the x-value of the triangle\n      // tip\n      var ptPre = svgPre.createSVGPoint();\n      ptPre.x = e.clientX;\n      var svgPPre = ptPre.matrixTransform(svgPre.getScreenCTM().inverse());\n      if (num === 1) {\n        this.setState(prevState => ({\n          // rectX : svgP.x,\n          triDown: num,\n          mousePointerRange: prevState.triCent1 + this.state.distancing1 - svgPPre.x\n        }));\n      }\n      else if (num === 2) {\n        this.setState(prevState => ({\n          triDown: num,\n          mousePointerRange: prevState.triCent2 + this.state.distancing2 - svgPPre.x\n        }));\n      }\n    }\n  }\n\n  triDrag(e) {\n      e.preventDefault();\n      var dragger = this.state.triDown;\n      var cols = this.svgColReturn(e, dragger);\n      var col = cols[0];\n      var colRelative = cols[1]\n      this.svgColPlacement(col, colRelative, dragger);\n      this.curveArea();\n  }\n\n  triUp(e) {\n    if (this.state.triDown) {\n      this.setState({ triDown: false });\n    }\n  }\n\n  curveArea() {\n    let col11;\n    let col12;\n    let col21;\n    let col22;\n\n    if (this.state.edgeLim) {\n      col11 = this.state.col11;\n      col12 = this.state.col12;\n      col21 = this.state.col21;\n      col22 = this.state.col22;\n    }\n    else {\n      col11 = this.state.col11 + this.state.variance1;\n      col12 = this.state.col12 + this.state.variance1;\n      col21 = this.state.col21 + this.state.variance2;\n      col22 = this.state.col22 + this.state.variance2;\n    }\n\n    if (col11 > col22 || col12 < col21) {\n      this.areaRef.current.innerHTML = 0;\n    }\n    else {\n      this.areaRef.current.innerHTML = this.state.overlapVals[Math.abs(col22 - col11)];\n    }\n  }\n\n  updateTag1(e) {\n    e.preventDefault()\n    var x = e.clientX,\n        y = e.clientY;\n\n    const elem = this.tagRef1.current;\n    elem.style.top = (y + 5) + 'px';\n    elem.style.left = (x + 5) + 'px';\n  }\n\n  updateTag2(e) {\n    e.preventDefault();\n    var x = e.clientX,\n        y = e.clientY;\n\n    const elem = this.tagRef2.current;\n    elem.style.top = (y + 5) + 'px';\n    elem.style.left = (x + 5) + 'px';\n  }\n\n  displayTag1(e) {\n    e.preventDefault();\n    this.tagRef1.current.style.display = \"block\";\n  }\n\n  displayTag2(e) {\n    e.preventDefault();\n    this.tagRef2.current.style.display = \"block\";\n  }\n\n  hideTag1(e) {\n    e.preventDefault();\n    this.tagRef1.current.style.display = \"none\";\n  }\n\n  hideTag2(e) {\n    e.preventDefault();\n    this.tagRef2.current.style.display = \"none\";\n  }\n\n  render() {\n    return (\n      <div \n        onMouseMove={e => this.triDrag(e)}\n        onMouseUp={e => this.triUp(e)}>\n        <div className=\"container\">\n          <h3>Question: </h3>\n          <div style={{ width: \"60%\", margin: \"auto\" }}>\n            <p style={{ textAlign: \"left\" }}>\n              {this.props.questionNC}\n            </p>\n          </div>\n        </div> \n        <svg width={this.state.svgWidth} height={this.state.svgHeight + 10} ref={this.svgRef}>\n          {/* <rect opacity=\"0.2\" width=\"100%\" height=\"100%\" fill=\"red\"/> */}\n          {[...Array(this.state.len1).keys()].map(\n            (col) =>\n              [...Array(this.state.colValHeiS[col]).keys()].map(\n                (row) => this.dotReturn(col, row)\n              )\n          )}\n          {[...Array(this.state.len2).keys()].map(\n            (col) =>\n              [...Array(this.state.colValHeiS2[col]).keys()].map(\n                (row) => this.dotReturn2(col, row)\n              )\n          )}\n          {/* <rect width={this.state.cursorWidth} fill=\"#000\" x={this.state.rectX} y=\"5\" height=\"150\"\n                    onMouseDown={e => this.dragMouseDown(e)}\n                    \n                    // onMouseMove={e => this.elementDrag(e)}\n                    ref={this.rectRef}\n                    ></rect> */}\n          <rect width={this.state.axisEnd}\n            height=\"2\"\n            fill=\"black\"\n            x={this.state.axisStartCol * this.state.distancing - 1}\n            y={this.state.ceilDist + 20} />\n          <rect width=\"2\"\n            height=\"20\"\n            fill=\"black\"\n            x={this.state.axisStartCol * this.state.distancing - 1}\n            y={this.state.ceilDist + 20} />\n          <rect width=\"2\"\n            height=\"20\"\n            fill=\"black\"\n            x={this.state.axisEnd + this.state.axisStartCol * this.state.distancing - 1}\n            y={this.state.ceilDist + 20} />\n          {/* triangle rendering below */}\n          {this.returnTri1()}\n          {this.returnTri2()}\n          {[...Array(this.state.tickNum).keys()].map(\n            (tick) =>\n              <rect\n                width=\"2\"\n                height=\"20\"\n                fill=\"black\"\n                x={this.state.axisStart + (this.state.tickDist * (tick + 1)) - 1} \n                y={this.state.ceilDist + 20}\n              />\n          )}\n          {[...Array(this.state.tickNum).keys()].map(\n            (tick) =>\n            <text \n            textAnchor=\"middle\" \n            x={this.state.axisStart + (this.state.tickDist * (tick + 1)) - 1} \n            y={this.state.ceilDist + 55}>\n              {this.state.lowVal + (this.state.rangeVal * (tick + 1))}\n            </text>\n          )}\n          <text text-anchor=\"middle\" x={this.state.axisStart} y={this.state.ceilDist + 55}>{this.state.lowVal}</text>\n          <text text-anchor=\"middle\" x={this.state.axisStart + this.state.axisEnd} y={this.state.ceilDist + 55}>{this.state.lowVal + this.state.colNum}</text>\n          Sorry, please use a different browser.\n        </svg>\n        <br />\n        <div class=\"boxed\">\n          <div class=\"color-box\" style={{ backgroundColor: this.state.color1 }}></div>\n          {this.props.graph1}\n          <br />\n          <div class=\"color-box\" style={{ backgroundColor: this.state.color2 }}></div>\n          {this.props.graph2}\n        </div>\n        <br />\n        <h4>First x-coordinate: {this.state.col11} | Second x-coordinate: {this.state.col21} </h4>\n        <span style={{ color: \"white\" }} ref={this.areaRef}></span>\n        {\n          !this.state.submitted && \n          <div>\n            <input type=\"submit\" className=\"extraPadding\" value=\"I Confirm My Answer\"\n              onClick={this.onSubmit}/> <br/>\n            <p style={{ color: \"grey\", width: \"40%\", margin: \"auto\" }}>\n              Reminder: Once you click \"I Confirm My Answer\", your response to this question \n              will be recorded, and you won't be able to change your answer. \n            </p> <br/>\n            <input type=\"submit\" className=\"btn\" value=\"I Prefer Not to Answer\"\n              onClick={this.noAnswer}/>\n          </div>\n        }\n        <span \n        className=\"tag1\" \n        ref={this.tagRef1}\n        >{this.props.graph1}</span>\n        \n        <span \n        className=\"tag2\" \n        ref={this.tagRef2}\n        >{this.props.graph2}</span>\n      </div>\n    )\n  }\n}\n\nNormalCurveSurvey.propTypes = {\n  getExpt: PropTypes.func.isRequired,\n  expt: PropTypes.object.isRequired,\n  storeAnswer: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = state => ({\n  expt: state.expt\n})\n\nexport default connect(\n  mapStateToProps,\n  { getExpt, storeAnswer }\n)(NormalCurveSurvey);","import React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nimport './HistSlider.css';\n\nimport {\n  getExpt,\n  storeAnswer\n} from \"../actions/dataActions\";\n\nclass Histogram extends Component {\n  constructor(props) {\n    super(props);\n    \n    this.sliderRef = React.createRef();\n    this.graphRef = React.createRef();\n    this.qRef = React.createRef();\n    this.minRef = React.createRef();\n    this.maxRef = React.createRef();\n\n    this.state = this.initialState;\n\n    this.onChange = this.onChange.bind(this);\n    this.resetState = this.resetState.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  get initialState() {\n    return {\n      submitted: false,\n      checked: false,\n      minVal: Number,\n      maxVal: Number,\n      sliderPos: Number\n    }\n  }\n\n    resetState() {\n    this.setState(this.initialState);\n  }\n\n  componentDidMount() {\n    const { childRef } = this.props;\n    childRef(this);\n    this.getData();\n    this.drawChart();\n    this.props.setWhichItem(\"threshold\");\n  }\n\n  componentWillUnmount() {\n    const { childRef } = this.props;\n    childRef(undefined);\n  }\n\n  getData() {\n    const db = this.props.expt.dbInfo.db;\n    const studyName = this.props.expt.dbInfo.col.split(\"-\")[0];\n    const exptName = this.props.expt.dbInfo.col.split(\"-\")[1];\n    this.props.getExpt(db, studyName, exptName);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value })\n  }\n\n  onSubmit() {\n    const question = this.props.questionHistKey;\n    const answer = this.state.sliderPos;\n    this.props.storeAnswer(question, answer);\n    this.setState({ submitted: true });\n  }\n\n  drawChart() {\n    const data = this.props.histData.data;\n\n    const svg = d3.select(this.graphRef.current).append(\"svg\")\n      .attr(\"width\", this.props.histData.width)\n      .attr(\"height\", this.props.histData.height)\n\n    svg.selectAll(\"rect\")\n      .data(data)\n      .enter()\n      .append(\"rect\")\n      .attr(\"x\", (d, i) => i * this.props.histData.width / data.length)\n      .attr(\"y\", (d, i) => this.props.histData.height - 10 * d)\n      .attr(\"width\", this.props.histData.width / data.length - 10)\n      .attr(\"height\", (d, i) => d * 10)\n      .attr(\"fill\", \"#4CAF50\")\n      .attr(\"opacity\", 0.5)\n\n    svg.selectAll(\"text\")\n      .data(data)\n      .enter()\n      .append(\"text\")\n      .text((d) => d)\n      .attr(\"x\", (d, i) => i * this.props.histData.width / data.length)\n      .attr(\"y\", (d, i) => this.props.histData.height - (10 * d) - 3)\n  }\n\n  render() {\n    const vertAlign = this.props.histData.height / 2;\n    // const step_size = this.props.width / this.props.data.length;\n    return (\n      <div>\n        <b>Question: </b> <br/>\n        {this.props.questionHist}\n        <div ref={this.graphRef}\n          style={{ \n            position: \"relative\", \n            width: this.props.histData.width, \n            margin: \"auto\" }}>\n          <div \n            style={{ \n              position: \"absolute\",\n              top: vertAlign}}>\n            <input type=\"range\" min={this.props.histLowRange} max={this.props.histHighRange} \n              className=\"hist-slider\" onChange={this.onChange}\n              name=\"sliderPos\" value={this.state.sliderPos}\n              step={this.props.histData.step} ref={this.sliderRef}\n              style={{ width: this.props.histData.width }}/>\n          </div>\n        </div>\n        {this.props.histLowRange}\n        <input type=\"range\" class=\"dummy-slider\" \n          style={{ width: this.props.histData.width }} onChange={this.onChange}\n          name=\"sliderPos\" value={this.state.sliderPos} \n          step={this.props.histData.step}\n          min={this.props.histLowRange} max={this.props.histHighRange} />\n        {this.props.histHighRange}\n        <br/>\n        Slider Position: {this.state.sliderPos}\n        \n        <br/><br/>\n          {\n          !this.state.submitted && \n          <div>\n            <input type=\"submit\" className=\"btn\" value=\"I Confirm My Answer\"\n              onClick={this.onSubmit}/> <br/>\n            <p style={{ color: \"grey\" }}>\n              Reminder: Once you click \"I Confirm My Answer\", your response to this question \n              will be recorded, and you won't be able to change your answer. \n            </p>\n          </div>\n        }\n      </div>\n    )\n  }\n}\n\nHistogram.propTypes = {\n  getExpt: PropTypes.func.isRequired,\n  expt: PropTypes.object.isRequired,\n  storeAnswer: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = state => ({\n  expt: state.expt\n})\n\nexport default connect(\n  mapStateToProps,\n  { getExpt, storeAnswer }\n)(Histogram);","import React, { Component } from 'react';\nimport axios from \"axios\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nimport { \n  getExpt,\n  sendExpt,\n  setNumQ,\n  isFinalQ\n} from \"../actions/dataActions\";\n\nimport Slider from \"../items/Slider\";\nimport TradeOff from \"../items/TradeOff\";\nimport TradeoffTwo from \"../items/TradeoffTwo\";\nimport TradeoffThree from \"../items/TradeoffThree\";\nimport StaticText from \"../items/StaticText\";\n// import NormalCurve from \"../items/NormalCurve.jsx\";\nimport NormalCurveSurvey from \"../items/NormalCurveSurvey\";\nimport Histogram from \"../items/Histogram\";\n\n/**\n * This component displays an experiment question\n */\nclass Experiment extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      whichItem: \"\"\n    }\n\n    this.onNextQuestion = this.onNextQuestion.bind(this);\n    this.onFinalSubmit = this.onFinalSubmit.bind(this);\n    this.whichSubmit = this.whichSubmit.bind(this);\n    this.setWhichItem = this.setWhichItem.bind(this);\n  }\n\n  componentDidMount() {\n    this.getData();\n    const username = this.props.match.params.username;\n    const expt = this.props.match.params.expt;\n    // if the store doesn't have participant ID, we ask participants to \n    // re-enter their ID \n    // (this happens if users close the tab then open it again or refresh)\n    if (!this.props.expt.participantID) {\n      alert(\"Please enter your unique ID\");\n      this.props.history.push(\"/expt/\" + username + \"/\" + expt);\n    }\n  }\n\n  // method to push user to the next question \n  // similar to an iterator\n  nextQuestion() {\n    const username = this.props.match.params.username;\n    const expt = this.props.match.params.expt;\n    const nextQ = this.props.expt.questionKeys[this.props.expt.numQ + 1];\n    const lastQ = this.props.expt.questionKeys[this.props.expt.questionKeys.length - 1];\n    // decide if the next question is the final question\n    if (nextQ == lastQ) {\n      this.props.isFinalQ(true);\n    }\n    this.props.setNumQ(this.props.expt.numQ + 1);\n    this.props.history.push(\"/expt/\" + username + \"/\" + expt + \n      \"/\" + nextQ.toString());\n  }\n\n  // will be triggered when the next question is not the final question\n  onNextQuestion() {\n    // ###TODO###: add more if statements below that follow the templates \n    if (this.childSlider) {\n      this.childSlider.resetState();\n      this.nextQuestion();\n    };\n    if (this.childNormalCurve) {\n      this.childNormalCurve.resetState();\n      this.nextQuestion();\n    }; \n    if (this.childTradeOff) {\n      this.childTradeOff.resetState();\n      this.nextQuestion();\n    }; \n    if (this.childTradeoffTwo) {\n      this.childTradeoffTwo.resetState();\n      this.nextQuestion();\n    }; \n    if (this.childTradeoffThree) {\n      this.childTradeoffThree.resetState();\n      this.nextQuestion();\n    }; \n    if (this.childStaticText) {\n      this.nextQuestion();\n    };\n  }\n\n  // will be triggered when the next question is the final question \n  onFinalSubmit() {\n    this.props.history.push(\"/success\");\n  }\n\n  // decides which button to show for the next question based whether the next\n  // question is the final question of the experiment\n  whichSubmit() {\n    return (\n      <div>\n        {\n          !this.props.expt.isFinalQ ? \n          <div>\n            {/* Please click \"I Confirm My Answer\" above before clicking \"Next Question\" <br/><br/> */}\n            <input type=\"submit\" className=\"extraPadding\" value=\"Next Question\"\n              onClick={this.onNextQuestion}/> \n            <br/><br/><br/><br/><br/><br/>\n          </div> :\n          <div>\n            {\n              this.state.whichItem == \"static-text\"\n              ?\n              <></>\n              :\n              <div>\n                Please click \"I Confirm My Answer\" above before clicking \"Submit\" <br/><br/>\n              </div>\n            }\n            <div>\n                This is the final page. <p></p>\n                <input type=\"submit\" className=\"extraPadding\" value=\"Submit\"\n                  onClick={this.onFinalSubmit}/>\n                <div>\n                  <br/><br/><br/><br/><br/><br/>\n                </div>\n              </div>\n          </div>\n        }\n      </div>\n    )\n  }\n\n  getData() {\n    const username = this.props.match.params.username;\n    // there will be problems if user's study name / experiment name inclues \"-\"\n    const studyName = this.props.match.params.expt.split(\"-\")[0];\n    const exptName = this.props.match.params.expt.split(\"-\")[1];\n    this.props.getExpt(username, studyName, exptName);\n  }\n\n  /**\n   * Set the whichItem field of setState. \n   * This function is used by all experiment items to let Experiment.js know\n   * which item is currently on display.\n   * @param {String} itemName Name of the item that's currently on display\n   */\n  setWhichItem(itemName) {\n    this.setState({ whichItem: itemName });\n  }\n\n  displayExpt() {\n    const username = this.props.match.params.username;\n    const expt = this.props.expt.exptToDisplay;\n    const key = this.props.match.params.qKey;\n    if (expt[key]) {\n      // ###TODO### add more if statements here for your experiment type\n      // follow the following format\n      // ATTENTION: do NOT call methods (especially those associated with API)\n      // inside these cases. React keeps rendering displayExpt(), which means\n      // your method(s) will be called repeatedly => not good. \n      switch(expt[key][\"Type\"]) {\n        case \"slider\":\n          // this.setState({ whichItem: \"slider\" });\n          const lowRange = expt[key][\"lowRange\"];\n          const highRange = expt[key][\"highRange\"];\n          const question = expt[key][\"Question\"];\n          const sliderCSVKey = expt[key][\"slider-key\"];\n          return (\n            <div className=\"container\">\n              <Slider childRef={ref => (this.childSlider = ref)}\n                question={question} sliderCSVKey={sliderCSVKey}\n                lowRange={lowRange} highRange={highRange} setWhichItem={this.setWhichItem}/>\n              <br/>\n              {/* keep the following line */}\n              <this.whichSubmit />\n            </div>\n          )\n          case \"tradeoff\":\n            // this.setState({ whichItem: \"tradeoff\" });\n            const questionTO = expt[key][\"QuestionTO\"];\n\n\n            const sliderPos =expt[key][\"sliderPos\"]; \n    \n            return (\n              <div className=\"container\">\n              <TradeOff childRef={ref => (this.childStaticText = ref)}\n                 questionTO={questionTO}\n                 sliderPos={sliderPos} setWhichItem={this.setWhichItem}/>\n                <br/>\n                <this.whichSubmit />\n              </div>\n            )          \n            case \"tradeoffthree\":\n              // this.setState({ whichItem: \"tradeoff\" });\n              const questionTOTHR = expt[key][\"QuestionTO\"];\n\n\n              const sliderPosThree =expt[key][\"sliderPos\"]; \n      \n              return (\n                <div className=\"container\">\n                <TradeOff childRef={ref => (this.childStaticText = ref)}\n                  questionTO={questionTO}\n                  sliderPos={sliderPosThree} setWhichItem={this.setWhichItem}/>\n                  <br/>\n                  <this.whichSubmit />\n                </div>\n            )          \n            case \"tradeofftwo\":\n              // this.setState({ whichItem: \"tradeoff\" });\n              const questionTOTwo = expt[key][\"QuestionTO\"];\n  \n  \n              const sliderPostwo =expt[key][\"sliderPos\"]; \n      \n              return (\n                <div className=\"container\">\n                <TradeoffTwo childRef={ref => (this.childStaticText = ref)}\n                   questionTO={questionTOTwo}\n                   sliderPos={sliderPostwo} setWhichItem={this.setWhichItem}/>\n                  <br/>\n                  <this.whichSubmit />\n                </div>\n              )          \n          \n        case \"static-text\":\n          // this.setState({ whichItem: \"static-text\" });\n          const text = expt[key][\"Static Text\"];\n          var imageURLs = [];\n          if (Object.keys(expt[key]).includes(\"Images\")) {\n            imageURLs = expt[key][\"Images\"];\n          }\n          return (\n            <div className=\"container\">\n              <StaticText childRef={ref => (this.childStaticText = ref)}\n                text={text} imageURLs={imageURLs} setWhichItem={this.setWhichItem}/>\n              <br/>\n              <this.whichSubmit />\n            </div>\n          )\n        case \"normal-curve\":\n          // this.setState({ whichItem: \"normal-curve\" });\n          const questionNC = expt[key][\"Question\"];\n          const graph1 = expt[key][\"graph1key\"];\n          const graph2 = expt[key][\"graph2key\"];\n          const questionNCKey = expt[key][\"normal-curve-question-key\"];\n          const graph1legend = expt[key][\"normal-curve-legend-key1\"];\n          const graph2legend = expt[key][\"normal-curve-legend-key2\"];\n          const dataFileName = expt[key][\"FileName\"];\n          const dataFileContent = expt[key][\"FileContent\"];\n          return (\n            <div className=\"container\">\n              <NormalCurveSurvey childRef={ref => (this.childNormalCurve = ref)} \n                questionNC={questionNC} graph1={graph1} graph2={graph2} \n                questionNCKey={questionNCKey} \n                graph1legend={graph1legend}\n                graph2legend={graph2legend}\n                fileName={dataFileName} data={dataFileContent} \n                setWhichItem={this.setWhichItem}/>\n              <br/>\n              <this.whichSubmit />\n            </div>\n          )\n        case \"threshold\":\n          // this.setState({ whichItem: \"threshold\" });\n          const questionHist = expt[key][\"Question\"];\n          const questionHistKey = expt[key][\"threshold-key\"];\n          const histLowRange = expt[key][\"lowRange\"];\n          const histHighRange = expt[key][\"highRange\"];\n          const histFileContent = expt[key][\"FileContent\"];\n          return (\n            <div className=\"container\">\n              <Histogram childRef={ref => (this.childHistogram = ref)} \n                questionHist={questionHist} \n                questionHistKey={questionHistKey}\n                histLowRange={histLowRange}\n                histHighRange={histHighRange} histData={histFileContent} \n                setWhichItem={this.setWhichItem}/>\n              <br/>\n              <this.whichSubmit />\n            </div>\n          )\n        default: \n          return (<div>Unknown Experiment Type</div>)\n      }\n    }\n  }\n\n\n  render() {\n    const exptName = this.props.match.params.expt;\n    const participant = this.props.expt.participantID;\n    return (\n      <div className=\"container\">\n      Experiment name: <br/>\n      <b>{exptName}</b>\n      <br/>\n      Participant ID: <br/>\n      <b>{participant}</b>\n      <br/><br/>\n      {this.displayExpt()}\n    </div>\n    )\n  }\n}\n\nExperiment.propTypes = {\n  getExpt: PropTypes.func.isRequired,\n  expt: PropTypes.object.isRequired,\n  participantID: PropTypes.string.isRequired,\n  sendExpt: PropTypes.func.isRequired,\n  setNumQ: PropTypes.func.isRequired,\n  isFinalQ: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  expt: state.expt,\n  participantID: state.participantID\n})\n\nexport default connect(\n  mapStateToProps,\n  { getExpt, sendExpt, setNumQ, isFinalQ }\n)(Experiment);\n","import React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nimport {\n  sendExpt\n} from \"../actions/dataActions\"\n\n/**\n * Store answers\n * Lead participants to the demographics qualtrics survey\n */\nclass Success extends Component {\n  componentDidMount() {\n    // console.log(this.props);\n    const username = this.props.expt.dbInfo.db;\n    const expt = this.props.expt.dbInfo.col;\n    // console.log(this.props.expt.exptToDisplay);\n    if (!this.props.expt.answer.length == 0) {\n      const finalObj = {\n        participantID: this.props.expt.participantID\n      }\n      this.props.expt.answer.map(entry => {\n        finalObj[entry.que] = entry.ans\n      })\n      finalObj[\"condition\"] = this.props.expt.exptToDisplay.condition;\n      // console.log(finalObj);\n      this.props.sendExpt(username, expt, finalObj);\n    }\n  }\n\n  render() {\n    const link = this.props.expt.exptToDisplay.link;\n    const participantID = this.props.expt.participantID;\n    return (\n      <div className=\"container\">\n        <h1>Thank you for your submission!</h1> <br/>\n        You are <b>67%</b> done with the experiment! Now you will need to:  <br/><br/>\n        1. Please copy your ID shown below: <br/>\n        <b>{participantID}</b> <br/> \n        2. Please click on this <a href={link} target=\"_blank\">link</a>, paste your ID in the first page and complete the final survey. \n      </div>\n    )\n  }\n}\n\nSuccess.propTypes = {\n  sendExpt: PropTypes.func.isRequired,\n  expt: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n  expt: state.expt,\n})\n\nexport default connect(\n  mapStateToProps,\n  { sendExpt }\n)(Success);\n","import React, { Component } from 'react';\nimport axios from \"axios\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nimport { \n  storeDBInfo,\n  storePartID, \n  getExpt,\n  storeQKeys,\n  setNumQ,\n  isFinalQ\n} \nfrom \"../actions/dataActions\";\n\n/**\n * A preview version for researchers. \n */\nclass PreviewEnterID extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ParticipantID: ''\n    }\n\n    this.onChange = this.onChange.bind(this);\n    this.showExpt = this.showExpt.bind(this);\n  }\n\n  componentDidMount() {\n    this.getData();\n\n    const username = this.props.match.params.username;\n    const studyExpt = this.props.match.params.expt;\n    this.props.storeDBInfo(username, studyExpt);\n  }\n\n  getData() {\n    const username = this.props.match.params.username;\n    const studyName = this.props.match.params.expt.split(\"-\")[0];\n    const exptName = this.props.match.params.expt.split(\"-\")[1];\n    this.props.getExpt(username, studyName, exptName);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value })\n  }\n\n  showExpt() {\n    this.props.storePartID(this.state.ParticipantID);\n    const username = this.props.match.params.username;\n    const studyExpt = this.props.match.params.expt;\n    var questionKeys = [];\n    if (this.props.expt.exptToDisplay) {\n      const allKeys = Object.keys(this.props.expt.exptToDisplay);\n      console.log(allKeys);\n      // in the JSON file each question must have index q0, q1, q2, ... \n      questionKeys = allKeys.filter(str => str.charAt(0) == \"q\");\n      this.props.storeQKeys(questionKeys);\n    }\n    // console.log(questionKeys);\n    if (questionKeys.length == 1) {\n      this.props.isFinalQ(true);\n    }\n    this.props.setNumQ(0);\n    this.props.history.push(\"/preview/\" + username + \"/\" + studyExpt + \n      \"/\" + questionKeys[0]);\n  }\n\n  render() {\n    const exptName = this.props.match.params.expt;\n      return (\n        <div className=\"container\">\n        Experiment name: <br/>\n        <b>{exptName}</b>\n        <br/><br/>\n        Enter your unique ID: <p></p>\n        <input type=\"text\" name=\"ParticipantID\" \n          value={this.state.ParticipantID} onChange={this.onChange}/>\n        <br/>\n        <input type=\"button\" className=\"btn\" value=\"Start Experiment\" \n          onClick={this.showExpt}/>\n        <br/><br/>\n        Hi Researchers! You may enter any ID to preview your experiment. <br/>\n        Note: experiment preview will <b>NOT</b> record any data. \n      </div>\n      )\n  }\n}\n\nPreviewEnterID.propTypes = {\n  storeDBInfo: PropTypes.func.isRequired,\n  getExpt: PropTypes.func.isRequired,\n  expt: PropTypes.object.isRequired,\n  storePartID: PropTypes.func.isRequired,\n  participantID: PropTypes.string.isRequired,\n  storeQKeys: PropTypes.func.isRequired,\n  setNumQ: PropTypes.func.isRequired,\n  isFinalQ: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  expt: state.expt,\n  participantID: state.participantID\n})\n\nexport default connect(\n  mapStateToProps,\n  { storeDBInfo, storePartID, getExpt, storeQKeys, setNumQ, isFinalQ }\n)(PreviewEnterID);\n","import React, { Component } from 'react';\nimport axios from \"axios\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nimport { \n  getExpt,\n  sendExpt,\n  setNumQ,\n  isFinalQ\n} from \"../actions/dataActions\";\n\nimport Slider from \"../items/Slider\";\nimport StaticText from \"../items/StaticText\";\n// import NormalCurve from \"../items/NormalCurve.jsx\";\nimport NormalCurveSurvey from \"../items/NormalCurveSurvey\";\nimport Histogram from \"../items/Histogram\";\n\n/**\n * A preview version for researchers.\n * Note that data is put into the react store, but the final page doesn't \n * POST data to database. \n */\nclass PreviewExpt extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      whichItem: \"\"\n    }\n\n    this.onNextQuestion = this.onNextQuestion.bind(this);\n    this.onFinalSubmit = this.onFinalSubmit.bind(this);\n    this.whichSubmit = this.whichSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    this.getData();\n    const username = this.props.match.params.username;\n    const expt = this.props.match.params.expt;\n    if (!this.props.expt.participantID) {\n      alert(\"Please enter your unique ID\");\n      this.props.history.push(\"/preview/\" + username + \"/\" + expt);\n    }\n  }\n\n  // method to push user to the next question \n  nextQuestion() {\n    const username = this.props.match.params.username;\n    const expt = this.props.match.params.expt;\n    const nextQ = this.props.expt.questionKeys[this.props.expt.numQ + 1];\n    const lastQ = this.props.expt.questionKeys[this.props.expt.questionKeys.length - 1];\n    if (nextQ == lastQ) {\n      this.props.isFinalQ(true);\n    }\n    this.props.setNumQ(this.props.expt.numQ + 1);\n    this.props.history.push(\"/preview/\" + username + \"/\" + expt + \n      \"/\" + nextQ.toString());\n  }\n\n  // will be triggered when the next question is not the final question\n  onNextQuestion() {\n    // ###TODO###: add more if statements below that follow the templates \n    if (this.childSlider) {\n      this.childSlider.resetState();\n      this.nextQuestion();\n    };\n    if (this.childNormalCurve) {\n      this.childNormalCurve.resetState();\n      this.nextQuestion();\n    }; \n    if (this.childStaticText) {\n      this.nextQuestion();\n    };\n  }\n\n  // will be triggered when the next question is the final question \n  onFinalSubmit() {\n    this.props.history.push(\"/previewSuccess\");\n  }\n\n  // decides which button to show for the next question based whether the next\n  // question is the final question of the experiment\n  whichSubmit() {\n    return (\n      <div>\n        {\n          !this.props.expt.isFinalQ ? \n          <div>\n            {/* Please click \"I Confirm My Answer\" above before clicking \"Next Question\" <br/><br/> */}\n            <input type=\"submit\" className=\"extraPadding\" value=\"Next Question\"\n              onClick={this.onNextQuestion}/>\n          </div> :\n          <div>\n            Please click \"I Confirm My Answer\" above before clicking \"Submit\" <br/><br/>\n            This is the final question. <p></p>\n            <input type=\"submit\" className=\"extraPadding\" value=\"Submit\"\n              onClick={this.onFinalSubmit}/>\n            <div>\n              <br/><br/><br/><br/><br/><br/>\n            </div>\n          </div>\n        }\n      </div>\n    )\n  }\n\n  getData() {\n    const username = this.props.match.params.username;\n    // there will be problems if user's study name / experiment name inclues \"-\"\n    const studyName = this.props.match.params.expt.split(\"-\")[0];\n    const exptName = this.props.match.params.expt.split(\"-\")[1];\n    this.props.getExpt(username, studyName, exptName);\n  }\n\n  displayExpt() {\n    const username = this.props.match.params.username;\n    const expt = this.props.expt.exptToDisplay;\n    const key = this.props.match.params.qKey;\n    if (expt[key]) {\n      // ###TODO### add more if statements here for your experiment type\n      // follow the following format\n      // ATTENTION: do NOT call methods (especially those associated with API)\n      // inside these cases. React keeps rendering displayExpt(), which means\n      // your method(s) will be called repeatedly => not good. \n      switch(expt[key][\"Type\"]) {\n        case \"slider\":\n          const lowRange = expt[key][\"lowRange\"];\n          const highRange = expt[key][\"highRange\"];\n          const question = expt[key][\"Question\"];\n          const sliderCSVKey = expt[key][\"slider-key\"];\n          return (\n            <div className=\"container\">\n              <Slider childRef={ref => (this.childSlider = ref)}\n                question={question} sliderCSVKey={sliderCSVKey}\n                lowRange={lowRange} highRange={highRange} />\n              <br/>\n              {/* keep the following line */}\n              <this.whichSubmit />\n            </div>\n          )\n          break;\n        case \"static-text\":\n          const text = expt[key][\"Static Text\"];\n          return (\n            <div className=\"container\">\n              <StaticText childRef={ref => (this.childStaticText = ref)}\n                text={text}/>\n              <br/>\n              <this.whichSubmit />\n            </div>\n          )\n        case \"normal-curve\":\n          const questionNC = expt[key][\"Question\"];\n          const graph1 = expt[key][\"graph1key\"];\n          const graph2 = expt[key][\"graph2key\"];\n          const questionNCKey = expt[key][\"normal-curve-question-key\"];\n          const graph1legend = expt[key][\"normal-curve-legend-key1\"];\n          const graph2legend = expt[key][\"normal-curve-legend-key2\"];\n          const dataFileName = expt[key][\"FileName\"];\n          const dataFileContent = expt[key][\"FileContent\"];\n          return (\n            <div className=\"container\">\n              <NormalCurveSurvey childRef={ref => (this.childNormalCurve = ref)} \n                questionNC={questionNC} graph1={graph1} graph2={graph2} \n                questionNCKey={questionNCKey} \n                graph1legend={graph1legend}\n                graph2legend={graph2legend}\n                fileName={dataFileName} data={dataFileContent} />\n              <br/>\n              <this.whichSubmit />\n            </div>\n          )\n        case \"threshold\":\n          const questionHist = expt[key][\"Question\"];\n          const questionHistKey = expt[key][\"threshold-key\"];\n          const histLowRange = expt[key][\"lowRange\"];\n          const histHighRange = expt[key][\"highRange\"];\n          const histFileContent = expt[key][\"FileContent\"];\n          return (\n            <div className=\"container\">\n              <Histogram childRef={ref => (this.childHistogram = ref)} \n                questionHist={questionHist} \n                questionHistKey={questionHistKey}\n                histLowRange={histLowRange}\n                histHighRange={histHighRange} histData={histFileContent} />\n              <br/>\n              <this.whichSubmit />\n            </div>\n          )\n        default: \n          return (<div>Unknown Experiment Type</div>)\n      }\n    }\n  }\n\n\n  render() {\n    const exptName = this.props.match.params.expt;\n    const participant = this.props.expt.participantID;\n    return (\n      <div className=\"container\">\n      Experiment name: <br/>\n      <b>{exptName}</b>\n      <br/>\n      Participant ID: <br/>\n      <b>{participant}</b>\n      <br/><br/>\n      {this.displayExpt()}\n    </div>\n    )\n  }\n}\n\nPreviewExpt.propTypes = {\n  getExpt: PropTypes.func.isRequired,\n  expt: PropTypes.object.isRequired,\n  participantID: PropTypes.string.isRequired,\n  sendExpt: PropTypes.func.isRequired,\n  setNumQ: PropTypes.func.isRequired,\n  isFinalQ: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  expt: state.expt,\n  participantID: state.participantID\n})\n\nexport default connect(\n  mapStateToProps,\n  { getExpt, sendExpt, setNumQ, isFinalQ }\n)(PreviewExpt);\n","import React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\n/**\n * A preview version for researchers. \n * Note that data is never submitted to API. \n */\nclass PreviewSuccess extends Component {\n  componentDidMount() {\n    // console.log(this.props);\n    const username = this.props.expt.dbInfo.db;\n    const expt = this.props.expt.dbInfo.col;\n    if (!this.props.expt.answer.length == 0) {\n      const finalObj = {\n        participantID: this.props.expt.participantID\n      }\n      this.props.expt.answer.map(entry => {\n        finalObj[entry.que] = entry.ans\n      })\n      console.log(finalObj);\n    }\n  }\n\n  render() {\n    const link = this.props.expt.exptToDisplay.link;\n    const participantID = this.props.expt.participantID;\n    return (\n      <div className=\"container\">\n        <h1>Thank you for your submission!</h1> <br/>\n        You are <b>67%</b> done with the experiment! Now you will need to:  <br/><br/>\n        1. Please copy your ID shown below: <br/>\n        <b>{participantID}</b> <br/> \n        2. Please click on this <a href={link} target=\"_blank\">link</a>, paste your ID in the first page and complete the final survey. \n      </div>\n    )\n  }\n}\n\nPreviewSuccess.propTypes = {\n  expt: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n  expt: state.expt,\n})\n\nexport default connect(\n  mapStateToProps,\n  { }\n)(PreviewSuccess);\n","import React, { Component } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch, HashRouter } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nimport EnterID from \"./components/EnterID\";\nimport HomePage from \"./components/HomePage\";\nimport Experiment from \"./components/Experiment\";\nimport Success from \"./components/Success\";\n\nimport PreviewEnterID from \"./components/PreviewEnterID\";\nimport PreviewExpt from \"./components/PreviewExpt\";\nimport PreviewSuccess from \"./components/PreviewSuccess\"\n\nimport NormalCurveSurvey from \"./items/NormalCurveSurvey\";\nconst data = require('./inputDataPy2.json');\nconst data2 = require('./inputDataPy4.json');\n\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <HashRouter basename=\"/participant-app/\">\n        <div className=\"App\">\n          <Route exact path=\"/\" component={HomePage}/>\n          {/* <Route \n          exact path=\"/\" \n          component={\n            () => <NormalCurveSurvey data={data2} graph1=\"green\" graph2=\"red\" /> \n            }/> */}\n          <Route exact path=\"/success\" component={Success}/>\n          <Route exact path=\"/expt/:username/:expt\" component={EnterID}/>\n          <Route exact path=\"/expt/:username/:expt/:qKey\" component={Experiment}/>\n\n          <Route exact path=\"/previewSuccess\" component={PreviewSuccess}/>\n          <Route exact path=\"/preview/:username/:expt\" component={PreviewEnterID}/>\n          <Route exact path=\"/preview/:username/:expt/:qKey\" component={PreviewExpt}/>\n        </div>\n      </HashRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}